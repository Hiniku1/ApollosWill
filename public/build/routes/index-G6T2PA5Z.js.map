{
  "version": 3,
  "sources": ["../../../node_modules/semver-compare/index.js", "../../../node_modules/please-upgrade-node/index.js", "node-modules-polyfills:events", "node-modules-polyfills-commonjs:events", "node-modules-polyfills:process", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/inherits.js", "node-modules-polyfills:util", "node-modules-polyfills-commonjs:util", "../../../node_modules/denque/index.js", "node-modules-polyfills:net", "node-modules-polyfills-commonjs:net", "../../../node_modules/mariadb/lib/const/error-code.js", "../../../node_modules/mariadb/lib/misc/errors.js", "node-modules-polyfills:buffer", "node-modules-polyfills-commonjs:buffer", "../../../node_modules/safer-buffer/safer.js", "../../../node_modules/mariadb/node_modules/iconv-lite/lib/bom-handling.js", "node-modules-polyfills:string_decoder", "node-modules-polyfills-commonjs:string_decoder", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/internal.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/utf32.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/utf16.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/utf7.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/sbcs-codec.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/sbcs-data.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/sbcs-data-generated.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/dbcs-codec.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/dbcs-data.js", "../../../node_modules/mariadb/node_modules/iconv-lite/encodings/index.js", "../../../node_modules/mariadb/node_modules/iconv-lite/lib/streams.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/buffer-list.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/readable.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/writable.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/duplex.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/transform.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough.js", "node-modules-polyfills:stream", "node-modules-polyfills-commonjs:stream", "../../../node_modules/mariadb/node_modules/iconv-lite/lib/index.js", "../../../node_modules/moment/moment.js", "../../../node_modules/moment-timezone/moment-timezone.js", "../../../node_modules/moment-timezone/index.js", "../../../node_modules/mariadb/lib/io/packet.js", "../../../node_modules/mariadb/lib/io/packet-node-encoded.js", "../../../node_modules/mariadb/lib/io/packet-node-iconv.js", "../../../node_modules/mariadb/lib/const/collations.js", "../../../node_modules/mariadb/lib/cmd/encoder/text-encoder.js", "../../../node_modules/mariadb/lib/misc/utils.js", "../../../node_modules/mariadb/lib/io/packet-input-stream.js", "../../../node_modules/mariadb/lib/io/packet-output-stream.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/messages.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/zstream.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/utils.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/trees.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/adler32.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/crc32.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/deflate.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/inffast.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/inftrees.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/inflate.js", "../../../node_modules/rollup-plugin-node-polyfills/polyfills/zlib-lib/binding.js", "node-modules-polyfills:zlib", "node-modules-polyfills-commonjs:zlib", "../../../node_modules/mariadb/lib/io/compression-input-stream.js", "../../../node_modules/mariadb/lib/io/compression-output-stream.js", "../../../node_modules/mariadb/lib/const/server-status.js", "../../../node_modules/@alloc/quick-lru/index.js", "../../../node_modules/mariadb/lib/misc/connection-information.js", "node-modules-polyfills:tls", "node-modules-polyfills-commonjs:tls", "../../../node_modules/mariadb/lib/const/capabilities.js", "../../../node_modules/mariadb/lib/const/state-change.js", "../../../node_modules/mariadb/lib/cmd/class/ok-packet.js", "../../../node_modules/mariadb/lib/cmd/command.js", "../../../node_modules/mariadb/lib/cmd/handshake/initial-handshake.js", "../../../node_modules/mariadb/lib/cmd/handshake/auth/plugin-auth.js", "node-modules-polyfills:crypto", "node-modules-polyfills-commonjs:crypto", "../../../node_modules/mariadb/lib/cmd/handshake/auth/native-password-auth.js", "../../../node_modules/mariadb/lib/cmd/handshake/auth/ed25519-password-auth.js", "node-modules-polyfills:os", "node-modules-polyfills-commonjs:os", "../../../node_modules/mariadb/lib/cmd/handshake/client-handshake-response.js", "../../../node_modules/mariadb/lib/cmd/handshake/ssl-request.js", "../../../node_modules/mariadb/lib/cmd/handshake/client-capabilities.js", "node-modules-polyfills-commonjs:process", "../../../node_modules/mariadb/lib/cmd/handshake/auth/clear-password-auth.js", "../../../node_modules/mariadb/lib/cmd/handshake/auth/pam-password-auth.js", "node-modules-polyfills:fs", "node-modules-polyfills-commonjs:fs", "../../../node_modules/mariadb/lib/cmd/handshake/auth/sha256-password-auth.js", "../../../node_modules/mariadb/lib/cmd/handshake/auth/caching-sha2-password-auth.js", "../../../node_modules/mariadb/lib/cmd/handshake/handshake.js", "../../../node_modules/mariadb/lib/cmd/quit.js", "../../../node_modules/mariadb/lib/cmd/ping.js", "../../../node_modules/mariadb/lib/cmd/reset.js", "../../../node_modules/mariadb/lib/const/field-type.js", "../../../node_modules/mariadb/lib/const/field-detail.js", "../../../node_modules/mariadb/lib/cmd/column-definition.js", "../../../node_modules/mariadb/lib/misc/parse.js", "../../../node_modules/mariadb/lib/cmd/decoder/binary-decoder.js", "../../../node_modules/mariadb/lib/cmd/decoder/text-decoder.js", "../../../node_modules/mariadb/lib/cmd/parser.js", "../../../node_modules/mariadb/lib/cmd/query.js", "../../../node_modules/mariadb/lib/cmd/encoder/binary-encoder.js", "../../../node_modules/mariadb/lib/cmd/class/prepare-result-packet.js", "../../../node_modules/mariadb/lib/cmd/class/cached-prepare-result-packet.js", "../../../node_modules/mariadb/lib/cmd/prepare.js", "../../../node_modules/mariadb/lib/cmd/execute.js", "../../../node_modules/mariadb/lib/cmd/close-prepare.js", "../../../node_modules/mariadb/lib/cmd/batch-bulk.js", "../../../node_modules/mariadb/lib/cmd/change-user.js", "../../../node_modules/mariadb/lib/const/connection_status.js", "../../../node_modules/mariadb/lib/connection.js", "../../../node_modules/mariadb/lib/cmd/stream.js", "../../../node_modules/mariadb/lib/connection-promise.js", "../../../node_modules/mariadb/lib/pool.js", "../../../node_modules/mariadb/lib/pool-promise.js", "../../../node_modules/mariadb/lib/config/cluster-options.js", "../../../node_modules/mariadb/lib/config/connection-options.js", "../../../node_modules/mariadb/lib/config/pool-options.js", "../../../node_modules/mariadb/lib/connection-callback.js", "../../../node_modules/mariadb/lib/pool-callback.js", "../../../node_modules/mariadb/lib/filtered-cluster.js", "../../../node_modules/mariadb/lib/cluster.js", "../../../node_modules/mariadb/promise.js", "browser-route-module:/home/hiniku/ApollosWill/app/routes/index.tsx?browser", "../../../app/routes/index.tsx"],
  "sourcesContent": ["module.exports = function cmp (a, b) {\n    var pa = a.split('.');\n    var pb = b.split('.');\n    for (var i = 0; i < 3; i++) {\n        var na = Number(pa[i]);\n        var nb = Number(pb[i]);\n        if (na > nb) return 1;\n        if (nb > na) return -1;\n        if (!isNaN(na) && isNaN(nb)) return 1;\n        if (isNaN(na) && !isNaN(nb)) return -1;\n    }\n    return 0;\n};\n", "var semverCompare = require('semver-compare')\n\nmodule.exports = function pleaseUpgradeNode(pkg, opts) {\n  var opts = opts || {}\n  var requiredVersion = pkg.engines.node.replace('>=', '')\n  var currentVersion = process.version.replace('v', '')\n  if (semverCompare(currentVersion, requiredVersion) === -1) {\n    if (opts.message) {\n      console.error(opts.message(requiredVersion))\n    } else {\n      console.error(\n        pkg.name +\n          ' requires at least version ' +\n          requiredVersion +\n          ' of Node, please upgrade'\n      )\n    }\n\n    if (opts.hasOwnProperty('exitCode')) {\n      process.exit(opts.exitCode)\n    } else {\n      process.exit(1)\n    }\n  }\n}\n", "'use strict';\n\nvar domain;\n\n// This constructor is used to store event handlers. Instantiating this is\n// faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n// object (tested with v8 v4.9).\nfunction EventHandlers() {}\nEventHandlers.prototype = Object.create(null);\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nexport default EventEmitter;\nexport {EventEmitter};\n\n// nodejs oddity\n// require('events') === require('events').EventEmitter\nEventEmitter.EventEmitter = EventEmitter\n\nEventEmitter.usingDomains = false;\n\nEventEmitter.prototype.domain = undefined;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\nEventEmitter.init = function() {\n  this.domain = null;\n  if (EventEmitter.usingDomains) {\n    // if there is an active domain, then attach to it.\n    if (domain.active && !(this instanceof domain.Domain)) {\n      this.domain = domain.active;\n    }\n  }\n\n  if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = new EventHandlers();\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || isNaN(n))\n    throw new TypeError('\"n\" argument must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\n// These standalone emit* functions are used to optimize calling of event\n// handlers for fast cases because emit() itself often has a variable number of\n// arguments and can be deoptimized because of that. These functions always have\n// the same number of arguments and thus do not get deoptimized, so the code\n// inside them can execute faster.\nfunction emitNone(handler, isFn, self) {\n  if (isFn)\n    handler.call(self);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self);\n  }\n}\nfunction emitOne(handler, isFn, self, arg1) {\n  if (isFn)\n    handler.call(self, arg1);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1);\n  }\n}\nfunction emitTwo(handler, isFn, self, arg1, arg2) {\n  if (isFn)\n    handler.call(self, arg1, arg2);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2);\n  }\n}\nfunction emitThree(handler, isFn, self, arg1, arg2, arg3) {\n  if (isFn)\n    handler.call(self, arg1, arg2, arg3);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].call(self, arg1, arg2, arg3);\n  }\n}\n\nfunction emitMany(handler, isFn, self, args) {\n  if (isFn)\n    handler.apply(self, args);\n  else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      listeners[i].apply(self, args);\n  }\n}\n\nEventEmitter.prototype.emit = function emit(type) {\n  var er, handler, len, args, i, events, domain;\n  var needDomainExit = false;\n  var doError = (type === 'error');\n\n  events = this._events;\n  if (events)\n    doError = (doError && events.error == null);\n  else if (!doError)\n    return false;\n\n  domain = this.domain;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    er = arguments[1];\n    if (domain) {\n      if (!er)\n        er = new Error('Uncaught, unspecified \"error\" event');\n      er.domainEmitter = this;\n      er.domain = domain;\n      er.domainThrown = false;\n      domain.emit('error', er);\n    } else if (er instanceof Error) {\n      throw er; // Unhandled 'error' event\n    } else {\n      // At least give some kind of context to the user\n      var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n      err.context = er;\n      throw err;\n    }\n    return false;\n  }\n\n  handler = events[type];\n\n  if (!handler)\n    return false;\n\n  var isFn = typeof handler === 'function';\n  len = arguments.length;\n  switch (len) {\n    // fast cases\n    case 1:\n      emitNone(handler, isFn, this);\n      break;\n    case 2:\n      emitOne(handler, isFn, this, arguments[1]);\n      break;\n    case 3:\n      emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n      break;\n    case 4:\n      emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n      break;\n    // slower\n    default:\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n      emitMany(handler, isFn, this, args);\n  }\n\n  if (needDomainExit)\n    domain.exit();\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n\n  events = target._events;\n  if (!events) {\n    events = target._events = new EventHandlers();\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (!existing) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] :\n                                          [existing, listener];\n    } else {\n      // If we've already got an array, just append.\n      if (prepend) {\n        existing.unshift(listener);\n      } else {\n        existing.push(listener);\n      }\n    }\n\n    // Check for listener leak\n    if (!existing.warned) {\n      m = $getMaxListeners(target);\n      if (m && m > 0 && existing.length > m) {\n        existing.warned = true;\n        var w = new Error('Possible EventEmitter memory leak detected. ' +\n                            existing.length + ' ' + type + ' listeners added. ' +\n                            'Use emitter.setMaxListeners() to increase limit');\n        w.name = 'MaxListenersExceededWarning';\n        w.emitter = target;\n        w.type = type;\n        w.count = existing.length;\n        emitWarning(w);\n      }\n    }\n  }\n\n  return target;\n}\nfunction emitWarning(e) {\n  typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n}\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction _onceWrap(target, type, listener) {\n  var fired = false;\n  function g() {\n    target.removeListener(type, g);\n    if (!fired) {\n      fired = true;\n      listener.apply(target, arguments);\n    }\n  }\n  g.listener = listener;\n  return g;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function')\n    throw new TypeError('\"listener\" argument must be a function');\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      list = events[type];\n      if (!list)\n        return this;\n\n      if (list === listener || (list.listener && list.listener === listener)) {\n        if (--this._eventsCount === 0)\n          this._events = new EventHandlers();\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length; i-- > 0;) {\n          if (list[i] === listener ||\n              (list[i].listener && list[i].listener === listener)) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (list.length === 1) {\n          list[0] = undefined;\n          if (--this._eventsCount === 0) {\n            this._events = new EventHandlers();\n            return this;\n          } else {\n            delete events[type];\n          }\n        } else {\n          spliceOne(list, position);\n        }\n\n        if (events.removeListener)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events;\n\n      events = this._events;\n      if (!events)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (!events.removeListener) {\n        if (arguments.length === 0) {\n          this._events = new EventHandlers();\n          this._eventsCount = 0;\n        } else if (events[type]) {\n          if (--this._eventsCount === 0)\n            this._events = new EventHandlers();\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        for (var i = 0, key; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners) {\n        // LIFO order\n        do {\n          this.removeListener(type, listeners[listeners.length - 1]);\n        } while (listeners[0]);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  var evlistener;\n  var ret;\n  var events = this._events;\n\n  if (!events)\n    ret = [];\n  else {\n    evlistener = events[type];\n    if (!evlistener)\n      ret = [];\n    else if (typeof evlistener === 'function')\n      ret = [evlistener.listener || evlistener];\n    else\n      ret = unwrapListeners(evlistener);\n  }\n\n  return ret;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n};\n\n// About 1.5x faster than the two-arg version of Array#splice().\nfunction spliceOne(list, index) {\n  for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n    list[i] = list[k];\n  list.pop();\n}\n\nfunction arrayClone(arr, i) {\n  var copy = new Array(i);\n  while (i--)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n", "\nconst polyfill = require('events')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\nvar cachedSetTimeout = defaultSetTimout;\nvar cachedClearTimeout = defaultClearTimeout;\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nvar title = 'browser';\nvar platform = 'browser';\nvar browser = true;\nvar env = {};\nvar argv = [];\nvar version = ''; // empty string to avoid regexp issues\nvar versions = {};\nvar release = {};\nvar config = {};\n\nfunction noop() {}\n\nvar on = noop;\nvar addListener = noop;\nvar once = noop;\nvar off = noop;\nvar removeListener = noop;\nvar removeAllListeners = noop;\nvar emit = noop;\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported');\n}\n\nfunction cwd () { return '/' }\nfunction chdir (dir) {\n    throw new Error('process.chdir is not supported');\n}function umask() { return 0; }\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime() };\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp){\n  var clocktime = performanceNow.call(performance)*1e-3;\n  var seconds = Math.floor(clocktime);\n  var nanoseconds = Math.floor((clocktime%1)*1e9);\n  if (previousTimestamp) {\n    seconds = seconds - previousTimestamp[0];\n    nanoseconds = nanoseconds - previousTimestamp[1];\n    if (nanoseconds<0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [seconds,nanoseconds]\n}\n\nvar startTime = new Date();\nfunction uptime() {\n  var currentTime = new Date();\n  var dif = currentTime - startTime;\n  return dif / 1000;\n}\n\nvar browser$1 = {\n  nextTick: nextTick,\n  title: title,\n  browser: browser,\n  env: env,\n  argv: argv,\n  version: version,\n  versions: versions,\n  on: on,\n  addListener: addListener,\n  once: once,\n  off: off,\n  removeListener: removeListener,\n  removeAllListeners: removeAllListeners,\n  emit: emit,\n  binding: binding,\n  cwd: cwd,\n  chdir: chdir,\n  umask: umask,\n  hrtime: hrtime,\n  platform: platform,\n  release: release,\n  config: config,\n  uptime: uptime\n};\n\nexport default browser$1;\nexport { addListener, argv, binding, browser, chdir, config, cwd, emit, env, hrtime, nextTick, off, on, once, platform, release, removeAllListeners, removeListener, title, umask, uptime, version, versions };\n", "\nvar inherits;\nif (typeof Object.create === 'function'){\n  inherits = function inherits(ctor, superCtor) {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  inherits = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\nexport default inherits;\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nimport process from 'process';\nvar formatRegExp = /%[sdj%]/g;\nexport function format(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexport function deprecate(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexport function debuglog(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = 0;\n      debugs[set] = function() {\n        var msg = format.apply(null, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nexport function inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    _extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexport function isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexport function isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexport function isNull(arg) {\n  return arg === null;\n}\n\nexport function isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexport function isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexport function isString(arg) {\n  return typeof arg === 'string';\n}\n\nexport function isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexport function isUndefined(arg) {\n  return arg === void 0;\n}\n\nexport function isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexport function isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexport function isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexport function isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexport function isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexport function isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\n\nexport function isBuffer(maybeBuf) {\n  return Buffer.isBuffer(maybeBuf);\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexport function log() {\n  console.log('%s - %s', timestamp(), format.apply(null, arguments));\n}\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nimport inherits from './inherits';\nexport {inherits}\n\nexport function _extend(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport default {\n  inherits: inherits,\n  _extend: _extend,\n  log: log,\n  isBuffer: isBuffer,\n  isPrimitive: isPrimitive,\n  isFunction: isFunction,\n  isError: isError,\n  isDate: isDate,\n  isObject: isObject,\n  isRegExp: isRegExp,\n  isUndefined: isUndefined,\n  isSymbol: isSymbol,\n  isString: isString,\n  isNumber: isNumber,\n  isNullOrUndefined: isNullOrUndefined,\n  isNull: isNull,\n  isBoolean: isBoolean,\n  isArray: isArray,\n  inspect: inspect,\n  deprecate: deprecate,\n  format: format,\n  debuglog: debuglog\n}\n", "\nconst polyfill = require('util')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array, options) {\n  var options = options || {};\n\n  this._head = 0;\n  this._tail = 0;\n  this._capacity = options.capacity;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * --------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peekAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (arguments.length === 0) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._capacity && this.size() > this._capacity) this.pop();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (arguments.length === 0) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n  if (this._capacity && this.size() > this._capacity) {\n    this.shift();\n  }\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = (i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length <<= 1;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n", "export default {};\n", "\nconst polyfill = require('net')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "'use strict';\n\n/**\n * File generated using test/tools/generate-mariadb.js\n * from MariaDB 10.5\n *\n * !!!!!! DO NOT CHANGE MANUALLY !!!!!!\n */\n\nlet codes = {};\ncodes[120] = 'HA_ERR_KEY_NOT_FOUND';\ncodes[121] = 'HA_ERR_FOUND_DUPP_KEY';\ncodes[122] = 'HA_ERR_INTERNAL_ERROR';\ncodes[123] = 'HA_ERR_RECORD_CHANGED';\ncodes[124] = 'HA_ERR_WRONG_INDEX';\ncodes[126] = 'HA_ERR_CRASHED';\ncodes[127] = 'HA_ERR_WRONG_IN_RECORD';\ncodes[128] = 'HA_ERR_OUT_OF_MEM';\ncodes[130] = 'HA_ERR_NOT_A_TABLE';\ncodes[131] = 'HA_ERR_WRONG_COMMAND';\ncodes[132] = 'HA_ERR_OLD_FILE';\ncodes[133] = 'HA_ERR_NO_ACTIVE_RECORD';\ncodes[134] = 'HA_ERR_RECORD_DELETED';\ncodes[135] = 'HA_ERR_RECORD_FILE_FULL';\ncodes[136] = 'HA_ERR_INDEX_FILE_FULL';\ncodes[137] = 'HA_ERR_END_OF_FILE';\ncodes[138] = 'HA_ERR_UNSUPPORTED';\ncodes[139] = 'HA_ERR_TO_BIG_ROW';\ncodes[140] = 'HA_WRONG_CREATE_OPTION';\ncodes[141] = 'HA_ERR_FOUND_DUPP_UNIQUE';\ncodes[142] = 'HA_ERR_UNKNOWN_CHARSET';\ncodes[143] = 'HA_ERR_WRONG_MRG_TABLE_DEF';\ncodes[144] = 'HA_ERR_CRASHED_ON_REPAIR';\ncodes[145] = 'HA_ERR_CRASHED_ON_USAGE';\ncodes[146] = 'HA_ERR_LOCK_WAIT_TIMEOUT';\ncodes[147] = 'HA_ERR_LOCK_TABLE_FULL';\ncodes[148] = 'HA_ERR_READ_ONLY_TRANSACTION';\ncodes[149] = 'HA_ERR_LOCK_DEADLOCK';\ncodes[150] = 'HA_ERR_CANNOT_ADD_FOREIGN';\ncodes[151] = 'HA_ERR_NO_REFERENCED_ROW';\ncodes[152] = 'HA_ERR_ROW_IS_REFERENCED';\ncodes[153] = 'HA_ERR_NO_SAVEPOINT';\ncodes[154] = 'HA_ERR_NON_UNIQUE_BLOCK_SIZE';\ncodes[155] = 'HA_ERR_NO_SUCH_TABLE';\ncodes[156] = 'HA_ERR_TABLE_EXIST';\ncodes[157] = 'HA_ERR_NO_CONNECTION';\ncodes[158] = 'HA_ERR_NULL_IN_SPATIAL';\ncodes[159] = 'HA_ERR_TABLE_DEF_CHANGED';\ncodes[160] = 'HA_ERR_NO_PARTITION_FOUND';\ncodes[161] = 'HA_ERR_RBR_LOGGING_FAILED';\ncodes[162] = 'HA_ERR_DROP_INDEX_FK';\ncodes[163] = 'HA_ERR_FOREIGN_DUPLICATE_KEY';\ncodes[164] = 'HA_ERR_TABLE_NEEDS_UPGRADE';\ncodes[165] = 'HA_ERR_TABLE_READONLY';\ncodes[166] = 'HA_ERR_AUTOINC_READ_FAILED';\ncodes[167] = 'HA_ERR_AUTOINC_ERANGE';\ncodes[168] = 'HA_ERR_GENERIC';\ncodes[169] = 'HA_ERR_RECORD_IS_THE_SAME';\ncodes[170] = 'HA_ERR_LOGGING_IMPOSSIBLE';\ncodes[171] = 'HA_ERR_CORRUPT_EVENT';\ncodes[172] = 'HA_ERR_NEW_FILE';\ncodes[173] = 'HA_ERR_ROWS_EVENT_APPLY';\ncodes[174] = 'HA_ERR_INITIALIZATION';\ncodes[175] = 'HA_ERR_FILE_TOO_SHORT';\ncodes[176] = 'HA_ERR_WRONG_CRC';\ncodes[177] = 'HA_ERR_TOO_MANY_CONCURRENT_TRXS';\ncodes[178] = 'HA_ERR_NOT_IN_LOCK_PARTITIONS';\ncodes[179] = 'HA_ERR_INDEX_COL_TOO_LONG';\ncodes[180] = 'HA_ERR_INDEX_CORRUPT';\ncodes[181] = 'HA_ERR_UNDO_REC_TOO_BIG';\ncodes[182] = 'HA_FTS_INVALID_DOCID';\ncodes[183] = 'HA_ERR_TABLE_IN_FK_CHECK';\ncodes[184] = 'HA_ERR_TABLESPACE_EXISTS';\ncodes[185] = 'HA_ERR_TOO_MANY_FIELDS';\ncodes[186] = 'HA_ERR_ROW_IN_WRONG_PARTITION';\ncodes[187] = 'HA_ERR_ROW_NOT_VISIBLE';\ncodes[188] = 'HA_ERR_ABORTED_BY_USER';\ncodes[189] = 'HA_ERR_DISK_FULL';\ncodes[190] = 'HA_ERR_INCOMPATIBLE_DEFINITION';\ncodes[191] = 'HA_ERR_FTS_TOO_MANY_WORDS_IN_PHRASE';\ncodes[192] = 'HA_ERR_DECRYPTION_FAILED';\ncodes[193] = 'HA_ERR_FK_DEPTH_EXCEEDED';\ncodes[194] = 'HA_ERR_TABLESPACE_MISSING';\ncodes[195] = 'HA_ERR_SEQUENCE_INVALID_DATA';\ncodes[196] = 'HA_ERR_SEQUENCE_RUN_OUT';\ncodes[1000] = 'ER_HASHCHK';\ncodes[1001] = 'ER_NISAMCHK';\ncodes[1002] = 'ER_NO';\ncodes[1003] = 'ER_YES';\ncodes[1004] = 'ER_CANT_CREATE_FILE';\ncodes[1005] = 'ER_CANT_CREATE_TABLE';\ncodes[1006] = 'ER_CANT_CREATE_DB';\ncodes[1007] = 'ER_DB_CREATE_EXISTS';\ncodes[1008] = 'ER_DB_DROP_EXISTS';\ncodes[1009] = 'ER_DB_DROP_DELETE';\ncodes[1010] = 'ER_DB_DROP_RMDIR';\ncodes[1011] = 'ER_CANT_DELETE_FILE';\ncodes[1012] = 'ER_CANT_FIND_SYSTEM_REC';\ncodes[1013] = 'ER_CANT_GET_STAT';\ncodes[1014] = 'ER_CANT_GET_WD';\ncodes[1015] = 'ER_CANT_LOCK';\ncodes[1016] = 'ER_CANT_OPEN_FILE';\ncodes[1017] = 'ER_FILE_NOT_FOUND';\ncodes[1018] = 'ER_CANT_READ_DIR';\ncodes[1019] = 'ER_CANT_SET_WD';\ncodes[1020] = 'ER_CHECKREAD';\ncodes[1021] = 'ER_DISK_FULL';\ncodes[1022] = 'ER_DUP_KEY';\ncodes[1023] = 'ER_ERROR_ON_CLOSE';\ncodes[1024] = 'ER_ERROR_ON_READ';\ncodes[1025] = 'ER_ERROR_ON_RENAME';\ncodes[1026] = 'ER_ERROR_ON_WRITE';\ncodes[1027] = 'ER_FILE_USED';\ncodes[1028] = 'ER_FILSORT_ABORT';\ncodes[1029] = 'ER_FORM_NOT_FOUND';\ncodes[1030] = 'ER_GET_ERRNO';\ncodes[1031] = 'ER_ILLEGAL_HA';\ncodes[1032] = 'ER_KEY_NOT_FOUND';\ncodes[1033] = 'ER_NOT_FORM_FILE';\ncodes[1034] = 'ER_NOT_KEYFILE';\ncodes[1035] = 'ER_OLD_KEYFILE';\ncodes[1036] = 'ER_OPEN_AS_READONLY';\ncodes[1037] = 'ER_OUTOFMEMORY';\ncodes[1038] = 'ER_OUT_OF_SORTMEMORY';\ncodes[1039] = 'ER_UNEXPECTED_EOF';\ncodes[1040] = 'ER_CON_COUNT_ERROR';\ncodes[1041] = 'ER_OUT_OF_RESOURCES';\ncodes[1042] = 'ER_BAD_HOST_ERROR';\ncodes[1043] = 'ER_HANDSHAKE_ERROR';\ncodes[1044] = 'ER_DBACCESS_DENIED_ERROR';\ncodes[1045] = 'ER_ACCESS_DENIED_ERROR';\ncodes[1046] = 'ER_NO_DB_ERROR';\ncodes[1047] = 'ER_UNKNOWN_COM_ERROR';\ncodes[1048] = 'ER_BAD_NULL_ERROR';\ncodes[1049] = 'ER_BAD_DB_ERROR';\ncodes[1050] = 'ER_TABLE_EXISTS_ERROR';\ncodes[1051] = 'ER_BAD_TABLE_ERROR';\ncodes[1052] = 'ER_NON_UNIQ_ERROR';\ncodes[1053] = 'ER_SERVER_SHUTDOWN';\ncodes[1054] = 'ER_BAD_FIELD_ERROR';\ncodes[1055] = 'ER_WRONG_FIELD_WITH_GROUP';\ncodes[1056] = 'ER_WRONG_GROUP_FIELD';\ncodes[1057] = 'ER_WRONG_SUM_SELECT';\ncodes[1058] = 'ER_WRONG_VALUE_COUNT';\ncodes[1059] = 'ER_TOO_LONG_IDENT';\ncodes[1060] = 'ER_DUP_FIELDNAME';\ncodes[1061] = 'ER_DUP_KEYNAME';\ncodes[1062] = 'ER_DUP_ENTRY';\ncodes[1063] = 'ER_WRONG_FIELD_SPEC';\ncodes[1064] = 'ER_PARSE_ERROR';\ncodes[1065] = 'ER_EMPTY_QUERY';\ncodes[1066] = 'ER_NONUNIQ_TABLE';\ncodes[1067] = 'ER_INVALID_DEFAULT';\ncodes[1068] = 'ER_MULTIPLE_PRI_KEY';\ncodes[1069] = 'ER_TOO_MANY_KEYS';\ncodes[1070] = 'ER_TOO_MANY_KEY_PARTS';\ncodes[1071] = 'ER_TOO_LONG_KEY';\ncodes[1072] = 'ER_KEY_COLUMN_DOES_NOT_EXITS';\ncodes[1073] = 'ER_BLOB_USED_AS_KEY';\ncodes[1074] = 'ER_TOO_BIG_FIELDLENGTH';\ncodes[1075] = 'ER_WRONG_AUTO_KEY';\ncodes[1076] = 'ER_BINLOG_CANT_DELETE_GTID_DOMAIN';\ncodes[1077] = 'ER_NORMAL_SHUTDOWN';\ncodes[1078] = 'ER_GOT_SIGNAL';\ncodes[1079] = 'ER_SHUTDOWN_COMPLETE';\ncodes[1080] = 'ER_FORCING_CLOSE';\ncodes[1081] = 'ER_IPSOCK_ERROR';\ncodes[1082] = 'ER_NO_SUCH_INDEX';\ncodes[1083] = 'ER_WRONG_FIELD_TERMINATORS';\ncodes[1084] = 'ER_BLOBS_AND_NO_TERMINATED';\ncodes[1085] = 'ER_TEXTFILE_NOT_READABLE';\ncodes[1086] = 'ER_FILE_EXISTS_ERROR';\ncodes[1087] = 'ER_LOAD_INFO';\ncodes[1088] = 'ER_ALTER_INFO';\ncodes[1089] = 'ER_WRONG_SUB_KEY';\ncodes[1090] = 'ER_CANT_REMOVE_ALL_FIELDS';\ncodes[1091] = 'ER_CANT_DROP_FIELD_OR_KEY';\ncodes[1092] = 'ER_INSERT_INFO';\ncodes[1093] = 'ER_UPDATE_TABLE_USED';\ncodes[1094] = 'ER_NO_SUCH_THREAD';\ncodes[1095] = 'ER_KILL_DENIED_ERROR';\ncodes[1096] = 'ER_NO_TABLES_USED';\ncodes[1097] = 'ER_TOO_BIG_SET';\ncodes[1098] = 'ER_NO_UNIQUE_LOGFILE';\ncodes[1099] = 'ER_TABLE_NOT_LOCKED_FOR_WRITE';\ncodes[1100] = 'ER_TABLE_NOT_LOCKED';\ncodes[1101] = 'ER_UNUSED_17';\ncodes[1102] = 'ER_WRONG_DB_NAME';\ncodes[1103] = 'ER_WRONG_TABLE_NAME';\ncodes[1104] = 'ER_TOO_BIG_SELECT';\ncodes[1105] = 'ER_UNKNOWN_ERROR';\ncodes[1106] = 'ER_UNKNOWN_PROCEDURE';\ncodes[1107] = 'ER_WRONG_PARAMCOUNT_TO_PROCEDURE';\ncodes[1108] = 'ER_WRONG_PARAMETERS_TO_PROCEDURE';\ncodes[1109] = 'ER_UNKNOWN_TABLE';\ncodes[1110] = 'ER_FIELD_SPECIFIED_TWICE';\ncodes[1111] = 'ER_INVALID_GROUP_FUNC_USE';\ncodes[1112] = 'ER_UNSUPPORTED_EXTENSION';\ncodes[1113] = 'ER_TABLE_MUST_HAVE_COLUMNS';\ncodes[1114] = 'ER_RECORD_FILE_FULL';\ncodes[1115] = 'ER_UNKNOWN_CHARACTER_SET';\ncodes[1116] = 'ER_TOO_MANY_TABLES';\ncodes[1117] = 'ER_TOO_MANY_FIELDS';\ncodes[1118] = 'ER_TOO_BIG_ROWSIZE';\ncodes[1119] = 'ER_STACK_OVERRUN';\ncodes[1120] = 'ER_WRONG_OUTER_JOIN';\ncodes[1121] = 'ER_NULL_COLUMN_IN_INDEX';\ncodes[1122] = 'ER_CANT_FIND_UDF';\ncodes[1123] = 'ER_CANT_INITIALIZE_UDF';\ncodes[1124] = 'ER_UDF_NO_PATHS';\ncodes[1125] = 'ER_UDF_EXISTS';\ncodes[1126] = 'ER_CANT_OPEN_LIBRARY';\ncodes[1127] = 'ER_CANT_FIND_DL_ENTRY';\ncodes[1128] = 'ER_FUNCTION_NOT_DEFINED';\ncodes[1129] = 'ER_HOST_IS_BLOCKED';\ncodes[1130] = 'ER_HOST_NOT_PRIVILEGED';\ncodes[1131] = 'ER_PASSWORD_ANONYMOUS_USER';\ncodes[1132] = 'ER_PASSWORD_NOT_ALLOWED';\ncodes[1133] = 'ER_PASSWORD_NO_MATCH';\ncodes[1134] = 'ER_UPDATE_INFO';\ncodes[1135] = 'ER_CANT_CREATE_THREAD';\ncodes[1136] = 'ER_WRONG_VALUE_COUNT_ON_ROW';\ncodes[1137] = 'ER_CANT_REOPEN_TABLE';\ncodes[1138] = 'ER_INVALID_USE_OF_NULL';\ncodes[1139] = 'ER_REGEXP_ERROR';\ncodes[1140] = 'ER_MIX_OF_GROUP_FUNC_AND_FIELDS';\ncodes[1141] = 'ER_NONEXISTING_GRANT';\ncodes[1142] = 'ER_TABLEACCESS_DENIED_ERROR';\ncodes[1143] = 'ER_COLUMNACCESS_DENIED_ERROR';\ncodes[1144] = 'ER_ILLEGAL_GRANT_FOR_TABLE';\ncodes[1145] = 'ER_GRANT_WRONG_HOST_OR_USER';\ncodes[1146] = 'ER_NO_SUCH_TABLE';\ncodes[1147] = 'ER_NONEXISTING_TABLE_GRANT';\ncodes[1148] = 'ER_NOT_ALLOWED_COMMAND';\ncodes[1149] = 'ER_SYNTAX_ERROR';\ncodes[1150] = 'ER_DELAYED_CANT_CHANGE_LOCK';\ncodes[1151] = 'ER_TOO_MANY_DELAYED_THREADS';\ncodes[1152] = 'ER_ABORTING_CONNECTION';\ncodes[1153] = 'ER_NET_PACKET_TOO_LARGE';\ncodes[1154] = 'ER_NET_READ_ERROR_FROM_PIPE';\ncodes[1155] = 'ER_NET_FCNTL_ERROR';\ncodes[1156] = 'ER_NET_PACKETS_OUT_OF_ORDER';\ncodes[1157] = 'ER_NET_UNCOMPRESS_ERROR';\ncodes[1158] = 'ER_NET_READ_ERROR';\ncodes[1159] = 'ER_NET_READ_INTERRUPTED';\ncodes[1160] = 'ER_NET_ERROR_ON_WRITE';\ncodes[1161] = 'ER_NET_WRITE_INTERRUPTED';\ncodes[1162] = 'ER_TOO_LONG_STRING';\ncodes[1163] = 'ER_TABLE_CANT_HANDLE_BLOB';\ncodes[1164] = 'ER_TABLE_CANT_HANDLE_AUTO_INCREMENT';\ncodes[1165] = 'ER_DELAYED_INSERT_TABLE_LOCKED';\ncodes[1166] = 'ER_WRONG_COLUMN_NAME';\ncodes[1167] = 'ER_WRONG_KEY_COLUMN';\ncodes[1168] = 'ER_WRONG_MRG_TABLE';\ncodes[1169] = 'ER_DUP_UNIQUE';\ncodes[1170] = 'ER_BLOB_KEY_WITHOUT_LENGTH';\ncodes[1171] = 'ER_PRIMARY_CANT_HAVE_NULL';\ncodes[1172] = 'ER_TOO_MANY_ROWS';\ncodes[1173] = 'ER_REQUIRES_PRIMARY_KEY';\ncodes[1174] = 'ER_NO_RAID_COMPILED';\ncodes[1175] = 'ER_UPDATE_WITHOUT_KEY_IN_SAFE_MODE';\ncodes[1176] = 'ER_KEY_DOES_NOT_EXITS';\ncodes[1177] = 'ER_CHECK_NO_SUCH_TABLE';\ncodes[1178] = 'ER_CHECK_NOT_IMPLEMENTED';\ncodes[1179] = 'ER_CANT_DO_THIS_DURING_AN_TRANSACTION';\ncodes[1180] = 'ER_ERROR_DURING_COMMIT';\ncodes[1181] = 'ER_ERROR_DURING_ROLLBACK';\ncodes[1182] = 'ER_ERROR_DURING_FLUSH_LOGS';\ncodes[1183] = 'ER_ERROR_DURING_CHECKPOINT';\ncodes[1184] = 'ER_NEW_ABORTING_CONNECTION';\ncodes[1185] = 'ER_UNUSED_10';\ncodes[1186] = 'ER_FLUSH_MASTER_BINLOG_CLOSED';\ncodes[1187] = 'ER_INDEX_REBUILD';\ncodes[1188] = 'ER_MASTER';\ncodes[1189] = 'ER_MASTER_NET_READ';\ncodes[1190] = 'ER_MASTER_NET_WRITE';\ncodes[1191] = 'ER_FT_MATCHING_KEY_NOT_FOUND';\ncodes[1192] = 'ER_LOCK_OR_ACTIVE_TRANSACTION';\ncodes[1193] = 'ER_UNKNOWN_SYSTEM_VARIABLE';\ncodes[1194] = 'ER_CRASHED_ON_USAGE';\ncodes[1195] = 'ER_CRASHED_ON_REPAIR';\ncodes[1196] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK';\ncodes[1197] = 'ER_TRANS_CACHE_FULL';\ncodes[1198] = 'ER_SLAVE_MUST_STOP';\ncodes[1199] = 'ER_SLAVE_NOT_RUNNING';\ncodes[1200] = 'ER_BAD_SLAVE';\ncodes[1201] = 'ER_MASTER_INFO';\ncodes[1202] = 'ER_SLAVE_THREAD';\ncodes[1203] = 'ER_TOO_MANY_USER_CONNECTIONS';\ncodes[1204] = 'ER_SET_CONSTANTS_ONLY';\ncodes[1205] = 'ER_LOCK_WAIT_TIMEOUT';\ncodes[1206] = 'ER_LOCK_TABLE_FULL';\ncodes[1207] = 'ER_READ_ONLY_TRANSACTION';\ncodes[1208] = 'ER_DROP_DB_WITH_READ_LOCK';\ncodes[1209] = 'ER_CREATE_DB_WITH_READ_LOCK';\ncodes[1210] = 'ER_WRONG_ARGUMENTS';\ncodes[1211] = 'ER_NO_PERMISSION_TO_CREATE_USER';\ncodes[1212] = 'ER_UNION_TABLES_IN_DIFFERENT_DIR';\ncodes[1213] = 'ER_LOCK_DEADLOCK';\ncodes[1214] = 'ER_TABLE_CANT_HANDLE_FT';\ncodes[1215] = 'ER_CANNOT_ADD_FOREIGN';\ncodes[1216] = 'ER_NO_REFERENCED_ROW';\ncodes[1217] = 'ER_ROW_IS_REFERENCED';\ncodes[1218] = 'ER_CONNECT_TO_MASTER';\ncodes[1219] = 'ER_QUERY_ON_MASTER';\ncodes[1220] = 'ER_ERROR_WHEN_EXECUTING_COMMAND';\ncodes[1221] = 'ER_WRONG_USAGE';\ncodes[1222] = 'ER_WRONG_NUMBER_OF_COLUMNS_IN_SELECT';\ncodes[1223] = 'ER_CANT_UPDATE_WITH_READLOCK';\ncodes[1224] = 'ER_MIXING_NOT_ALLOWED';\ncodes[1225] = 'ER_DUP_ARGUMENT';\ncodes[1226] = 'ER_USER_LIMIT_REACHED';\ncodes[1227] = 'ER_SPECIFIC_ACCESS_DENIED_ERROR';\ncodes[1228] = 'ER_LOCAL_VARIABLE';\ncodes[1229] = 'ER_GLOBAL_VARIABLE';\ncodes[1230] = 'ER_NO_DEFAULT';\ncodes[1231] = 'ER_WRONG_VALUE_FOR_VAR';\ncodes[1232] = 'ER_WRONG_TYPE_FOR_VAR';\ncodes[1233] = 'ER_VAR_CANT_BE_READ';\ncodes[1234] = 'ER_CANT_USE_OPTION_HERE';\ncodes[1235] = 'ER_NOT_SUPPORTED_YET';\ncodes[1236] = 'ER_MASTER_FATAL_ERROR_READING_BINLOG';\ncodes[1237] = 'ER_SLAVE_IGNORED_TABLE';\ncodes[1238] = 'ER_INCORRECT_GLOBAL_LOCAL_VAR';\ncodes[1239] = 'ER_WRONG_FK_DEF';\ncodes[1240] = 'ER_KEY_REF_DO_NOT_MATCH_TABLE_REF';\ncodes[1241] = 'ER_OPERAND_COLUMNS';\ncodes[1242] = 'ER_SUBQUERY_NO_1_ROW';\ncodes[1243] = 'ER_UNKNOWN_STMT_HANDLER';\ncodes[1244] = 'ER_CORRUPT_HELP_DB';\ncodes[1245] = 'ER_CYCLIC_REFERENCE';\ncodes[1246] = 'ER_AUTO_CONVERT';\ncodes[1247] = 'ER_ILLEGAL_REFERENCE';\ncodes[1248] = 'ER_DERIVED_MUST_HAVE_ALIAS';\ncodes[1249] = 'ER_SELECT_REDUCED';\ncodes[1250] = 'ER_TABLENAME_NOT_ALLOWED_HERE';\ncodes[1251] = 'ER_NOT_SUPPORTED_AUTH_MODE';\ncodes[1252] = 'ER_SPATIAL_CANT_HAVE_NULL';\ncodes[1253] = 'ER_COLLATION_CHARSET_MISMATCH';\ncodes[1254] = 'ER_SLAVE_WAS_RUNNING';\ncodes[1255] = 'ER_SLAVE_WAS_NOT_RUNNING';\ncodes[1256] = 'ER_TOO_BIG_FOR_UNCOMPRESS';\ncodes[1257] = 'ER_ZLIB_Z_MEM_ERROR';\ncodes[1258] = 'ER_ZLIB_Z_BUF_ERROR';\ncodes[1259] = 'ER_ZLIB_Z_DATA_ERROR';\ncodes[1260] = 'ER_CUT_VALUE_GROUP_CONCAT';\ncodes[1261] = 'ER_WARN_TOO_FEW_RECORDS';\ncodes[1262] = 'ER_WARN_TOO_MANY_RECORDS';\ncodes[1263] = 'ER_WARN_NULL_TO_NOTNULL';\ncodes[1264] = 'ER_WARN_DATA_OUT_OF_RANGE';\ncodes[1265] = 'WARN_DATA_TRUNCATED';\ncodes[1266] = 'ER_WARN_USING_OTHER_HANDLER';\ncodes[1267] = 'ER_CANT_AGGREGATE_2COLLATIONS';\ncodes[1268] = 'ER_DROP_USER';\ncodes[1269] = 'ER_REVOKE_GRANTS';\ncodes[1270] = 'ER_CANT_AGGREGATE_3COLLATIONS';\ncodes[1271] = 'ER_CANT_AGGREGATE_NCOLLATIONS';\ncodes[1272] = 'ER_VARIABLE_IS_NOT_STRUCT';\ncodes[1273] = 'ER_UNKNOWN_COLLATION';\ncodes[1274] = 'ER_SLAVE_IGNORED_SSL_PARAMS';\ncodes[1275] = 'ER_SERVER_IS_IN_SECURE_AUTH_MODE';\ncodes[1276] = 'ER_WARN_FIELD_RESOLVED';\ncodes[1277] = 'ER_BAD_SLAVE_UNTIL_COND';\ncodes[1278] = 'ER_MISSING_SKIP_SLAVE';\ncodes[1279] = 'ER_UNTIL_COND_IGNORED';\ncodes[1280] = 'ER_WRONG_NAME_FOR_INDEX';\ncodes[1281] = 'ER_WRONG_NAME_FOR_CATALOG';\ncodes[1282] = 'ER_WARN_QC_RESIZE';\ncodes[1283] = 'ER_BAD_FT_COLUMN';\ncodes[1284] = 'ER_UNKNOWN_KEY_CACHE';\ncodes[1285] = 'ER_WARN_HOSTNAME_WONT_WORK';\ncodes[1286] = 'ER_UNKNOWN_STORAGE_ENGINE';\ncodes[1287] = 'ER_WARN_DEPRECATED_SYNTAX';\ncodes[1288] = 'ER_NON_UPDATABLE_TABLE';\ncodes[1289] = 'ER_FEATURE_DISABLED';\ncodes[1290] = 'ER_OPTION_PREVENTS_STATEMENT';\ncodes[1291] = 'ER_DUPLICATED_VALUE_IN_TYPE';\ncodes[1292] = 'ER_TRUNCATED_WRONG_VALUE';\ncodes[1293] = 'ER_TOO_MUCH_AUTO_TIMESTAMP_COLS';\ncodes[1294] = 'ER_INVALID_ON_UPDATE';\ncodes[1295] = 'ER_UNSUPPORTED_PS';\ncodes[1296] = 'ER_GET_ERRMSG';\ncodes[1297] = 'ER_GET_TEMPORARY_ERRMSG';\ncodes[1298] = 'ER_UNKNOWN_TIME_ZONE';\ncodes[1299] = 'ER_WARN_INVALID_TIMESTAMP';\ncodes[1300] = 'ER_INVALID_CHARACTER_STRING';\ncodes[1301] = 'ER_WARN_ALLOWED_PACKET_OVERFLOWED';\ncodes[1302] = 'ER_CONFLICTING_DECLARATIONS';\ncodes[1303] = 'ER_SP_NO_RECURSIVE_CREATE';\ncodes[1304] = 'ER_SP_ALREADY_EXISTS';\ncodes[1305] = 'ER_SP_DOES_NOT_EXIST';\ncodes[1306] = 'ER_SP_DROP_FAILED';\ncodes[1307] = 'ER_SP_STORE_FAILED';\ncodes[1308] = 'ER_SP_LILABEL_MISMATCH';\ncodes[1309] = 'ER_SP_LABEL_REDEFINE';\ncodes[1310] = 'ER_SP_LABEL_MISMATCH';\ncodes[1311] = 'ER_SP_UNINIT_VAR';\ncodes[1312] = 'ER_SP_BADSELECT';\ncodes[1313] = 'ER_SP_BADRETURN';\ncodes[1314] = 'ER_SP_BADSTATEMENT';\ncodes[1315] = 'ER_UPDATE_LOG_DEPRECATED_IGNORED';\ncodes[1316] = 'ER_UPDATE_LOG_DEPRECATED_TRANSLATED';\ncodes[1317] = 'ER_QUERY_INTERRUPTED';\ncodes[1318] = 'ER_SP_WRONG_NO_OF_ARGS';\ncodes[1319] = 'ER_SP_COND_MISMATCH';\ncodes[1320] = 'ER_SP_NORETURN';\ncodes[1321] = 'ER_SP_NORETURNEND';\ncodes[1322] = 'ER_SP_BAD_CURSOR_QUERY';\ncodes[1323] = 'ER_SP_BAD_CURSOR_SELECT';\ncodes[1324] = 'ER_SP_CURSOR_MISMATCH';\ncodes[1325] = 'ER_SP_CURSOR_ALREADY_OPEN';\ncodes[1326] = 'ER_SP_CURSOR_NOT_OPEN';\ncodes[1327] = 'ER_SP_UNDECLARED_VAR';\ncodes[1328] = 'ER_SP_WRONG_NO_OF_FETCH_ARGS';\ncodes[1329] = 'ER_SP_FETCH_NO_DATA';\ncodes[1330] = 'ER_SP_DUP_PARAM';\ncodes[1331] = 'ER_SP_DUP_VAR';\ncodes[1332] = 'ER_SP_DUP_COND';\ncodes[1333] = 'ER_SP_DUP_CURS';\ncodes[1334] = 'ER_SP_CANT_ALTER';\ncodes[1335] = 'ER_SP_SUBSELECT_NYI';\ncodes[1336] = 'ER_STMT_NOT_ALLOWED_IN_SF_OR_TRG';\ncodes[1337] = 'ER_SP_VARCOND_AFTER_CURSHNDLR';\ncodes[1338] = 'ER_SP_CURSOR_AFTER_HANDLER';\ncodes[1339] = 'ER_SP_CASE_NOT_FOUND';\ncodes[1340] = 'ER_FPARSER_TOO_BIG_FILE';\ncodes[1341] = 'ER_FPARSER_BAD_HEADER';\ncodes[1342] = 'ER_FPARSER_EOF_IN_COMMENT';\ncodes[1343] = 'ER_FPARSER_ERROR_IN_PARAMETER';\ncodes[1344] = 'ER_FPARSER_EOF_IN_UNKNOWN_PARAMETER';\ncodes[1345] = 'ER_VIEW_NO_EXPLAIN';\ncodes[1346] = 'ER_FRM_UNKNOWN_TYPE';\ncodes[1347] = 'ER_WRONG_OBJECT';\ncodes[1348] = 'ER_NONUPDATEABLE_COLUMN';\ncodes[1349] = 'ER_VIEW_SELECT_DERIVED';\ncodes[1350] = 'ER_VIEW_SELECT_CLAUSE';\ncodes[1351] = 'ER_VIEW_SELECT_VARIABLE';\ncodes[1352] = 'ER_VIEW_SELECT_TMPTABLE';\ncodes[1353] = 'ER_VIEW_WRONG_LIST';\ncodes[1354] = 'ER_WARN_VIEW_MERGE';\ncodes[1355] = 'ER_WARN_VIEW_WITHOUT_KEY';\ncodes[1356] = 'ER_VIEW_INVALID';\ncodes[1357] = 'ER_SP_NO_DROP_SP';\ncodes[1358] = 'ER_SP_GOTO_IN_HNDLR';\ncodes[1359] = 'ER_TRG_ALREADY_EXISTS';\ncodes[1360] = 'ER_TRG_DOES_NOT_EXIST';\ncodes[1361] = 'ER_TRG_ON_VIEW_OR_TEMP_TABLE';\ncodes[1362] = 'ER_TRG_CANT_CHANGE_ROW';\ncodes[1363] = 'ER_TRG_NO_SUCH_ROW_IN_TRG';\ncodes[1364] = 'ER_NO_DEFAULT_FOR_FIELD';\ncodes[1365] = 'ER_DIVISION_BY_ZERO';\ncodes[1366] = 'ER_TRUNCATED_WRONG_VALUE_FOR_FIELD';\ncodes[1367] = 'ER_ILLEGAL_VALUE_FOR_TYPE';\ncodes[1368] = 'ER_VIEW_NONUPD_CHECK';\ncodes[1369] = 'ER_VIEW_CHECK_FAILED';\ncodes[1370] = 'ER_PROCACCESS_DENIED_ERROR';\ncodes[1371] = 'ER_RELAY_LOG_FAIL';\ncodes[1372] = 'ER_PASSWD_LENGTH';\ncodes[1373] = 'ER_UNKNOWN_TARGET_BINLOG';\ncodes[1374] = 'ER_IO_ERR_LOG_INDEX_READ';\ncodes[1375] = 'ER_BINLOG_PURGE_PROHIBITED';\ncodes[1376] = 'ER_FSEEK_FAIL';\ncodes[1377] = 'ER_BINLOG_PURGE_FATAL_ERR';\ncodes[1378] = 'ER_LOG_IN_USE';\ncodes[1379] = 'ER_LOG_PURGE_UNKNOWN_ERR';\ncodes[1380] = 'ER_RELAY_LOG_INIT';\ncodes[1381] = 'ER_NO_BINARY_LOGGING';\ncodes[1382] = 'ER_RESERVED_SYNTAX';\ncodes[1383] = 'ER_WSAS_FAILED';\ncodes[1384] = 'ER_DIFF_GROUPS_PROC';\ncodes[1385] = 'ER_NO_GROUP_FOR_PROC';\ncodes[1386] = 'ER_ORDER_WITH_PROC';\ncodes[1387] = 'ER_LOGGING_PROHIBIT_CHANGING_OF';\ncodes[1388] = 'ER_NO_FILE_MAPPING';\ncodes[1389] = 'ER_WRONG_MAGIC';\ncodes[1390] = 'ER_PS_MANY_PARAM';\ncodes[1391] = 'ER_KEY_PART_0';\ncodes[1392] = 'ER_VIEW_CHECKSUM';\ncodes[1393] = 'ER_VIEW_MULTIUPDATE';\ncodes[1394] = 'ER_VIEW_NO_INSERT_FIELD_LIST';\ncodes[1395] = 'ER_VIEW_DELETE_MERGE_VIEW';\ncodes[1396] = 'ER_CANNOT_USER';\ncodes[1397] = 'ER_XAER_NOTA';\ncodes[1398] = 'ER_XAER_INVAL';\ncodes[1399] = 'ER_XAER_RMFAIL';\ncodes[1400] = 'ER_XAER_OUTSIDE';\ncodes[1401] = 'ER_XAER_RMERR';\ncodes[1402] = 'ER_XA_RBROLLBACK';\ncodes[1403] = 'ER_NONEXISTING_PROC_GRANT';\ncodes[1404] = 'ER_PROC_AUTO_GRANT_FAIL';\ncodes[1405] = 'ER_PROC_AUTO_REVOKE_FAIL';\ncodes[1406] = 'ER_DATA_TOO_LONG';\ncodes[1407] = 'ER_SP_BAD_SQLSTATE';\ncodes[1408] = 'ER_STARTUP';\ncodes[1409] = 'ER_LOAD_FROM_FIXED_SIZE_ROWS_TO_VAR';\ncodes[1410] = 'ER_CANT_CREATE_USER_WITH_GRANT';\ncodes[1411] = 'ER_WRONG_VALUE_FOR_TYPE';\ncodes[1412] = 'ER_TABLE_DEF_CHANGED';\ncodes[1413] = 'ER_SP_DUP_HANDLER';\ncodes[1414] = 'ER_SP_NOT_VAR_ARG';\ncodes[1415] = 'ER_SP_NO_RETSET';\ncodes[1416] = 'ER_CANT_CREATE_GEOMETRY_OBJECT';\ncodes[1417] = 'ER_FAILED_ROUTINE_BREAK_BINLOG';\ncodes[1418] = 'ER_BINLOG_UNSAFE_ROUTINE';\ncodes[1419] = 'ER_BINLOG_CREATE_ROUTINE_NEED_SUPER';\ncodes[1420] = 'ER_EXEC_STMT_WITH_OPEN_CURSOR';\ncodes[1421] = 'ER_STMT_HAS_NO_OPEN_CURSOR';\ncodes[1422] = 'ER_COMMIT_NOT_ALLOWED_IN_SF_OR_TRG';\ncodes[1423] = 'ER_NO_DEFAULT_FOR_VIEW_FIELD';\ncodes[1424] = 'ER_SP_NO_RECURSION';\ncodes[1425] = 'ER_TOO_BIG_SCALE';\ncodes[1426] = 'ER_TOO_BIG_PRECISION';\ncodes[1427] = 'ER_M_BIGGER_THAN_D';\ncodes[1428] = 'ER_WRONG_LOCK_OF_SYSTEM_TABLE';\ncodes[1429] = 'ER_CONNECT_TO_FOREIGN_DATA_SOURCE';\ncodes[1430] = 'ER_QUERY_ON_FOREIGN_DATA_SOURCE';\ncodes[1431] = 'ER_FOREIGN_DATA_SOURCE_DOESNT_EXIST';\ncodes[1432] = 'ER_FOREIGN_DATA_STRING_INVALID_CANT_CREATE';\ncodes[1433] = 'ER_FOREIGN_DATA_STRING_INVALID';\ncodes[1434] = 'ER_CANT_CREATE_FEDERATED_TABLE';\ncodes[1435] = 'ER_TRG_IN_WRONG_SCHEMA';\ncodes[1436] = 'ER_STACK_OVERRUN_NEED_MORE';\ncodes[1437] = 'ER_TOO_LONG_BODY';\ncodes[1438] = 'ER_WARN_CANT_DROP_DEFAULT_KEYCACHE';\ncodes[1439] = 'ER_TOO_BIG_DISPLAYWIDTH';\ncodes[1440] = 'ER_XAER_DUPID';\ncodes[1441] = 'ER_DATETIME_FUNCTION_OVERFLOW';\ncodes[1442] = 'ER_CANT_UPDATE_USED_TABLE_IN_SF_OR_TRG';\ncodes[1443] = 'ER_VIEW_PREVENT_UPDATE';\ncodes[1444] = 'ER_PS_NO_RECURSION';\ncodes[1445] = 'ER_SP_CANT_SET_AUTOCOMMIT';\ncodes[1446] = 'ER_MALFORMED_DEFINER';\ncodes[1447] = 'ER_VIEW_FRM_NO_USER';\ncodes[1448] = 'ER_VIEW_OTHER_USER';\ncodes[1449] = 'ER_NO_SUCH_USER';\ncodes[1450] = 'ER_FORBID_SCHEMA_CHANGE';\ncodes[1451] = 'ER_ROW_IS_REFERENCED_2';\ncodes[1452] = 'ER_NO_REFERENCED_ROW_2';\ncodes[1453] = 'ER_SP_BAD_VAR_SHADOW';\ncodes[1454] = 'ER_TRG_NO_DEFINER';\ncodes[1455] = 'ER_OLD_FILE_FORMAT';\ncodes[1456] = 'ER_SP_RECURSION_LIMIT';\ncodes[1457] = 'ER_SP_PROC_TABLE_CORRUPT';\ncodes[1458] = 'ER_SP_WRONG_NAME';\ncodes[1459] = 'ER_TABLE_NEEDS_UPGRADE';\ncodes[1460] = 'ER_SP_NO_AGGREGATE';\ncodes[1461] = 'ER_MAX_PREPARED_STMT_COUNT_REACHED';\ncodes[1462] = 'ER_VIEW_RECURSIVE';\ncodes[1463] = 'ER_NON_GROUPING_FIELD_USED';\ncodes[1464] = 'ER_TABLE_CANT_HANDLE_SPKEYS';\ncodes[1465] = 'ER_NO_TRIGGERS_ON_SYSTEM_SCHEMA';\ncodes[1466] = 'ER_REMOVED_SPACES';\ncodes[1467] = 'ER_AUTOINC_READ_FAILED';\ncodes[1468] = 'ER_USERNAME';\ncodes[1469] = 'ER_HOSTNAME';\ncodes[1470] = 'ER_WRONG_STRING_LENGTH';\ncodes[1471] = 'ER_NON_INSERTABLE_TABLE';\ncodes[1472] = 'ER_ADMIN_WRONG_MRG_TABLE';\ncodes[1473] = 'ER_TOO_HIGH_LEVEL_OF_NESTING_FOR_SELECT';\ncodes[1474] = 'ER_NAME_BECOMES_EMPTY';\ncodes[1475] = 'ER_AMBIGUOUS_FIELD_TERM';\ncodes[1476] = 'ER_FOREIGN_SERVER_EXISTS';\ncodes[1477] = 'ER_FOREIGN_SERVER_DOESNT_EXIST';\ncodes[1478] = 'ER_ILLEGAL_HA_CREATE_OPTION';\ncodes[1479] = 'ER_PARTITION_REQUIRES_VALUES_ERROR';\ncodes[1480] = 'ER_PARTITION_WRONG_VALUES_ERROR';\ncodes[1481] = 'ER_PARTITION_MAXVALUE_ERROR';\ncodes[1482] = 'ER_PARTITION_SUBPARTITION_ERROR';\ncodes[1483] = 'ER_PARTITION_SUBPART_MIX_ERROR';\ncodes[1484] = 'ER_PARTITION_WRONG_NO_PART_ERROR';\ncodes[1485] = 'ER_PARTITION_WRONG_NO_SUBPART_ERROR';\ncodes[1486] = 'ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR';\ncodes[1487] = 'ER_NOT_CONSTANT_EXPRESSION';\ncodes[1488] = 'ER_FIELD_NOT_FOUND_PART_ERROR';\ncodes[1489] = 'ER_LIST_OF_FIELDS_ONLY_IN_HASH_ERROR';\ncodes[1490] = 'ER_INCONSISTENT_PARTITION_INFO_ERROR';\ncodes[1491] = 'ER_PARTITION_FUNC_NOT_ALLOWED_ERROR';\ncodes[1492] = 'ER_PARTITIONS_MUST_BE_DEFINED_ERROR';\ncodes[1493] = 'ER_RANGE_NOT_INCREASING_ERROR';\ncodes[1494] = 'ER_INCONSISTENT_TYPE_OF_FUNCTIONS_ERROR';\ncodes[1495] = 'ER_MULTIPLE_DEF_CONST_IN_LIST_PART_ERROR';\ncodes[1496] = 'ER_PARTITION_ENTRY_ERROR';\ncodes[1497] = 'ER_MIX_HANDLER_ERROR';\ncodes[1498] = 'ER_PARTITION_NOT_DEFINED_ERROR';\ncodes[1499] = 'ER_TOO_MANY_PARTITIONS_ERROR';\ncodes[1500] = 'ER_SUBPARTITION_ERROR';\ncodes[1501] = 'ER_CANT_CREATE_HANDLER_FILE';\ncodes[1502] = 'ER_BLOB_FIELD_IN_PART_FUNC_ERROR';\ncodes[1503] = 'ER_UNIQUE_KEY_NEED_ALL_FIELDS_IN_PF';\ncodes[1504] = 'ER_NO_PARTS_ERROR';\ncodes[1505] = 'ER_PARTITION_MGMT_ON_NONPARTITIONED';\ncodes[1506] = 'ER_FOREIGN_KEY_ON_PARTITIONED';\ncodes[1507] = 'ER_DROP_PARTITION_NON_EXISTENT';\ncodes[1508] = 'ER_DROP_LAST_PARTITION';\ncodes[1509] = 'ER_COALESCE_ONLY_ON_HASH_PARTITION';\ncodes[1510] = 'ER_REORG_HASH_ONLY_ON_SAME_NO';\ncodes[1511] = 'ER_REORG_NO_PARAM_ERROR';\ncodes[1512] = 'ER_ONLY_ON_RANGE_LIST_PARTITION';\ncodes[1513] = 'ER_ADD_PARTITION_SUBPART_ERROR';\ncodes[1514] = 'ER_ADD_PARTITION_NO_NEW_PARTITION';\ncodes[1515] = 'ER_COALESCE_PARTITION_NO_PARTITION';\ncodes[1516] = 'ER_REORG_PARTITION_NOT_EXIST';\ncodes[1517] = 'ER_SAME_NAME_PARTITION';\ncodes[1518] = 'ER_NO_BINLOG_ERROR';\ncodes[1519] = 'ER_CONSECUTIVE_REORG_PARTITIONS';\ncodes[1520] = 'ER_REORG_OUTSIDE_RANGE';\ncodes[1521] = 'ER_PARTITION_FUNCTION_FAILURE';\ncodes[1522] = 'ER_PART_STATE_ERROR';\ncodes[1523] = 'ER_LIMITED_PART_RANGE';\ncodes[1524] = 'ER_PLUGIN_IS_NOT_LOADED';\ncodes[1525] = 'ER_WRONG_VALUE';\ncodes[1526] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE';\ncodes[1527] = 'ER_FILEGROUP_OPTION_ONLY_ONCE';\ncodes[1528] = 'ER_CREATE_FILEGROUP_FAILED';\ncodes[1529] = 'ER_DROP_FILEGROUP_FAILED';\ncodes[1530] = 'ER_TABLESPACE_AUTO_EXTEND_ERROR';\ncodes[1531] = 'ER_WRONG_SIZE_NUMBER';\ncodes[1532] = 'ER_SIZE_OVERFLOW_ERROR';\ncodes[1533] = 'ER_ALTER_FILEGROUP_FAILED';\ncodes[1534] = 'ER_BINLOG_ROW_LOGGING_FAILED';\ncodes[1535] = 'ER_BINLOG_ROW_WRONG_TABLE_DEF';\ncodes[1536] = 'ER_BINLOG_ROW_RBR_TO_SBR';\ncodes[1537] = 'ER_EVENT_ALREADY_EXISTS';\ncodes[1538] = 'ER_EVENT_STORE_FAILED';\ncodes[1539] = 'ER_EVENT_DOES_NOT_EXIST';\ncodes[1540] = 'ER_EVENT_CANT_ALTER';\ncodes[1541] = 'ER_EVENT_DROP_FAILED';\ncodes[1542] = 'ER_EVENT_INTERVAL_NOT_POSITIVE_OR_TOO_BIG';\ncodes[1543] = 'ER_EVENT_ENDS_BEFORE_STARTS';\ncodes[1544] = 'ER_EVENT_EXEC_TIME_IN_THE_PAST';\ncodes[1545] = 'ER_EVENT_OPEN_TABLE_FAILED';\ncodes[1546] = 'ER_EVENT_NEITHER_M_EXPR_NOR_M_AT';\ncodes[1547] = 'ER_UNUSED_2';\ncodes[1548] = 'ER_UNUSED_3';\ncodes[1549] = 'ER_EVENT_CANNOT_DELETE';\ncodes[1550] = 'ER_EVENT_COMPILE_ERROR';\ncodes[1551] = 'ER_EVENT_SAME_NAME';\ncodes[1552] = 'ER_EVENT_DATA_TOO_LONG';\ncodes[1553] = 'ER_DROP_INDEX_FK';\ncodes[1554] = 'ER_WARN_DEPRECATED_SYNTAX_WITH_VER';\ncodes[1555] = 'ER_CANT_WRITE_LOCK_LOG_TABLE';\ncodes[1556] = 'ER_CANT_LOCK_LOG_TABLE';\ncodes[1557] = 'ER_UNUSED_4';\ncodes[1558] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE';\ncodes[1559] = 'ER_TEMP_TABLE_PREVENTS_SWITCH_OUT_OF_RBR';\ncodes[1560] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_FORMAT';\ncodes[1561] = 'ER_UNUSED_13';\ncodes[1562] = 'ER_PARTITION_NO_TEMPORARY';\ncodes[1563] = 'ER_PARTITION_CONST_DOMAIN_ERROR';\ncodes[1564] = 'ER_PARTITION_FUNCTION_IS_NOT_ALLOWED';\ncodes[1565] = 'ER_DDL_LOG_ERROR';\ncodes[1566] = 'ER_NULL_IN_VALUES_LESS_THAN';\ncodes[1567] = 'ER_WRONG_PARTITION_NAME';\ncodes[1568] = 'ER_CANT_CHANGE_TX_CHARACTERISTICS';\ncodes[1569] = 'ER_DUP_ENTRY_AUTOINCREMENT_CASE';\ncodes[1570] = 'ER_EVENT_MODIFY_QUEUE_ERROR';\ncodes[1571] = 'ER_EVENT_SET_VAR_ERROR';\ncodes[1572] = 'ER_PARTITION_MERGE_ERROR';\ncodes[1573] = 'ER_CANT_ACTIVATE_LOG';\ncodes[1574] = 'ER_RBR_NOT_AVAILABLE';\ncodes[1575] = 'ER_BASE64_DECODE_ERROR';\ncodes[1576] = 'ER_EVENT_RECURSION_FORBIDDEN';\ncodes[1577] = 'ER_EVENTS_DB_ERROR';\ncodes[1578] = 'ER_ONLY_INTEGERS_ALLOWED';\ncodes[1579] = 'ER_UNSUPORTED_LOG_ENGINE';\ncodes[1580] = 'ER_BAD_LOG_STATEMENT';\ncodes[1581] = 'ER_CANT_RENAME_LOG_TABLE';\ncodes[1582] = 'ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT';\ncodes[1583] = 'ER_WRONG_PARAMETERS_TO_NATIVE_FCT';\ncodes[1584] = 'ER_WRONG_PARAMETERS_TO_STORED_FCT';\ncodes[1585] = 'ER_NATIVE_FCT_NAME_COLLISION';\ncodes[1586] = 'ER_DUP_ENTRY_WITH_KEY_NAME';\ncodes[1587] = 'ER_BINLOG_PURGE_EMFILE';\ncodes[1588] = 'ER_EVENT_CANNOT_CREATE_IN_THE_PAST';\ncodes[1589] = 'ER_EVENT_CANNOT_ALTER_IN_THE_PAST';\ncodes[1590] = 'ER_SLAVE_INCIDENT';\ncodes[1591] = 'ER_NO_PARTITION_FOR_GIVEN_VALUE_SILENT';\ncodes[1592] = 'ER_BINLOG_UNSAFE_STATEMENT';\ncodes[1593] = 'ER_SLAVE_FATAL_ERROR';\ncodes[1594] = 'ER_SLAVE_RELAY_LOG_READ_FAILURE';\ncodes[1595] = 'ER_SLAVE_RELAY_LOG_WRITE_FAILURE';\ncodes[1596] = 'ER_SLAVE_CREATE_EVENT_FAILURE';\ncodes[1597] = 'ER_SLAVE_MASTER_COM_FAILURE';\ncodes[1598] = 'ER_BINLOG_LOGGING_IMPOSSIBLE';\ncodes[1599] = 'ER_VIEW_NO_CREATION_CTX';\ncodes[1600] = 'ER_VIEW_INVALID_CREATION_CTX';\ncodes[1601] = 'ER_SR_INVALID_CREATION_CTX';\ncodes[1602] = 'ER_TRG_CORRUPTED_FILE';\ncodes[1603] = 'ER_TRG_NO_CREATION_CTX';\ncodes[1604] = 'ER_TRG_INVALID_CREATION_CTX';\ncodes[1605] = 'ER_EVENT_INVALID_CREATION_CTX';\ncodes[1606] = 'ER_TRG_CANT_OPEN_TABLE';\ncodes[1607] = 'ER_CANT_CREATE_SROUTINE';\ncodes[1608] = 'ER_UNUSED_11';\ncodes[1609] = 'ER_NO_FORMAT_DESCRIPTION_EVENT_BEFORE_BINLOG_STATEMENT';\ncodes[1610] = 'ER_SLAVE_CORRUPT_EVENT';\ncodes[1611] = 'ER_LOAD_DATA_INVALID_COLUMN';\ncodes[1612] = 'ER_LOG_PURGE_NO_FILE';\ncodes[1613] = 'ER_XA_RBTIMEOUT';\ncodes[1614] = 'ER_XA_RBDEADLOCK';\ncodes[1615] = 'ER_NEED_REPREPARE';\ncodes[1616] = 'ER_DELAYED_NOT_SUPPORTED';\ncodes[1617] = 'WARN_NO_MASTER_INFO';\ncodes[1618] = 'WARN_OPTION_IGNORED';\ncodes[1619] = 'ER_PLUGIN_DELETE_BUILTIN';\ncodes[1620] = 'WARN_PLUGIN_BUSY';\ncodes[1621] = 'ER_VARIABLE_IS_READONLY';\ncodes[1622] = 'ER_WARN_ENGINE_TRANSACTION_ROLLBACK';\ncodes[1623] = 'ER_SLAVE_HEARTBEAT_FAILURE';\ncodes[1624] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE';\ncodes[1625] = 'ER_UNUSED_14';\ncodes[1626] = 'ER_CONFLICT_FN_PARSE_ERROR';\ncodes[1627] = 'ER_EXCEPTIONS_WRITE_ERROR';\ncodes[1628] = 'ER_TOO_LONG_TABLE_COMMENT';\ncodes[1629] = 'ER_TOO_LONG_FIELD_COMMENT';\ncodes[1630] = 'ER_FUNC_INEXISTENT_NAME_COLLISION';\ncodes[1631] = 'ER_DATABASE_NAME';\ncodes[1632] = 'ER_TABLE_NAME';\ncodes[1633] = 'ER_PARTITION_NAME';\ncodes[1634] = 'ER_SUBPARTITION_NAME';\ncodes[1635] = 'ER_TEMPORARY_NAME';\ncodes[1636] = 'ER_RENAMED_NAME';\ncodes[1637] = 'ER_TOO_MANY_CONCURRENT_TRXS';\ncodes[1638] = 'WARN_NON_ASCII_SEPARATOR_NOT_IMPLEMENTED';\ncodes[1639] = 'ER_DEBUG_SYNC_TIMEOUT';\ncodes[1640] = 'ER_DEBUG_SYNC_HIT_LIMIT';\ncodes[1641] = 'ER_DUP_SIGNAL_SET';\ncodes[1642] = 'ER_SIGNAL_WARN';\ncodes[1643] = 'ER_SIGNAL_NOT_FOUND';\ncodes[1644] = 'ER_SIGNAL_EXCEPTION';\ncodes[1645] = 'ER_RESIGNAL_WITHOUT_ACTIVE_HANDLER';\ncodes[1646] = 'ER_SIGNAL_BAD_CONDITION_TYPE';\ncodes[1647] = 'WARN_COND_ITEM_TRUNCATED';\ncodes[1648] = 'ER_COND_ITEM_TOO_LONG';\ncodes[1649] = 'ER_UNKNOWN_LOCALE';\ncodes[1650] = 'ER_SLAVE_IGNORE_SERVER_IDS';\ncodes[1651] = 'ER_QUERY_CACHE_DISABLED';\ncodes[1652] = 'ER_SAME_NAME_PARTITION_FIELD';\ncodes[1653] = 'ER_PARTITION_COLUMN_LIST_ERROR';\ncodes[1654] = 'ER_WRONG_TYPE_COLUMN_VALUE_ERROR';\ncodes[1655] = 'ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR';\ncodes[1656] = 'ER_MAXVALUE_IN_VALUES_IN';\ncodes[1657] = 'ER_TOO_MANY_VALUES_ERROR';\ncodes[1658] = 'ER_ROW_SINGLE_PARTITION_FIELD_ERROR';\ncodes[1659] = 'ER_FIELD_TYPE_NOT_ALLOWED_AS_PARTITION_FIELD';\ncodes[1660] = 'ER_PARTITION_FIELDS_TOO_LONG';\ncodes[1661] = 'ER_BINLOG_ROW_ENGINE_AND_STMT_ENGINE';\ncodes[1662] = 'ER_BINLOG_ROW_MODE_AND_STMT_ENGINE';\ncodes[1663] = 'ER_BINLOG_UNSAFE_AND_STMT_ENGINE';\ncodes[1664] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_ENGINE';\ncodes[1665] = 'ER_BINLOG_STMT_MODE_AND_ROW_ENGINE';\ncodes[1666] = 'ER_BINLOG_ROW_INJECTION_AND_STMT_MODE';\ncodes[1667] = 'ER_BINLOG_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE';\ncodes[1668] = 'ER_BINLOG_UNSAFE_LIMIT';\ncodes[1669] = 'ER_BINLOG_UNSAFE_INSERT_DELAYED';\ncodes[1670] = 'ER_BINLOG_UNSAFE_SYSTEM_TABLE';\ncodes[1671] = 'ER_BINLOG_UNSAFE_AUTOINC_COLUMNS';\ncodes[1672] = 'ER_BINLOG_UNSAFE_UDF';\ncodes[1673] = 'ER_BINLOG_UNSAFE_SYSTEM_VARIABLE';\ncodes[1674] = 'ER_BINLOG_UNSAFE_SYSTEM_FUNCTION';\ncodes[1675] = 'ER_BINLOG_UNSAFE_NONTRANS_AFTER_TRANS';\ncodes[1676] = 'ER_MESSAGE_AND_STATEMENT';\ncodes[1677] = 'ER_SLAVE_CONVERSION_FAILED';\ncodes[1678] = 'ER_SLAVE_CANT_CREATE_CONVERSION';\ncodes[1679] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_FORMAT';\ncodes[1680] = 'ER_PATH_LENGTH';\ncodes[1681] = 'ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT';\ncodes[1682] = 'ER_WRONG_NATIVE_TABLE_STRUCTURE';\ncodes[1683] = 'ER_WRONG_PERFSCHEMA_USAGE';\ncodes[1684] = 'ER_WARN_I_S_SKIPPED_TABLE';\ncodes[1685] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_BINLOG_DIRECT';\ncodes[1686] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_BINLOG_DIRECT';\ncodes[1687] = 'ER_SPATIAL_MUST_HAVE_GEOM_COL';\ncodes[1688] = 'ER_TOO_LONG_INDEX_COMMENT';\ncodes[1689] = 'ER_LOCK_ABORTED';\ncodes[1690] = 'ER_DATA_OUT_OF_RANGE';\ncodes[1691] = 'ER_WRONG_SPVAR_TYPE_IN_LIMIT';\ncodes[1692] = 'ER_BINLOG_UNSAFE_MULTIPLE_ENGINES_AND_SELF_LOGGING_ENGINE';\ncodes[1693] = 'ER_BINLOG_UNSAFE_MIXED_STATEMENT';\ncodes[1694] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SQL_LOG_BIN';\ncodes[1695] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_SQL_LOG_BIN';\ncodes[1696] = 'ER_FAILED_READ_FROM_PAR_FILE';\ncodes[1697] = 'ER_VALUES_IS_NOT_INT_TYPE_ERROR';\ncodes[1698] = 'ER_ACCESS_DENIED_NO_PASSWORD_ERROR';\ncodes[1699] = 'ER_SET_PASSWORD_AUTH_PLUGIN';\ncodes[1700] = 'ER_GRANT_PLUGIN_USER_EXISTS';\ncodes[1701] = 'ER_TRUNCATE_ILLEGAL_FK';\ncodes[1702] = 'ER_PLUGIN_IS_PERMANENT';\ncodes[1703] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN';\ncodes[1704] = 'ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX';\ncodes[1705] = 'ER_STMT_CACHE_FULL';\ncodes[1706] = 'ER_MULTI_UPDATE_KEY_CONFLICT';\ncodes[1707] = 'ER_TABLE_NEEDS_REBUILD';\ncodes[1708] = 'WARN_OPTION_BELOW_LIMIT';\ncodes[1709] = 'ER_INDEX_COLUMN_TOO_LONG';\ncodes[1710] = 'ER_ERROR_IN_TRIGGER_BODY';\ncodes[1711] = 'ER_ERROR_IN_UNKNOWN_TRIGGER_BODY';\ncodes[1712] = 'ER_INDEX_CORRUPT';\ncodes[1713] = 'ER_UNDO_RECORD_TOO_BIG';\ncodes[1714] = 'ER_BINLOG_UNSAFE_INSERT_IGNORE_SELECT';\ncodes[1715] = 'ER_BINLOG_UNSAFE_INSERT_SELECT_UPDATE';\ncodes[1716] = 'ER_BINLOG_UNSAFE_REPLACE_SELECT';\ncodes[1717] = 'ER_BINLOG_UNSAFE_CREATE_IGNORE_SELECT';\ncodes[1718] = 'ER_BINLOG_UNSAFE_CREATE_REPLACE_SELECT';\ncodes[1719] = 'ER_BINLOG_UNSAFE_UPDATE_IGNORE';\ncodes[1720] = 'ER_UNUSED_15';\ncodes[1721] = 'ER_UNUSED_16';\ncodes[1722] = 'ER_BINLOG_UNSAFE_WRITE_AUTOINC_SELECT';\ncodes[1723] = 'ER_BINLOG_UNSAFE_CREATE_SELECT_AUTOINC';\ncodes[1724] = 'ER_BINLOG_UNSAFE_INSERT_TWO_KEYS';\ncodes[1725] = 'ER_TABLE_IN_FK_CHECK';\ncodes[1726] = 'ER_UNUSED_1';\ncodes[1727] = 'ER_BINLOG_UNSAFE_AUTOINC_NOT_FIRST';\ncodes[1728] = 'ER_CANNOT_LOAD_FROM_TABLE_V2';\ncodes[1729] = 'ER_MASTER_DELAY_VALUE_OUT_OF_RANGE';\ncodes[1730] = 'ER_ONLY_FD_AND_RBR_EVENTS_ALLOWED_IN_BINLOG_STATEMENT';\ncodes[1731] = 'ER_PARTITION_EXCHANGE_DIFFERENT_OPTION';\ncodes[1732] = 'ER_PARTITION_EXCHANGE_PART_TABLE';\ncodes[1733] = 'ER_PARTITION_EXCHANGE_TEMP_TABLE';\ncodes[1734] = 'ER_PARTITION_INSTEAD_OF_SUBPARTITION';\ncodes[1735] = 'ER_UNKNOWN_PARTITION';\ncodes[1736] = 'ER_TABLES_DIFFERENT_METADATA';\ncodes[1737] = 'ER_ROW_DOES_NOT_MATCH_PARTITION';\ncodes[1738] = 'ER_BINLOG_CACHE_SIZE_GREATER_THAN_MAX';\ncodes[1739] = 'ER_WARN_INDEX_NOT_APPLICABLE';\ncodes[1740] = 'ER_PARTITION_EXCHANGE_FOREIGN_KEY';\ncodes[1741] = 'ER_NO_SUCH_KEY_VALUE';\ncodes[1742] = 'ER_VALUE_TOO_LONG';\ncodes[1743] = 'ER_NETWORK_READ_EVENT_CHECKSUM_FAILURE';\ncodes[1744] = 'ER_BINLOG_READ_EVENT_CHECKSUM_FAILURE';\ncodes[1745] = 'ER_BINLOG_STMT_CACHE_SIZE_GREATER_THAN_MAX';\ncodes[1746] = 'ER_CANT_UPDATE_TABLE_IN_CREATE_TABLE_SELECT';\ncodes[1747] = 'ER_PARTITION_CLAUSE_ON_NONPARTITIONED';\ncodes[1748] = 'ER_ROW_DOES_NOT_MATCH_GIVEN_PARTITION_SET';\ncodes[1749] = 'ER_UNUSED_5';\ncodes[1750] = 'ER_CHANGE_RPL_INFO_REPOSITORY_FAILURE';\ncodes[1751] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_CREATED_TEMP_TABLE';\ncodes[1752] = 'ER_WARNING_NOT_COMPLETE_ROLLBACK_WITH_DROPPED_TEMP_TABLE';\ncodes[1753] = 'ER_MTS_FEATURE_IS_NOT_SUPPORTED';\ncodes[1754] = 'ER_MTS_UPDATED_DBS_GREATER_MAX';\ncodes[1755] = 'ER_MTS_CANT_PARALLEL';\ncodes[1756] = 'ER_MTS_INCONSISTENT_DATA';\ncodes[1757] = 'ER_FULLTEXT_NOT_SUPPORTED_WITH_PARTITIONING';\ncodes[1758] = 'ER_DA_INVALID_CONDITION_NUMBER';\ncodes[1759] = 'ER_INSECURE_PLAIN_TEXT';\ncodes[1760] = 'ER_INSECURE_CHANGE_MASTER';\ncodes[1761] = 'ER_FOREIGN_DUPLICATE_KEY_WITH_CHILD_INFO';\ncodes[1762] = 'ER_FOREIGN_DUPLICATE_KEY_WITHOUT_CHILD_INFO';\ncodes[1763] = 'ER_SQLTHREAD_WITH_SECURE_SLAVE';\ncodes[1764] = 'ER_TABLE_HAS_NO_FT';\ncodes[1765] = 'ER_VARIABLE_NOT_SETTABLE_IN_SF_OR_TRIGGER';\ncodes[1766] = 'ER_VARIABLE_NOT_SETTABLE_IN_TRANSACTION';\ncodes[1767] = 'ER_GTID_NEXT_IS_NOT_IN_GTID_NEXT_LIST';\ncodes[1768] = 'ER_CANT_CHANGE_GTID_NEXT_IN_TRANSACTION_WHEN_GTID_NEXT_LIST_IS_NULL';\ncodes[1769] = 'ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION';\ncodes[1770] = 'ER_GTID_NEXT_CANT_BE_AUTOMATIC_IF_GTID_NEXT_LIST_IS_NON_NULL';\ncodes[1771] = 'ER_SKIPPING_LOGGED_TRANSACTION';\ncodes[1772] = 'ER_MALFORMED_GTID_SET_SPECIFICATION';\ncodes[1773] = 'ER_MALFORMED_GTID_SET_ENCODING';\ncodes[1774] = 'ER_MALFORMED_GTID_SPECIFICATION';\ncodes[1775] = 'ER_GNO_EXHAUSTED';\ncodes[1776] = 'ER_BAD_SLAVE_AUTO_POSITION';\ncodes[1777] = 'ER_AUTO_POSITION_REQUIRES_GTID_MODE_ON';\ncodes[1778] = 'ER_CANT_DO_IMPLICIT_COMMIT_IN_TRX_WHEN_GTID_NEXT_IS_SET';\ncodes[1779] = 'ER_GTID_MODE_2_OR_3_REQUIRES_ENFORCE_GTID_CONSISTENCY_ON';\ncodes[1780] = 'ER_GTID_MODE_REQUIRES_BINLOG';\ncodes[1781] = 'ER_CANT_SET_GTID_NEXT_TO_GTID_WHEN_GTID_MODE_IS_OFF';\ncodes[1782] = 'ER_CANT_SET_GTID_NEXT_TO_ANONYMOUS_WHEN_GTID_MODE_IS_ON';\ncodes[1783] = 'ER_CANT_SET_GTID_NEXT_LIST_TO_NON_NULL_WHEN_GTID_MODE_IS_OFF';\ncodes[1784] = 'ER_FOUND_GTID_EVENT_WHEN_GTID_MODE_IS_OFF';\ncodes[1785] = 'ER_GTID_UNSAFE_NON_TRANSACTIONAL_TABLE';\ncodes[1786] = 'ER_GTID_UNSAFE_CREATE_SELECT';\ncodes[1787] = 'ER_GTID_UNSAFE_CREATE_DROP_TEMPORARY_TABLE_IN_TRANSACTION';\ncodes[1788] = 'ER_GTID_MODE_CAN_ONLY_CHANGE_ONE_STEP_AT_A_TIME';\ncodes[1789] = 'ER_MASTER_HAS_PURGED_REQUIRED_GTIDS';\ncodes[1790] = 'ER_CANT_SET_GTID_NEXT_WHEN_OWNING_GTID';\ncodes[1791] = 'ER_UNKNOWN_EXPLAIN_FORMAT';\ncodes[1792] = 'ER_CANT_EXECUTE_IN_READ_ONLY_TRANSACTION';\ncodes[1793] = 'ER_TOO_LONG_TABLE_PARTITION_COMMENT';\ncodes[1794] = 'ER_SLAVE_CONFIGURATION';\ncodes[1795] = 'ER_INNODB_FT_LIMIT';\ncodes[1796] = 'ER_INNODB_NO_FT_TEMP_TABLE';\ncodes[1797] = 'ER_INNODB_FT_WRONG_DOCID_COLUMN';\ncodes[1798] = 'ER_INNODB_FT_WRONG_DOCID_INDEX';\ncodes[1799] = 'ER_INNODB_ONLINE_LOG_TOO_BIG';\ncodes[1800] = 'ER_UNKNOWN_ALTER_ALGORITHM';\ncodes[1801] = 'ER_UNKNOWN_ALTER_LOCK';\ncodes[1802] = 'ER_MTS_CHANGE_MASTER_CANT_RUN_WITH_GAPS';\ncodes[1803] = 'ER_MTS_RECOVERY_FAILURE';\ncodes[1804] = 'ER_MTS_RESET_WORKERS';\ncodes[1805] = 'ER_COL_COUNT_DOESNT_MATCH_CORRUPTED_V2';\ncodes[1806] = 'ER_SLAVE_SILENT_RETRY_TRANSACTION';\ncodes[1807] = 'ER_UNUSED_22';\ncodes[1808] = 'ER_TABLE_SCHEMA_MISMATCH';\ncodes[1809] = 'ER_TABLE_IN_SYSTEM_TABLESPACE';\ncodes[1810] = 'ER_IO_READ_ERROR';\ncodes[1811] = 'ER_IO_WRITE_ERROR';\ncodes[1812] = 'ER_TABLESPACE_MISSING';\ncodes[1813] = 'ER_TABLESPACE_EXISTS';\ncodes[1814] = 'ER_TABLESPACE_DISCARDED';\ncodes[1815] = 'ER_INTERNAL_ERROR';\ncodes[1816] = 'ER_INNODB_IMPORT_ERROR';\ncodes[1817] = 'ER_INNODB_INDEX_CORRUPT';\ncodes[1818] = 'ER_INVALID_YEAR_COLUMN_LENGTH';\ncodes[1819] = 'ER_NOT_VALID_PASSWORD';\ncodes[1820] = 'ER_MUST_CHANGE_PASSWORD';\ncodes[1821] = 'ER_FK_NO_INDEX_CHILD';\ncodes[1822] = 'ER_FK_NO_INDEX_PARENT';\ncodes[1823] = 'ER_FK_FAIL_ADD_SYSTEM';\ncodes[1824] = 'ER_FK_CANNOT_OPEN_PARENT';\ncodes[1825] = 'ER_FK_INCORRECT_OPTION';\ncodes[1826] = 'ER_DUP_CONSTRAINT_NAME';\ncodes[1827] = 'ER_PASSWORD_FORMAT';\ncodes[1828] = 'ER_FK_COLUMN_CANNOT_DROP';\ncodes[1829] = 'ER_FK_COLUMN_CANNOT_DROP_CHILD';\ncodes[1830] = 'ER_FK_COLUMN_NOT_NULL';\ncodes[1831] = 'ER_DUP_INDEX';\ncodes[1832] = 'ER_FK_COLUMN_CANNOT_CHANGE';\ncodes[1833] = 'ER_FK_COLUMN_CANNOT_CHANGE_CHILD';\ncodes[1834] = 'ER_FK_CANNOT_DELETE_PARENT';\ncodes[1835] = 'ER_MALFORMED_PACKET';\ncodes[1836] = 'ER_READ_ONLY_MODE';\ncodes[1837] = 'ER_GTID_NEXT_TYPE_UNDEFINED_GROUP';\ncodes[1838] = 'ER_VARIABLE_NOT_SETTABLE_IN_SP';\ncodes[1839] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_MODE_IS_OFF';\ncodes[1840] = 'ER_CANT_SET_GTID_PURGED_WHEN_GTID_EXECUTED_IS_NOT_EMPTY';\ncodes[1841] = 'ER_CANT_SET_GTID_PURGED_WHEN_OWNED_GTIDS_IS_NOT_EMPTY';\ncodes[1842] = 'ER_GTID_PURGED_WAS_CHANGED';\ncodes[1843] = 'ER_GTID_EXECUTED_WAS_CHANGED';\ncodes[1844] = 'ER_BINLOG_STMT_MODE_AND_NO_REPL_TABLES';\ncodes[1845] = 'ER_ALTER_OPERATION_NOT_SUPPORTED';\ncodes[1846] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON';\ncodes[1847] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COPY';\ncodes[1848] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_PARTITION';\ncodes[1849] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_RENAME';\ncodes[1850] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_COLUMN_TYPE';\ncodes[1851] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FK_CHECK';\ncodes[1852] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_IGNORE';\ncodes[1853] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOPK';\ncodes[1854] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_AUTOINC';\ncodes[1855] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_HIDDEN_FTS';\ncodes[1856] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_CHANGE_FTS';\ncodes[1857] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_FTS';\ncodes[1858] = 'ER_SQL_SLAVE_SKIP_COUNTER_NOT_SETTABLE_IN_GTID_MODE';\ncodes[1859] = 'ER_DUP_UNKNOWN_IN_INDEX';\ncodes[1860] = 'ER_IDENT_CAUSES_TOO_LONG_PATH';\ncodes[1861] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_NOT_NULL';\ncodes[1862] = 'ER_MUST_CHANGE_PASSWORD_LOGIN';\ncodes[1863] = 'ER_ROW_IN_WRONG_PARTITION';\ncodes[1864] = 'ER_MTS_EVENT_BIGGER_PENDING_JOBS_SIZE_MAX';\ncodes[1865] = 'ER_INNODB_NO_FT_USES_PARSER';\ncodes[1866] = 'ER_BINLOG_LOGICAL_CORRUPTION';\ncodes[1867] = 'ER_WARN_PURGE_LOG_IN_USE';\ncodes[1868] = 'ER_WARN_PURGE_LOG_IS_ACTIVE';\ncodes[1869] = 'ER_AUTO_INCREMENT_CONFLICT';\ncodes[1870] = 'WARN_ON_BLOCKHOLE_IN_RBR';\ncodes[1871] = 'ER_SLAVE_MI_INIT_REPOSITORY';\ncodes[1872] = 'ER_SLAVE_RLI_INIT_REPOSITORY';\ncodes[1873] = 'ER_ACCESS_DENIED_CHANGE_USER_ERROR';\ncodes[1874] = 'ER_INNODB_READ_ONLY';\ncodes[1875] = 'ER_STOP_SLAVE_SQL_THREAD_TIMEOUT';\ncodes[1876] = 'ER_STOP_SLAVE_IO_THREAD_TIMEOUT';\ncodes[1877] = 'ER_TABLE_CORRUPT';\ncodes[1878] = 'ER_TEMP_FILE_WRITE_FAILURE';\ncodes[1879] = 'ER_INNODB_FT_AUX_NOT_HEX_ID';\ncodes[1880] = 'ER_LAST_MYSQL_ERROR_MESSAGE';\ncodes[1900] = 'ER_UNUSED_18';\ncodes[1901] = 'ER_GENERATED_COLUMN_FUNCTION_IS_NOT_ALLOWED';\ncodes[1902] = 'ER_UNUSED_19';\ncodes[1903] = 'ER_PRIMARY_KEY_BASED_ON_GENERATED_COLUMN';\ncodes[1904] = 'ER_KEY_BASED_ON_GENERATED_VIRTUAL_COLUMN';\ncodes[1905] = 'ER_WRONG_FK_OPTION_FOR_GENERATED_COLUMN';\ncodes[1906] = 'ER_WARNING_NON_DEFAULT_VALUE_FOR_GENERATED_COLUMN';\ncodes[1907] = 'ER_UNSUPPORTED_ACTION_ON_GENERATED_COLUMN';\ncodes[1908] = 'ER_UNUSED_20';\ncodes[1909] = 'ER_UNUSED_21';\ncodes[1910] = 'ER_UNSUPPORTED_ENGINE_FOR_GENERATED_COLUMNS';\ncodes[1911] = 'ER_UNKNOWN_OPTION';\ncodes[1912] = 'ER_BAD_OPTION_VALUE';\ncodes[1913] = 'ER_UNUSED_6';\ncodes[1914] = 'ER_UNUSED_7';\ncodes[1915] = 'ER_UNUSED_8';\ncodes[1916] = 'ER_DATA_OVERFLOW';\ncodes[1917] = 'ER_DATA_TRUNCATED';\ncodes[1918] = 'ER_BAD_DATA';\ncodes[1919] = 'ER_DYN_COL_WRONG_FORMAT';\ncodes[1920] = 'ER_DYN_COL_IMPLEMENTATION_LIMIT';\ncodes[1921] = 'ER_DYN_COL_DATA';\ncodes[1922] = 'ER_DYN_COL_WRONG_CHARSET';\ncodes[1923] = 'ER_ILLEGAL_SUBQUERY_OPTIMIZER_SWITCHES';\ncodes[1924] = 'ER_QUERY_CACHE_IS_DISABLED';\ncodes[1925] = 'ER_QUERY_CACHE_IS_GLOBALY_DISABLED';\ncodes[1926] = 'ER_VIEW_ORDERBY_IGNORED';\ncodes[1927] = 'ER_CONNECTION_KILLED';\ncodes[1928] = 'ER_UNUSED_12';\ncodes[1929] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_SKIP_REPLICATION';\ncodes[1930] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_SKIP_REPLICATION';\ncodes[1931] = 'ER_QUERY_EXCEEDED_ROWS_EXAMINED_LIMIT';\ncodes[1932] = 'ER_NO_SUCH_TABLE_IN_ENGINE';\ncodes[1933] = 'ER_TARGET_NOT_EXPLAINABLE';\ncodes[1934] = 'ER_CONNECTION_ALREADY_EXISTS';\ncodes[1935] = 'ER_MASTER_LOG_PREFIX';\ncodes[1936] = 'ER_CANT_START_STOP_SLAVE';\ncodes[1937] = 'ER_SLAVE_STARTED';\ncodes[1938] = 'ER_SLAVE_STOPPED';\ncodes[1939] = 'ER_SQL_DISCOVER_ERROR';\ncodes[1940] = 'ER_FAILED_GTID_STATE_INIT';\ncodes[1941] = 'ER_INCORRECT_GTID_STATE';\ncodes[1942] = 'ER_CANNOT_UPDATE_GTID_STATE';\ncodes[1943] = 'ER_DUPLICATE_GTID_DOMAIN';\ncodes[1944] = 'ER_GTID_OPEN_TABLE_FAILED';\ncodes[1945] = 'ER_GTID_POSITION_NOT_FOUND_IN_BINLOG';\ncodes[1946] = 'ER_CANNOT_LOAD_SLAVE_GTID_STATE';\ncodes[1947] = 'ER_MASTER_GTID_POS_CONFLICTS_WITH_BINLOG';\ncodes[1948] = 'ER_MASTER_GTID_POS_MISSING_DOMAIN';\ncodes[1949] = 'ER_UNTIL_REQUIRES_USING_GTID';\ncodes[1950] = 'ER_GTID_STRICT_OUT_OF_ORDER';\ncodes[1951] = 'ER_GTID_START_FROM_BINLOG_HOLE';\ncodes[1952] = 'ER_SLAVE_UNEXPECTED_MASTER_SWITCH';\ncodes[1953] = 'ER_INSIDE_TRANSACTION_PREVENTS_SWITCH_GTID_DOMAIN_ID_SEQ_NO';\ncodes[1954] = 'ER_STORED_FUNCTION_PREVENTS_SWITCH_GTID_DOMAIN_ID_SEQ_NO';\ncodes[1955] = 'ER_GTID_POSITION_NOT_FOUND_IN_BINLOG2';\ncodes[1956] = 'ER_BINLOG_MUST_BE_EMPTY';\ncodes[1957] = 'ER_NO_SUCH_QUERY';\ncodes[1958] = 'ER_BAD_BASE64_DATA';\ncodes[1959] = 'ER_INVALID_ROLE';\ncodes[1960] = 'ER_INVALID_CURRENT_USER';\ncodes[1961] = 'ER_CANNOT_GRANT_ROLE';\ncodes[1962] = 'ER_CANNOT_REVOKE_ROLE';\ncodes[1963] = 'ER_CHANGE_SLAVE_PARALLEL_THREADS_ACTIVE';\ncodes[1964] = 'ER_PRIOR_COMMIT_FAILED';\ncodes[1965] = 'ER_IT_IS_A_VIEW';\ncodes[1966] = 'ER_SLAVE_SKIP_NOT_IN_GTID';\ncodes[1967] = 'ER_TABLE_DEFINITION_TOO_BIG';\ncodes[1968] = 'ER_PLUGIN_INSTALLED';\ncodes[1969] = 'ER_STATEMENT_TIMEOUT';\ncodes[1970] = 'ER_SUBQUERIES_NOT_SUPPORTED';\ncodes[1971] = 'ER_SET_STATEMENT_NOT_SUPPORTED';\ncodes[1972] = 'ER_UNUSED_9';\ncodes[1973] = 'ER_USER_CREATE_EXISTS';\ncodes[1974] = 'ER_USER_DROP_EXISTS';\ncodes[1975] = 'ER_ROLE_CREATE_EXISTS';\ncodes[1976] = 'ER_ROLE_DROP_EXISTS';\ncodes[1977] = 'ER_CANNOT_CONVERT_CHARACTER';\ncodes[1978] = 'ER_INVALID_DEFAULT_VALUE_FOR_FIELD';\ncodes[1979] = 'ER_KILL_QUERY_DENIED_ERROR';\ncodes[1980] = 'ER_NO_EIS_FOR_FIELD';\ncodes[1981] = 'ER_WARN_AGGFUNC_DEPENDENCE';\ncodes[1982] = 'WARN_INNODB_PARTITION_OPTION_IGNORED';\ncodes[3000] = 'ER_FILE_CORRUPT';\ncodes[3001] = 'ER_ERROR_ON_MASTER';\ncodes[3002] = 'ER_INCONSISTENT_ERROR';\ncodes[3003] = 'ER_STORAGE_ENGINE_NOT_LOADED';\ncodes[3004] = 'ER_GET_STACKED_DA_WITHOUT_ACTIVE_HANDLER';\ncodes[3005] = 'ER_WARN_LEGACY_SYNTAX_CONVERTED';\ncodes[3006] = 'ER_BINLOG_UNSAFE_FULLTEXT_PLUGIN';\ncodes[3007] = 'ER_CANNOT_DISCARD_TEMPORARY_TABLE';\ncodes[3008] = 'ER_FK_DEPTH_EXCEEDED';\ncodes[3009] = 'ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2';\ncodes[3010] = 'ER_WARN_TRIGGER_DOESNT_HAVE_CREATED';\ncodes[3011] = 'ER_REFERENCED_TRG_DOES_NOT_EXIST_MYSQL';\ncodes[3012] = 'ER_EXPLAIN_NOT_SUPPORTED';\ncodes[3013] = 'ER_INVALID_FIELD_SIZE';\ncodes[3014] = 'ER_MISSING_HA_CREATE_OPTION';\ncodes[3015] = 'ER_ENGINE_OUT_OF_MEMORY';\ncodes[3016] = 'ER_PASSWORD_EXPIRE_ANONYMOUS_USER';\ncodes[3017] = 'ER_SLAVE_SQL_THREAD_MUST_STOP';\ncodes[3018] = 'ER_NO_FT_MATERIALIZED_SUBQUERY';\ncodes[3019] = 'ER_INNODB_UNDO_LOG_FULL';\ncodes[3020] = 'ER_INVALID_ARGUMENT_FOR_LOGARITHM';\ncodes[3021] = 'ER_SLAVE_CHANNEL_IO_THREAD_MUST_STOP';\ncodes[3022] = 'ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO';\ncodes[3023] = 'ER_WARN_ONLY_MASTER_LOG_FILE_NO_POS';\ncodes[3024] = 'ER_QUERY_TIMEOUT';\ncodes[3025] = 'ER_NON_RO_SELECT_DISABLE_TIMER';\ncodes[3026] = 'ER_DUP_LIST_ENTRY';\ncodes[3027] = 'ER_SQL_MODE_NO_EFFECT';\ncodes[3028] = 'ER_AGGREGATE_ORDER_FOR_UNION';\ncodes[3029] = 'ER_AGGREGATE_ORDER_NON_AGG_QUERY';\ncodes[3030] = 'ER_SLAVE_WORKER_STOPPED_PREVIOUS_THD_ERROR';\ncodes[3031] = 'ER_DONT_SUPPORT_SLAVE_PRESERVE_COMMIT_ORDER';\ncodes[3032] = 'ER_SERVER_OFFLINE_MODE';\ncodes[3033] = 'ER_GIS_DIFFERENT_SRIDS';\ncodes[3034] = 'ER_GIS_UNSUPPORTED_ARGUMENT';\ncodes[3035] = 'ER_GIS_UNKNOWN_ERROR';\ncodes[3036] = 'ER_GIS_UNKNOWN_EXCEPTION';\ncodes[3037] = 'ER_GIS_INVALID_DATA';\ncodes[3038] = 'ER_BOOST_GEOMETRY_EMPTY_INPUT_EXCEPTION';\ncodes[3039] = 'ER_BOOST_GEOMETRY_CENTROID_EXCEPTION';\ncodes[3040] = 'ER_BOOST_GEOMETRY_OVERLAY_INVALID_INPUT_EXCEPTION';\ncodes[3041] = 'ER_BOOST_GEOMETRY_TURN_INFO_EXCEPTION';\ncodes[3042] = 'ER_BOOST_GEOMETRY_SELF_INTERSECTION_POINT_EXCEPTION';\ncodes[3043] = 'ER_BOOST_GEOMETRY_UNKNOWN_EXCEPTION';\ncodes[3044] = 'ER_STD_BAD_ALLOC_ERROR';\ncodes[3045] = 'ER_STD_DOMAIN_ERROR';\ncodes[3046] = 'ER_STD_LENGTH_ERROR';\ncodes[3047] = 'ER_STD_INVALID_ARGUMENT';\ncodes[3048] = 'ER_STD_OUT_OF_RANGE_ERROR';\ncodes[3049] = 'ER_STD_OVERFLOW_ERROR';\ncodes[3050] = 'ER_STD_RANGE_ERROR';\ncodes[3051] = 'ER_STD_UNDERFLOW_ERROR';\ncodes[3052] = 'ER_STD_LOGIC_ERROR';\ncodes[3053] = 'ER_STD_RUNTIME_ERROR';\ncodes[3054] = 'ER_STD_UNKNOWN_EXCEPTION';\ncodes[3055] = 'ER_GIS_DATA_WRONG_ENDIANESS';\ncodes[3056] = 'ER_CHANGE_MASTER_PASSWORD_LENGTH';\ncodes[3057] = 'ER_USER_LOCK_WRONG_NAME';\ncodes[3058] = 'ER_USER_LOCK_DEADLOCK';\ncodes[3059] = 'ER_REPLACE_INACCESSIBLE_ROWS';\ncodes[3060] = 'ER_ALTER_OPERATION_NOT_SUPPORTED_REASON_GIS';\ncodes[4000] = 'ER_COMMULTI_BADCONTEXT';\ncodes[4001] = 'ER_BAD_COMMAND_IN_MULTI';\ncodes[4002] = 'ER_WITH_COL_WRONG_LIST';\ncodes[4003] = 'ER_TOO_MANY_DEFINITIONS_IN_WITH_CLAUSE';\ncodes[4004] = 'ER_DUP_QUERY_NAME';\ncodes[4005] = 'ER_RECURSIVE_WITHOUT_ANCHORS';\ncodes[4006] = 'ER_UNACCEPTABLE_MUTUAL_RECURSION';\ncodes[4007] = 'ER_REF_TO_RECURSIVE_WITH_TABLE_IN_DERIVED';\ncodes[4008] = 'ER_NOT_STANDARD_COMPLIANT_RECURSIVE';\ncodes[4009] = 'ER_WRONG_WINDOW_SPEC_NAME';\ncodes[4010] = 'ER_DUP_WINDOW_NAME';\ncodes[4011] = 'ER_PARTITION_LIST_IN_REFERENCING_WINDOW_SPEC';\ncodes[4012] = 'ER_ORDER_LIST_IN_REFERENCING_WINDOW_SPEC';\ncodes[4013] = 'ER_WINDOW_FRAME_IN_REFERENCED_WINDOW_SPEC';\ncodes[4014] = 'ER_BAD_COMBINATION_OF_WINDOW_FRAME_BOUND_SPECS';\ncodes[4015] = 'ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION';\ncodes[4016] = 'ER_WINDOW_FUNCTION_IN_WINDOW_SPEC';\ncodes[4017] = 'ER_NOT_ALLOWED_WINDOW_FRAME';\ncodes[4018] = 'ER_NO_ORDER_LIST_IN_WINDOW_SPEC';\ncodes[4019] = 'ER_RANGE_FRAME_NEEDS_SIMPLE_ORDERBY';\ncodes[4020] = 'ER_WRONG_TYPE_FOR_ROWS_FRAME';\ncodes[4021] = 'ER_WRONG_TYPE_FOR_RANGE_FRAME';\ncodes[4022] = 'ER_FRAME_EXCLUSION_NOT_SUPPORTED';\ncodes[4023] = 'ER_WINDOW_FUNCTION_DONT_HAVE_FRAME';\ncodes[4024] = 'ER_INVALID_NTILE_ARGUMENT';\ncodes[4025] = 'ER_CONSTRAINT_FAILED';\ncodes[4026] = 'ER_EXPRESSION_IS_TOO_BIG';\ncodes[4027] = 'ER_ERROR_EVALUATING_EXPRESSION';\ncodes[4028] = 'ER_CALCULATING_DEFAULT_VALUE';\ncodes[4029] = 'ER_EXPRESSION_REFERS_TO_UNINIT_FIELD';\ncodes[4030] = 'ER_PARTITION_DEFAULT_ERROR';\ncodes[4031] = 'ER_REFERENCED_TRG_DOES_NOT_EXIST';\ncodes[4032] = 'ER_INVALID_DEFAULT_PARAM';\ncodes[4033] = 'ER_BINLOG_NON_SUPPORTED_BULK';\ncodes[4034] = 'ER_BINLOG_UNCOMPRESS_ERROR';\ncodes[4035] = 'ER_JSON_BAD_CHR';\ncodes[4036] = 'ER_JSON_NOT_JSON_CHR';\ncodes[4037] = 'ER_JSON_EOS';\ncodes[4038] = 'ER_JSON_SYNTAX';\ncodes[4039] = 'ER_JSON_ESCAPING';\ncodes[4040] = 'ER_JSON_DEPTH';\ncodes[4041] = 'ER_JSON_PATH_EOS';\ncodes[4042] = 'ER_JSON_PATH_SYNTAX';\ncodes[4043] = 'ER_JSON_PATH_DEPTH';\ncodes[4044] = 'ER_JSON_PATH_NO_WILDCARD';\ncodes[4045] = 'ER_JSON_PATH_ARRAY';\ncodes[4046] = 'ER_JSON_ONE_OR_ALL';\ncodes[4047] = 'ER_UNSUPPORT_COMPRESSED_TEMPORARY_TABLE';\ncodes[4048] = 'ER_GEOJSON_INCORRECT';\ncodes[4049] = 'ER_GEOJSON_TOO_FEW_POINTS';\ncodes[4050] = 'ER_GEOJSON_NOT_CLOSED';\ncodes[4051] = 'ER_JSON_PATH_EMPTY';\ncodes[4052] = 'ER_SLAVE_SAME_ID';\ncodes[4053] = 'ER_FLASHBACK_NOT_SUPPORTED';\ncodes[4054] = 'ER_KEYS_OUT_OF_ORDER';\ncodes[4055] = 'ER_OVERLAPPING_KEYS';\ncodes[4056] = 'ER_REQUIRE_ROW_BINLOG_FORMAT';\ncodes[4057] = 'ER_ISOLATION_MODE_NOT_SUPPORTED';\ncodes[4058] = 'ER_ON_DUPLICATE_DISABLED';\ncodes[4059] = 'ER_UPDATES_WITH_CONSISTENT_SNAPSHOT';\ncodes[4060] = 'ER_ROLLBACK_ONLY';\ncodes[4061] = 'ER_ROLLBACK_TO_SAVEPOINT';\ncodes[4062] = 'ER_ISOLATION_LEVEL_WITH_CONSISTENT_SNAPSHOT';\ncodes[4063] = 'ER_UNSUPPORTED_COLLATION';\ncodes[4064] = 'ER_METADATA_INCONSISTENCY';\ncodes[4065] = 'ER_CF_DIFFERENT';\ncodes[4066] = 'ER_RDB_TTL_DURATION_FORMAT';\ncodes[4067] = 'ER_RDB_STATUS_GENERAL';\ncodes[4068] = 'ER_RDB_STATUS_MSG';\ncodes[4069] = 'ER_RDB_TTL_UNSUPPORTED';\ncodes[4070] = 'ER_RDB_TTL_COL_FORMAT';\ncodes[4071] = 'ER_PER_INDEX_CF_DEPRECATED';\ncodes[4072] = 'ER_KEY_CREATE_DURING_ALTER';\ncodes[4073] = 'ER_SK_POPULATE_DURING_ALTER';\ncodes[4074] = 'ER_SUM_FUNC_WITH_WINDOW_FUNC_AS_ARG';\ncodes[4075] = 'ER_NET_OK_PACKET_TOO_LARGE';\ncodes[4076] = 'ER_GEOJSON_EMPTY_COORDINATES';\ncodes[4077] = 'ER_MYROCKS_CANT_NOPAD_COLLATION';\ncodes[4078] = 'ER_ILLEGAL_PARAMETER_DATA_TYPES2_FOR_OPERATION';\ncodes[4079] = 'ER_ILLEGAL_PARAMETER_DATA_TYPE_FOR_OPERATION';\ncodes[4080] = 'ER_WRONG_PARAMCOUNT_TO_CURSOR';\ncodes[4081] = 'ER_UNKNOWN_STRUCTURED_VARIABLE';\ncodes[4082] = 'ER_ROW_VARIABLE_DOES_NOT_HAVE_FIELD';\ncodes[4083] = 'ER_END_IDENTIFIER_DOES_NOT_MATCH';\ncodes[4084] = 'ER_SEQUENCE_RUN_OUT';\ncodes[4085] = 'ER_SEQUENCE_INVALID_DATA';\ncodes[4086] = 'ER_SEQUENCE_INVALID_TABLE_STRUCTURE';\ncodes[4087] = 'ER_SEQUENCE_ACCESS_ERROR';\ncodes[4088] = 'ER_SEQUENCE_BINLOG_FORMAT';\ncodes[4089] = 'ER_NOT_SEQUENCE';\ncodes[4090] = 'ER_NOT_SEQUENCE2';\ncodes[4091] = 'ER_UNKNOWN_SEQUENCES';\ncodes[4092] = 'ER_UNKNOWN_VIEW';\ncodes[4093] = 'ER_WRONG_INSERT_INTO_SEQUENCE';\ncodes[4094] = 'ER_SP_STACK_TRACE';\ncodes[4095] = 'ER_PACKAGE_ROUTINE_IN_SPEC_NOT_DEFINED_IN_BODY';\ncodes[4096] = 'ER_PACKAGE_ROUTINE_FORWARD_DECLARATION_NOT_DEFINED';\ncodes[4097] = 'ER_COMPRESSED_COLUMN_USED_AS_KEY';\ncodes[4098] = 'ER_UNKNOWN_COMPRESSION_METHOD';\ncodes[4099] = 'ER_WRONG_NUMBER_OF_VALUES_IN_TVC';\ncodes[4100] = 'ER_FIELD_REFERENCE_IN_TVC';\ncodes[4101] = 'ER_WRONG_TYPE_FOR_PERCENTILE_FUNC';\ncodes[4102] = 'ER_ARGUMENT_NOT_CONSTANT';\ncodes[4103] = 'ER_ARGUMENT_OUT_OF_RANGE';\ncodes[4104] = 'ER_WRONG_TYPE_OF_ARGUMENT';\ncodes[4105] = 'ER_NOT_AGGREGATE_FUNCTION';\ncodes[4106] = 'ER_INVALID_AGGREGATE_FUNCTION';\ncodes[4107] = 'ER_INVALID_VALUE_TO_LIMIT';\ncodes[4108] = 'ER_INVISIBLE_NOT_NULL_WITHOUT_DEFAULT';\ncodes[4109] = 'ER_UPDATE_INFO_WITH_SYSTEM_VERSIONING';\ncodes[4110] = 'ER_VERS_FIELD_WRONG_TYPE';\ncodes[4111] = 'ER_VERS_ENGINE_UNSUPPORTED';\ncodes[4112] = 'ER_UNUSED_23';\ncodes[4113] = 'ER_PARTITION_WRONG_TYPE';\ncodes[4114] = 'WARN_VERS_PART_FULL';\ncodes[4115] = 'WARN_VERS_PARAMETERS';\ncodes[4116] = 'ER_VERS_DROP_PARTITION_INTERVAL';\ncodes[4117] = 'ER_UNUSED_25';\ncodes[4118] = 'WARN_VERS_PART_NON_HISTORICAL';\ncodes[4119] = 'ER_VERS_ALTER_NOT_ALLOWED';\ncodes[4120] = 'ER_VERS_ALTER_ENGINE_PROHIBITED';\ncodes[4121] = 'ER_VERS_RANGE_PROHIBITED';\ncodes[4122] = 'ER_CONFLICTING_FOR_SYSTEM_TIME';\ncodes[4123] = 'ER_VERS_TABLE_MUST_HAVE_COLUMNS';\ncodes[4124] = 'ER_VERS_NOT_VERSIONED';\ncodes[4125] = 'ER_MISSING';\ncodes[4126] = 'ER_VERS_PERIOD_COLUMNS';\ncodes[4127] = 'ER_PART_WRONG_VALUE';\ncodes[4128] = 'ER_VERS_WRONG_PARTS';\ncodes[4129] = 'ER_VERS_NO_TRX_ID';\ncodes[4130] = 'ER_VERS_ALTER_SYSTEM_FIELD';\ncodes[4131] = 'ER_DROP_VERSIONING_SYSTEM_TIME_PARTITION';\ncodes[4132] = 'ER_VERS_DB_NOT_SUPPORTED';\ncodes[4133] = 'ER_VERS_TRT_IS_DISABLED';\ncodes[4134] = 'ER_VERS_DUPLICATE_ROW_START_END';\ncodes[4135] = 'ER_VERS_ALREADY_VERSIONED';\ncodes[4136] = 'ER_UNUSED_24';\ncodes[4137] = 'ER_VERS_NOT_SUPPORTED';\ncodes[4138] = 'ER_VERS_TRX_PART_HISTORIC_ROW_NOT_SUPPORTED';\ncodes[4139] = 'ER_INDEX_FILE_FULL';\ncodes[4140] = 'ER_UPDATED_COLUMN_ONLY_ONCE';\ncodes[4141] = 'ER_EMPTY_ROW_IN_TVC';\ncodes[4142] = 'ER_VERS_QUERY_IN_PARTITION';\ncodes[4143] = 'ER_KEY_DOESNT_SUPPORT';\ncodes[4144] = 'ER_ALTER_OPERATION_TABLE_OPTIONS_NEED_REBUILD';\ncodes[4145] = 'ER_BACKUP_LOCK_IS_ACTIVE';\ncodes[4146] = 'ER_BACKUP_NOT_RUNNING';\ncodes[4147] = 'ER_BACKUP_WRONG_STAGE';\ncodes[4148] = 'ER_BACKUP_STAGE_FAILED';\ncodes[4149] = 'ER_BACKUP_UNKNOWN_STAGE';\ncodes[4150] = 'ER_USER_IS_BLOCKED';\ncodes[4151] = 'ER_ACCOUNT_HAS_BEEN_LOCKED';\ncodes[4152] = 'ER_PERIOD_TEMPORARY_NOT_ALLOWED';\ncodes[4153] = 'ER_PERIOD_TYPES_MISMATCH';\ncodes[4154] = 'ER_MORE_THAN_ONE_PERIOD';\ncodes[4155] = 'ER_PERIOD_FIELD_WRONG_ATTRIBUTES';\ncodes[4156] = 'ER_PERIOD_NOT_FOUND';\ncodes[4157] = 'ER_PERIOD_COLUMNS_UPDATED';\ncodes[4158] = 'ER_PERIOD_CONSTRAINT_DROP';\ncodes[4159] = 'ER_TOO_LONG_KEYPART';\ncodes[4160] = 'ER_TOO_LONG_DATABASE_COMMENT';\ncodes[4161] = 'ER_UNKNOWN_DATA_TYPE';\ncodes[4162] = 'ER_UNKNOWN_OPERATOR';\ncodes[4163] = 'ER_WARN_HISTORY_ROW_START_TIME';\ncodes[4164] = 'ER_PART_STARTS_BEYOND_INTERVAL';\ncodes[4165] = 'ER_GALERA_REPLICATION_NOT_SUPPORTED';\ncodes[4166] = 'ER_LOAD_INFILE_CAPABILITY_DISABLED';\ncodes[4167] = 'ER_NO_SECURE_TRANSPORTS_CONFIGURED';\ncodes[4168] = 'ER_SLAVE_IGNORED_SHARED_TABLE';\ncodes[4169] = 'ER_NO_AUTOINCREMENT_WITH_UNIQUE';\n\nmodule.exports.codes = codes;\n", "'use strict';\nconst ErrorCodes = require('../const/error-code');\n\nclass SqlError extends Error {\n  constructor(msg, sql, fatal, info, sqlState, errno, additionalStack, addHeader = undefined) {\n    super(\n      (addHeader === undefined || addHeader\n        ? `(conn=${info ? (info.threadId ? info.threadId : -1) : -1}, no: ${errno ? errno : -1}, SQLState: ${\n            sqlState ? sqlState : 'HY000'\n          }) `\n        : '') +\n        msg +\n        (sql ? '\\nsql: ' + sql : '')\n    );\n    this.text = msg;\n    this.sql = sql;\n    this.fatal = fatal;\n    this.errno = errno;\n    this.sqlState = sqlState;\n    if (errno > 45000 && errno < 46000) {\n      //driver error\n      this.code = errByNo[errno] || 'UNKNOWN';\n    } else {\n      this.code = ErrorCodes.codes[this.errno] || 'UNKNOWN';\n    }\n    if (additionalStack) {\n      //adding caller stack, removing initial \"Error:\\n\"\n      this.stack += '\\n From event:\\n' + additionalStack.substring(additionalStack.indexOf('\\n') + 1);\n    }\n  }\n}\n\n/**\n * Error factory, so error get connection information.\n *\n * @param msg               current error message\n * @param errno             error number\n * @param info              connection information\n * @param sqlState          sql state\n * @param sql               sql command\n * @param fatal             is error fatal\n * @param additionalStack   additional stack trace to see\n * @param addHeader         add connection information\n * @returns {Error} the error\n */\nmodule.exports.createError = function (\n  msg,\n  errno,\n  info = null,\n  sqlState = 'HY000',\n  sql = null,\n  fatal = false,\n  additionalStack = undefined,\n  addHeader = undefined\n) {\n  return new SqlError(msg, sql, fatal, info, sqlState, errno, additionalStack, addHeader);\n};\n\n/**\n * Fatal error factory, so error get connection information.\n *\n * @param msg               current error message\n * @param errno             error number\n * @param info              connection information\n * @param sqlState          sql state\n * @param sql               sql command\n * @param additionalStack   additional stack trace to see\n * @param addHeader         add connection information\n * @returns {Error} the error\n */\nmodule.exports.createFatalError = function (\n  msg,\n  errno,\n  info = null,\n  sqlState = '08S01',\n  sql = null,\n  additionalStack = undefined,\n  addHeader = undefined\n) {\n  return new SqlError(msg, sql, true, info, sqlState, errno, additionalStack, addHeader);\n};\n\n/********************************************************************************\n * Driver specific errors\n ********************************************************************************/\n\nmodule.exports.ER_CONNECTION_ALREADY_CLOSED = 45001;\nmodule.exports.ER_ALREADY_CONNECTING = 45002;\nmodule.exports.ER_MYSQL_CHANGE_USER_BUG = 45003;\nmodule.exports.ER_CMD_NOT_EXECUTED_DESTROYED = 45004;\nmodule.exports.ER_NULL_CHAR_ESCAPEID = 45005;\nmodule.exports.ER_NULL_ESCAPEID = 45006;\nmodule.exports.ER_NOT_IMPLEMENTED_FORMAT = 45007;\nmodule.exports.ER_NODE_NOT_SUPPORTED_TLS = 45008;\nmodule.exports.ER_SOCKET_UNEXPECTED_CLOSE = 45009;\nmodule.exports.ER_UNEXPECTED_PACKET = 45011;\nmodule.exports.ER_CONNECTION_TIMEOUT = 45012;\nmodule.exports.ER_CMD_CONNECTION_CLOSED = 45013;\nmodule.exports.ER_CHANGE_USER_BAD_PACKET = 45014;\nmodule.exports.ER_PING_BAD_PACKET = 45015;\nmodule.exports.ER_MISSING_PARAMETER = 45016;\nmodule.exports.ER_PARAMETER_UNDEFINED = 45017;\nmodule.exports.ER_PLACEHOLDER_UNDEFINED = 45018;\nmodule.exports.ER_SOCKET = 45019;\nmodule.exports.ER_EOF_EXPECTED = 45020;\nmodule.exports.ER_LOCAL_INFILE_DISABLED = 45021;\nmodule.exports.ER_LOCAL_INFILE_NOT_READABLE = 45022;\nmodule.exports.ER_SERVER_SSL_DISABLED = 45023;\nmodule.exports.ER_AUTHENTICATION_BAD_PACKET = 45024;\nmodule.exports.ER_AUTHENTICATION_PLUGIN_NOT_SUPPORTED = 45025;\nmodule.exports.ER_SOCKET_TIMEOUT = 45026;\nmodule.exports.ER_POOL_ALREADY_CLOSED = 45027;\nmodule.exports.ER_GET_CONNECTION_TIMEOUT = 45028;\nmodule.exports.ER_SETTING_SESSION_ERROR = 45029;\nmodule.exports.ER_INITIAL_SQL_ERROR = 45030;\nmodule.exports.ER_BATCH_WITH_NO_VALUES = 45031;\nmodule.exports.ER_RESET_BAD_PACKET = 45032;\nmodule.exports.ER_WRONG_IANA_TIMEZONE = 45033;\nmodule.exports.ER_LOCAL_INFILE_WRONG_FILENAME = 45034;\nmodule.exports.ER_ADD_CONNECTION_CLOSED_POOL = 45035;\nmodule.exports.ER_WRONG_AUTO_TIMEZONE = 45036;\nmodule.exports.ER_CLOSING_POOL = 45037;\nmodule.exports.ER_TIMEOUT_NOT_SUPPORTED = 45038;\nmodule.exports.ER_INITIAL_TIMEOUT_ERROR = 45039;\nmodule.exports.ER_DUPLICATE_FIELD = 45040;\nmodule.exports.ER_CLIENT_OPTION_INCOMPATIBILITY = 45041;\nmodule.exports.ER_PING_TIMEOUT = 45042;\nmodule.exports.ER_BAD_PARAMETER_VALUE = 45043;\nmodule.exports.ER_CANNOT_RETRIEVE_RSA_KEY = 45044;\nmodule.exports.ER_MINIMUM_NODE_VERSION_REQUIRED = 45045;\nmodule.exports.ER_MAX_ALLOWED_PACKET = 45046;\nmodule.exports.ER_NOT_SUPPORTED_AUTH_PLUGIN = 45047;\nmodule.exports.ER_COMPRESSION_NOT_SUPPORTED = 45048;\nmodule.exports.ER_UNDEFINED_SQL = 45049;\n\nconst keys = Object.keys(module.exports);\nconst errByNo = {};\nfor (let i = 0; i < keys.length; i++) {\n  const keyName = keys[i];\n  if (keyName !== 'createError') {\n    errByNo[module.exports[keyName]] = keyName;\n  }\n}\n\nmodule.exports.SqlError = SqlError;\n", "var lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar inited = false;\nfunction init () {\n  inited = true;\n  var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n  for (var i = 0, len = code.length; i < len; ++i) {\n    lookup[i] = code[i];\n    revLookup[code.charCodeAt(i)] = i;\n  }\n\n  revLookup['-'.charCodeAt(0)] = 62;\n  revLookup['_'.charCodeAt(0)] = 63;\n}\n\nfunction toByteArray (b64) {\n  if (!inited) {\n    init();\n  }\n  var i, j, l, tmp, placeHolders, arr;\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;\n\n  // base64 is 4/3 + up to two characters of the original data\n  arr = new Arr(len * 3 / 4 - placeHolders);\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len;\n\n  var L = 0;\n\n  for (i = 0, j = 0; i < l; i += 4, j += 3) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];\n    arr[L++] = (tmp >> 16) & 0xFF;\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);\n    arr[L++] = tmp & 0xFF;\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);\n    arr[L++] = (tmp >> 8) & 0xFF;\n    arr[L++] = tmp & 0xFF;\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp;\n  var output = [];\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);\n    output.push(tripletToBase64(tmp));\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  if (!inited) {\n    init();\n  }\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n  var output = '';\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    output += lookup[tmp >> 2];\n    output += lookup[(tmp << 4) & 0x3F];\n    output += '==';\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);\n    output += lookup[tmp >> 10];\n    output += lookup[(tmp >> 4) & 0x3F];\n    output += lookup[(tmp << 2) & 0x3F];\n    output += '=';\n  }\n\n  parts.push(output);\n\n  return parts.join('')\n}\n\nfunction read (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? (nBytes - 1) : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n\n  i += d;\n\n  e = s & ((1 << (-nBits)) - 1);\n  s >>= (-nBits);\n  nBits += eLen;\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1);\n  e >>= (-nBits);\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction write (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);\n  var i = isLE ? 0 : (nBytes - 1);\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;\n\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n}\n\nvar toString = {}.toString;\n\nvar isArray = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\nvar INSPECT_MAX_BYTES = 50;\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : true;\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nvar _kMaxLength = kMaxLength();\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n    that.length = length;\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr\n};\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size);\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n};\n\nfunction allocUnsafe (that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n};\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (internalIsBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0;\n  }\n  return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer;\nfunction internalIsBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n};\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i;\n  if (length === undefined) {\n    length = 0;\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n    if (!internalIsBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n  return buffer\n};\n\nfunction byteLength (string, encoding) {\n  if (internalIsBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\nBuffer.byteLength = byteLength;\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false;\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0;\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true;\n\nfunction swap (b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length;\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n  return this\n};\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length;\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n  return this\n};\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length;\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n  return this\n};\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0;\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n};\n\nBuffer.prototype.equals = function equals (b) {\n  if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n};\n\nBuffer.prototype.inspect = function inspect () {\n  var str = '';\n  var max = INSPECT_MAX_BYTES;\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n  return '<Buffer ' + str + '>'\n};\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!internalIsBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n};\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n  byteOffset = +byteOffset;  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1);\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (internalIsBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i;\n  if (dir) {\n    var foundIndex = -1;\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n};\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n};\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n    if (length > remaining) {\n      length = remaining;\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed;\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0;\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  var loweredCase = false;\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n};\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return fromByteArray(buf)\n  } else {\n    return fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n\n  var i = start;\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1];\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = '';\n  var i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    );\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length;\n\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n\n  var out = '';\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n\n  var newBuf;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf\n};\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val\n};\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset]\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | (this[offset + 1] << 8)\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return (this[offset] << 8) | this[offset + 1]\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n};\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n  mul *= 0x80;\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n\n  return val\n};\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | (this[offset + 1] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | (this[offset] << 8);\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, true, 23, 4)\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return read(this, offset, false, 23, 4)\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, true, 52, 8)\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return read(this, offset, false, 52, 8)\n};\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!internalIsBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 1] = (value >>> 8);\n    this[offset] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength\n};\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = (value & 0xff);\n  return offset + 1\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8);\n    this[offset + 1] = (value & 0xff);\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n  return offset + 2\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff);\n    this[offset + 1] = (value >>> 8);\n    this[offset + 2] = (value >>> 16);\n    this[offset + 3] = (value >>> 24);\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n  return offset + 4\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24);\n    this[offset + 1] = (value >>> 16);\n    this[offset + 2] = (value >>> 8);\n    this[offset + 3] = (value & 0xff);\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n  return offset + 4\n};\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4);\n  }\n  write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n};\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8);\n  }\n  write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n};\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start;\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length;\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    );\n  }\n\n  return len\n};\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n      if (code < 256) {\n        val = code;\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n\n  if (!val) val = 0;\n\n  var i;\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = internalIsBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this\n};\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '');\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint;\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null;\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      );\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray\n}\n\n\nfunction base64ToBytes (str) {\n  return toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i];\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n  return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n}\n\nfunction isFastBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))\n}\n\nexport { Buffer, INSPECT_MAX_BYTES, SlowBuffer, isBuffer, _kMaxLength as kMaxLength };\n", "\nconst polyfill = require('buffer')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n", "\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport {Buffer} from 'buffer';\nvar isBufferEncoding = Buffer.isEncoding\n  || function(encoding) {\n       switch (encoding && encoding.toLowerCase()) {\n         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;\n         default: return false;\n       }\n     }\n\n\nfunction assertEncoding(encoding) {\n  if (encoding && !isBufferEncoding(encoding)) {\n    throw new Error('Unknown encoding: ' + encoding);\n  }\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters. CESU-8 is handled as part of the UTF-8 encoding.\n//\n// @TODO Handling all encodings inside a single object makes it very difficult\n// to reason about this code, so it should be split up in the future.\n// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code\n// points as used by CESU-8.\nexport function StringDecoder(encoding) {\n  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');\n  assertEncoding(encoding);\n  switch (this.encoding) {\n    case 'utf8':\n      // CESU-8 represents each of Surrogate Pair by 3-bytes\n      this.surrogateSize = 3;\n      break;\n    case 'ucs2':\n    case 'utf16le':\n      // UTF-16 represents each of Surrogate Pair by 2-bytes\n      this.surrogateSize = 2;\n      this.detectIncompleteChar = utf16DetectIncompleteChar;\n      break;\n    case 'base64':\n      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.\n      this.surrogateSize = 3;\n      this.detectIncompleteChar = base64DetectIncompleteChar;\n      break;\n    default:\n      this.write = passThroughWrite;\n      return;\n  }\n\n  // Enough space to store all bytes of a single character. UTF-8 needs 4\n  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).\n  this.charBuffer = new Buffer(6);\n  // Number of bytes received for the current incomplete multi-byte character.\n  this.charReceived = 0;\n  // Number of bytes expected for the current incomplete multi-byte character.\n  this.charLength = 0;\n};\n\n\n// write decodes the given buffer and returns it as JS string that is\n// guaranteed to not contain any partial multi-byte characters. Any partial\n// character found at the end of the buffer is buffered up, and will be\n// returned when calling write again with the remaining bytes.\n//\n// Note: Converting a Buffer containing an orphan surrogate to a String\n// currently works, but converting a String to a Buffer (via `new Buffer`, or\n// Buffer#write) will replace incomplete surrogates with the unicode\n// replacement character. See https://codereview.chromium.org/121173009/ .\nStringDecoder.prototype.write = function(buffer) {\n  var charStr = '';\n  // if our last write ended with an incomplete multibyte character\n  while (this.charLength) {\n    // determine how many remaining bytes this buffer has to offer for this char\n    var available = (buffer.length >= this.charLength - this.charReceived) ?\n        this.charLength - this.charReceived :\n        buffer.length;\n\n    // add the new bytes to the char buffer\n    buffer.copy(this.charBuffer, this.charReceived, 0, available);\n    this.charReceived += available;\n\n    if (this.charReceived < this.charLength) {\n      // still not enough chars in this buffer? wait for more ...\n      return '';\n    }\n\n    // remove bytes belonging to the current character from the buffer\n    buffer = buffer.slice(available, buffer.length);\n\n    // get the character that was split\n    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);\n\n    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n    var charCode = charStr.charCodeAt(charStr.length - 1);\n    if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n      this.charLength += this.surrogateSize;\n      charStr = '';\n      continue;\n    }\n    this.charReceived = this.charLength = 0;\n\n    // if there are no more bytes in this buffer, just emit our char\n    if (buffer.length === 0) {\n      return charStr;\n    }\n    break;\n  }\n\n  // determine and set charLength / charReceived\n  this.detectIncompleteChar(buffer);\n\n  var end = buffer.length;\n  if (this.charLength) {\n    // buffer the incomplete character bytes we got\n    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);\n    end -= this.charReceived;\n  }\n\n  charStr += buffer.toString(this.encoding, 0, end);\n\n  var end = charStr.length - 1;\n  var charCode = charStr.charCodeAt(end);\n  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character\n  if (charCode >= 0xD800 && charCode <= 0xDBFF) {\n    var size = this.surrogateSize;\n    this.charLength += size;\n    this.charReceived += size;\n    this.charBuffer.copy(this.charBuffer, size, 0, size);\n    buffer.copy(this.charBuffer, 0, 0, size);\n    return charStr.substring(0, end);\n  }\n\n  // or just emit the charStr\n  return charStr;\n};\n\n// detectIncompleteChar determines if there is an incomplete UTF-8 character at\n// the end of the given buffer. If so, it sets this.charLength to the byte\n// length that character, and sets this.charReceived to the number of bytes\n// that are available for this character.\nStringDecoder.prototype.detectIncompleteChar = function(buffer) {\n  // determine how many bytes we have to check at the end of this buffer\n  var i = (buffer.length >= 3) ? 3 : buffer.length;\n\n  // Figure out if one of the last i bytes of our buffer announces an\n  // incomplete char.\n  for (; i > 0; i--) {\n    var c = buffer[buffer.length - i];\n\n    // See http://en.wikipedia.org/wiki/UTF-8#Description\n\n    // 110XXXXX\n    if (i == 1 && c >> 5 == 0x06) {\n      this.charLength = 2;\n      break;\n    }\n\n    // 1110XXXX\n    if (i <= 2 && c >> 4 == 0x0E) {\n      this.charLength = 3;\n      break;\n    }\n\n    // 11110XXX\n    if (i <= 3 && c >> 3 == 0x1E) {\n      this.charLength = 4;\n      break;\n    }\n  }\n  this.charReceived = i;\n};\n\nStringDecoder.prototype.end = function(buffer) {\n  var res = '';\n  if (buffer && buffer.length)\n    res = this.write(buffer);\n\n  if (this.charReceived) {\n    var cr = this.charReceived;\n    var buf = this.charBuffer;\n    var enc = this.encoding;\n    res += buf.slice(0, cr).toString(enc);\n  }\n\n  return res;\n};\n\nfunction passThroughWrite(buffer) {\n  return buffer.toString(this.encoding);\n}\n\nfunction utf16DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 2;\n  this.charLength = this.charReceived ? 2 : 0;\n}\n\nfunction base64DetectIncompleteChar(buffer) {\n  this.charReceived = buffer.length % 3;\n  this.charLength = this.charReceived ? 3 : 0;\n}\n", "\nconst polyfill = require('string_decoder')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '\uD83D\uDCA9') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function(buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n}\n\nInternalDecoder.prototype.end = function() {\n    return this.decoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n", "'use strict';\n\nvar Buffer = require('safer-buffer').Buffer;\n\n// == UTF32-LE/BE codec. ==========================================================\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n    this.bomAware = true;\n    this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = { type: '_utf32', isLE: true };\nexports.utf32be = { type: '_utf32', isLE: false };\n\n// Aliases\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\n\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder;\n\n// -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function(str) {\n    var src = Buffer.from(str, 'ucs2');\n    var dst = Buffer.alloc(src.length * 2);\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n    var offset = 0;\n\n    for (var i = 0; i < src.length; i += 2) {\n        var code = src.readUInt16LE(i);\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\n\n        if (this.highSurrogate) {\n            if (isHighSurrogate || !isLowSurrogate) {\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n                // (technically wrong, but expected by some applications, like Windows file names).\n                write32.call(dst, this.highSurrogate, offset);\n                offset += 4;\n            }\n            else {\n                // Create 32-bit value from high and low surrogates;\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\n\n                write32.call(dst, codepoint, offset);\n                offset += 4;\n                this.highSurrogate = 0;\n\n                continue;\n            }\n        }\n\n        if (isHighSurrogate)\n            this.highSurrogate = code;\n        else {\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n            // unpaired high surrogates.\n            write32.call(dst, code, offset);\n            offset += 4;\n            this.highSurrogate = 0;\n        }\n    }\n\n    if (offset < dst.length)\n        dst = dst.slice(0, offset);\n\n    return dst;\n};\n\nUtf32Encoder.prototype.end = function() {\n    // Treat any leftover high surrogate as a semi-valid independent character.\n    if (!this.highSurrogate)\n        return;\n\n    var buf = Buffer.alloc(4);\n\n    if (this.isLE)\n        buf.writeUInt32LE(this.highSurrogate, 0);\n    else\n        buf.writeUInt32BE(this.highSurrogate, 0);\n\n    this.highSurrogate = 0;\n\n    return buf;\n};\n\n// -- Decoding\n\nfunction Utf32Decoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n    this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function(src) {\n    if (src.length === 0)\n        return '';\n\n    var i = 0;\n    var codepoint = 0;\n    var dst = Buffer.alloc(src.length + 4);\n    var offset = 0;\n    var isLE = this.isLE;\n    var overflow = this.overflow;\n    var badChar = this.badChar;\n\n    if (overflow.length > 0) {\n        for (; i < src.length && overflow.length < 4; i++)\n            overflow.push(src[i]);\n        \n        if (overflow.length === 4) {\n            // NOTE: codepoint is a signed int32 and can be negative.\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n            if (isLE) {\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\n            } else {\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\n            }\n            overflow.length = 0;\n\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\n        }\n    }\n\n    // Main loop. Should be as optimized as possible.\n    for (; i < src.length - 3; i += 4) {\n        // NOTE: codepoint is a signed int32 and can be negative.\n        if (isLE) {\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\n        } else {\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\n        }\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n\n    // Keep overflowing bytes.\n    for (; i < src.length; i++) {\n        overflow.push(src[i]);\n    }\n\n    return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\n        // Not a valid Unicode codepoint\n        codepoint = badChar;\n    } \n\n    // Ephemeral Planes: Write high surrogate.\n    if (codepoint >= 0x10000) {\n        codepoint -= 0x10000;\n\n        var high = 0xD800 | (codepoint >> 10);\n        dst[offset++] = high & 0xff;\n        dst[offset++] = high >> 8;\n\n        // Low surrogate is written below.\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\n    }\n\n    // Write BMP char or low surrogate.\n    dst[offset++] = codepoint & 0xff;\n    dst[offset++] = codepoint >> 8;\n\n    return offset;\n};\n\nUtf32Decoder.prototype.end = function() {\n    this.overflow.length = 0;\n};\n\n// == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n    this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\n\n// -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n    options = options || {};\n\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function() {\n    return this.encoder.end();\n};\n\n// -- Decoding\n\nfunction Utf32AutoDecoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function(buf) {\n    if (!this.decoder) { \n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 4) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n                        return 'utf-32le';\n                    }\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n                        return 'utf-32be';\n                    }\n                }\n\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-32le';\n}\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n    this.overflowByte = -1;\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n        \n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-16le';\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n", "\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u00C4\u0100\u0101\u00C9\u0104\u00D6\u00DC\u00E1\u0105\u010C\u00E4\u010D\u0106\u0107\u00E9\u0179\u017A\u010E\u00ED\u010F\u0112\u0113\u0116\u00F3\u0117\u00F4\u00F6\u00F5\u00FA\u011A\u011B\u00FC\u2020\u00B0\u0118\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u0119\u00A8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\u00AC\u221A\u0144\u0147\u2206\u00AB\u00BB\u2026\u00A0\u0148\u0150\u00D5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\u00C1\u0164\u0165\u00CD\u017D\u017E\u016A\u00D3\u00D4\u016B\u016E\u00DA\u016F\u0170\u0171\u0172\u0173\u00DD\u00FD\u0137\u017B\u0141\u017C\u0122\u02C7\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u20AC\u25A0\u00A0\"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2514\u2534\u252C\u251C\u2500\u253C\u2563\u2551\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2510\u2591\u2592\u2593\u2502\u2524\u2116\u00A7\u2557\u255D\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n    },\n\n    \"cp720\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\\x80\\x81\u00E9\u00E2\\x84\u00E0\\x86\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\\x8d\\x8e\\x8f\\x90\\u0651\\u0652\u00F4\u00A4\u0640\u00FB\u00F9\u0621\u0622\u0623\u0624\u00A3\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0636\u0637\u0638\u0639\u063A\u0641\u00B5\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u2261\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\\u00a0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n", "\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\uFFFD\uFFFD\uFFFD\u2026\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\u0160\u2039\u015A\u0164\u017D\u0179\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0161\u203A\u015B\u0165\u017E\u017A\u00A0\u02C7\u02D8\u0141\u00A4\u0104\u00A6\u00A7\u00A8\u00A9\u015E\u00AB\u00AC\u00AD\u00AE\u017B\u00B0\u00B1\u02DB\u0142\u00B4\u00B5\u00B6\u00B7\u00B8\u0105\u015F\u00BB\u013D\u02DD\u013E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u040C\u040B\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u045C\u045B\u045F\u00A0\u040E\u045E\u0408\u00A4\u0490\u00A6\u00A7\u0401\u00A9\u0404\u00AB\u00AC\u00AD\u00AE\u0407\u00B0\u00B1\u0406\u0456\u0491\u00B5\u00B6\u00B7\u0451\u2116\u0454\u00BB\u0458\u0405\u0455\u0457\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\u017D\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\u017E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u0385\u0386\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\uFFFD\u00AB\u00AC\u00AD\u00AE\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u00B5\u00B6\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\u00A0\u00A1\u00A2\u00A3\u20AA\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\u00BF\u05B0\u05B1\u05B2\u05B3\u05B4\u05B5\u05B6\u05B7\u05B8\u05B9\u05BA\u05BB\u05BC\u05BD\u05BE\u05BF\u05C0\u05C1\u05C2\u05C3\u05F0\u05F1\u05F2\u05F3\u05F4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u067E\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0679\u2039\u0152\u0686\u0698\u0688\u06AF\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u06A9\u2122\u0691\u203A\u0153\u200C\u200D\u06BA\u00A0\u060C\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u06BE\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u061B\u00BB\u00BC\u00BD\u00BE\u061F\u06C1\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u00D7\u0637\u0638\u0639\u063A\u0640\u0641\u0642\u0643\u00E0\u0644\u00E2\u0645\u0646\u0647\u0648\u00E7\u00E8\u00E9\u00EA\u00EB\u0649\u064A\u00EE\u00EF\u064B\u064C\u064D\u064E\u00F4\u064F\u0650\u00F7\u0651\u00F9\u0652\u00FB\u00FC\u200E\u200F\u06D2\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\uFFFD\u201E\u2026\u2020\u2021\uFFFD\u2030\uFFFD\u2039\uFFFD\u00A8\u02C7\u00B8\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\u00AF\u02DB\uFFFD\u00A0\uFFFD\u00A2\u00A3\u00A4\uFFFD\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u02D9\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\uFFFD\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\uFFFD\u2039\u0152\uFFFD\uFFFD\uFFFD\uFFFD\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\uFFFD\u203A\u0153\uFFFD\uFFFD\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u02D8\u0141\u00A4\u013D\u015A\u00A7\u00A8\u0160\u015E\u0164\u0179\u00AD\u017D\u017B\u00B0\u0105\u02DB\u0142\u00B4\u013E\u015B\u02C7\u00B8\u0161\u015F\u0165\u017A\u02DD\u017E\u017C\u0154\u00C1\u00C2\u0102\u00C4\u0139\u0106\u00C7\u010C\u00C9\u0118\u00CB\u011A\u00CD\u00CE\u010E\u0110\u0143\u0147\u00D3\u00D4\u0150\u00D6\u00D7\u0158\u016E\u00DA\u0170\u00DC\u00DD\u0162\u00DF\u0155\u00E1\u00E2\u0103\u00E4\u013A\u0107\u00E7\u010D\u00E9\u0119\u00EB\u011B\u00ED\u00EE\u010F\u0111\u0144\u0148\u00F3\u00F4\u0151\u00F6\u00F7\u0159\u016F\u00FA\u0171\u00FC\u00FD\u0163\u02D9\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0126\u02D8\u00A3\u00A4\uFFFD\u0124\u00A7\u00A8\u0130\u015E\u011E\u0134\u00AD\uFFFD\u017B\u00B0\u0127\u00B2\u00B3\u00B4\u00B5\u0125\u00B7\u00B8\u0131\u015F\u011F\u0135\u00BD\uFFFD\u017C\u00C0\u00C1\u00C2\uFFFD\u00C4\u010A\u0108\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\uFFFD\u00D1\u00D2\u00D3\u00D4\u0120\u00D6\u00D7\u011C\u00D9\u00DA\u00DB\u00DC\u016C\u015C\u00DF\u00E0\u00E1\u00E2\uFFFD\u00E4\u010B\u0109\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\uFFFD\u00F1\u00F2\u00F3\u00F4\u0121\u00F6\u00F7\u011D\u00F9\u00FA\u00FB\u00FC\u016D\u015D\u02D9\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0138\u0156\u00A4\u0128\u013B\u00A7\u00A8\u0160\u0112\u0122\u0166\u00AD\u017D\u00AF\u00B0\u0105\u02DB\u0157\u00B4\u0129\u013C\u02C7\u00B8\u0161\u0113\u0123\u0167\u014A\u017E\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u012A\u0110\u0145\u014C\u0136\u00D4\u00D5\u00D6\u00D7\u00D8\u0172\u00DA\u00DB\u00DC\u0168\u016A\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u012B\u0111\u0146\u014D\u0137\u00F4\u00F5\u00F6\u00F7\u00F8\u0173\u00FA\u00FB\u00FC\u0169\u016B\u02D9\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0403\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0453\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\uFFFD\uFFFD\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u060C\u00AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u061B\uFFFD\uFFFD\uFFFD\u061F\uFFFD\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u2018\u2019\u00A3\u20AC\u20AF\u00A6\u00A7\u00A8\u00A9\u037A\u00AB\u00AC\u00AD\uFFFD\u2015\u00B0\u00B1\u00B2\u00B3\u0384\u0385\u0386\u00B7\u0388\u0389\u038A\u00BB\u038C\u00BD\u038E\u038F\u0390\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\uFFFD\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03AA\u03AB\u03AC\u03AD\u03AE\u03AF\u03B0\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C2\u03C3\u03C4\u03C5\u03C6\u03C7\u03C8\u03C9\u03CA\u03CB\u03CC\u03CD\u03CE\uFFFD\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00D7\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00F7\u00BB\u00BC\u00BD\u00BE\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2017\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\uFFFD\u200E\u200F\uFFFD\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u011E\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u0130\u015E\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u011F\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u0131\u015F\u00FF\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0112\u0122\u012A\u0128\u0136\u00A7\u013B\u0110\u0160\u0166\u017D\u00AD\u016A\u014A\u00B0\u0105\u0113\u0123\u012B\u0129\u0137\u00B7\u013C\u0111\u0161\u0167\u017E\u2015\u016B\u014B\u0100\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u012E\u010C\u00C9\u0118\u00CB\u0116\u00CD\u00CE\u00CF\u00D0\u0145\u014C\u00D3\u00D4\u00D5\u00D6\u0168\u00D8\u0172\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u0101\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u012F\u010D\u00E9\u0119\u00EB\u0117\u00ED\u00EE\u00EF\u00F0\u0146\u014D\u00F3\u00F4\u00F5\u00F6\u0169\u00F8\u0173\u00FA\u00FB\u00FC\u00FD\u00FE\u0138\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u201D\u00A2\u00A3\u00A4\u201E\u00A6\u00A7\u00D8\u00A9\u0156\u00AB\u00AC\u00AD\u00AE\u00C6\u00B0\u00B1\u00B2\u00B3\u201C\u00B5\u00B6\u00B7\u00F8\u00B9\u0157\u00BB\u00BC\u00BD\u00BE\u00E6\u0104\u012E\u0100\u0106\u00C4\u00C5\u0118\u0112\u010C\u00C9\u0179\u0116\u0122\u0136\u012A\u013B\u0160\u0143\u0145\u00D3\u014C\u00D5\u00D6\u00D7\u0172\u0141\u015A\u016A\u00DC\u017B\u017D\u00DF\u0105\u012F\u0101\u0107\u00E4\u00E5\u0119\u0113\u010D\u00E9\u017A\u0117\u0123\u0137\u012B\u013C\u0161\u0144\u0146\u00F3\u014D\u00F5\u00F6\u00F7\u0173\u0142\u015B\u016B\u00FC\u017C\u017E\u2019\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u1E02\u1E03\u00A3\u010A\u010B\u1E0A\u00A7\u1E80\u00A9\u1E82\u1E0B\u1EF2\u00AD\u00AE\u0178\u1E1E\u1E1F\u0120\u0121\u1E40\u1E41\u00B6\u1E56\u1E81\u1E57\u1E83\u1E60\u1EF3\u1E84\u1E85\u1E61\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0174\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u1E6A\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u0176\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0175\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u1E6B\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u0177\u00FF\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u0160\u00A7\u0161\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u017D\u00B5\u00B6\u00B7\u017E\u00B9\u00BA\u00BB\u0152\u0153\u0178\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u00D0\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u00DE\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0104\u0105\u0141\u20AC\u201E\u0160\u00A7\u0161\u00A9\u0218\u00AB\u0179\u00AD\u017A\u017B\u00B0\u00B1\u010C\u0142\u017D\u201D\u00B6\u00B7\u017E\u010D\u0219\u00BB\u0152\u0153\u0178\u017C\u00C0\u00C1\u00C2\u0102\u00C4\u0106\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0110\u0143\u00D2\u00D3\u00D4\u0150\u00D6\u015A\u0170\u00D9\u00DA\u00DB\u00DC\u0118\u021A\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u0107\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0111\u0144\u00F2\u00F3\u00F4\u0151\u00F6\u015B\u0171\u00F9\u00FA\u00FB\u00FC\u0119\u021B\u00FF\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039A\u039B\u039C\u039D\u039E\u039F\u03A0\u03A1\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u03B4\u03B5\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u03C5\u03C6\u03C7\u03C8\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03C9\u03AC\u03AD\u03AE\u03CA\u03AF\u03CC\u03CD\u03CB\u03CE\u0386\u0388\u0389\u038A\u038C\u038E\u038F\u00B1\u2265\u2264\u03AA\u03AB\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0106\u00FC\u00E9\u0101\u00E4\u0123\u00E5\u0107\u0142\u0113\u0156\u0157\u012B\u0179\u00C4\u00C5\u00C9\u00E6\u00C6\u014D\u00F6\u0122\u00A2\u015A\u015B\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u00A4\u0100\u012A\u00F3\u017B\u017C\u017A\u201D\u00A6\u00A9\u00AE\u00AC\u00BD\u00BC\u0141\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0104\u010C\u0118\u0116\u2563\u2551\u2557\u255D\u012E\u0160\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0172\u016A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u017D\u0105\u010D\u0119\u0117\u012F\u0161\u0173\u016B\u017E\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u00D3\u00DF\u014C\u0143\u00F5\u00D5\u00B5\u0144\u0136\u0137\u013B\u013C\u0146\u0112\u0145\u2019\u00AD\u00B1\u201C\u00BE\u00B6\u00A7\u00F7\u201E\u00B0\u2219\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u0131\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u016F\u0107\u00E7\u0142\u00EB\u0150\u0151\u00EE\u0179\u00C4\u0106\u00C9\u0139\u013A\u00F4\u00F6\u013D\u013E\u015A\u015B\u00D6\u00DC\u0164\u0165\u0141\u00D7\u010D\u00E1\u00ED\u00F3\u00FA\u0104\u0105\u017D\u017E\u0118\u0119\u00AC\u017A\u010C\u015F\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u011A\u015E\u2563\u2551\u2557\u255D\u017B\u017C\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u0102\u0103\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u0111\u0110\u010E\u00CB\u010F\u0147\u00CD\u00CE\u011B\u2518\u250C\u2588\u2584\u0162\u016E\u2580\u00D3\u00DF\u00D4\u0143\u0144\u0148\u0160\u0161\u0154\u00DA\u0155\u0170\u00FD\u00DD\u0163\u00B4\u00AD\u02DD\u02DB\u02C7\u02D8\u00A7\u00F7\u00B8\u00B0\u00A8\u02D9\u0171\u0158\u0159\u25A0\u00A0\"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0452\u0402\u0453\u0403\u0451\u0401\u0454\u0404\u0455\u0405\u0456\u0406\u0457\u0407\u0458\u0408\u0459\u0409\u045A\u040A\u045B\u040B\u045C\u040C\u045E\u040E\u045F\u040F\u044E\u042E\u044A\u042A\u0430\u0410\u0431\u0411\u0446\u0426\u0434\u0414\u0435\u0415\u0444\u0424\u0433\u0413\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u0445\u0425\u0438\u0418\u2563\u2551\u2557\u255D\u0439\u0419\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u043A\u041A\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u043B\u041B\u043C\u041C\u043D\u041D\u043E\u041E\u043F\u2518\u250C\u2588\u2584\u041F\u044F\u2580\u042F\u0440\u0420\u0441\u0421\u0442\u0422\u0443\u0423\u0436\u0416\u0432\u0412\u044C\u042C\u2116\u00AD\u044B\u042B\u0437\u0417\u0448\u0428\u044D\u042D\u0449\u0429\u0447\u0427\u00A7\u25A0\u00A0\"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\uFFFD\u00A3\uFFFD\u00D7\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AE\u00AC\u00BD\u00BC\uFFFD\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\uFFFD\uFFFD\uFFFD\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\uFFFD\uFFFD\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u2518\u250C\u2588\u2584\u00A6\uFFFD\u2580\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00B5\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u0131\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u0130\u00D6\u00DC\u00F8\u00A3\u00D8\u015E\u015F\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u011E\u011F\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00BA\u00AA\u00CA\u00CB\u00C8\uFFFD\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\uFFFD\u00D7\u00DA\u00DB\u00D9\u00EC\u00FF\u00AF\u00B4\u00AD\u00B1\uFFFD\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u00D7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00AE\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u00C1\u00C2\u00C0\u00A9\u2563\u2551\u2557\u255D\u00A2\u00A5\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u00E3\u00C3\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u00A4\u00F0\u00D0\u00CA\u00CB\u00C8\u20AC\u00CD\u00CE\u00CF\u2518\u250C\u2588\u2584\u00A6\u00CC\u2580\u00D3\u00DF\u00D4\u00D2\u00F5\u00D5\u00B5\u00FE\u00DE\u00DA\u00DB\u00D9\u00FD\u00DD\u00AF\u00B4\u00AD\u00B1\u2017\u00BE\u00B6\u00A7\u00F7\u00B8\u00B0\u00A8\u00B7\u00B9\u00B3\u00B2\u25A0\u00A0\"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E3\u00E0\u00C1\u00E7\u00EA\u00CA\u00E8\u00CD\u00D4\u00EC\u00C3\u00C2\u00C9\u00C0\u00C8\u00F4\u00F5\u00F2\u00DA\u00F9\u00CC\u00D5\u00DC\u00A2\u00A3\u00D9\u20A7\u00D3\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u00D2\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00D0\u00F0\u00DE\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00FE\u00FB\u00DD\u00FD\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00C1\u00CD\u00D3\u00DA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u05D0\u05D1\u05D2\u05D3\u05D4\u05D5\u05D6\u05D7\u05D8\u05D9\u05DA\u05DB\u05DC\u05DD\u05DE\u05DF\u05E0\u05E1\u05E2\u05E3\u05E4\u05E5\u05E6\u05E7\u05E8\u05E9\u05EA\u00A2\u00A3\u00A5\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00C2\u00E0\u00B6\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u2017\u00C0\u00A7\u00C9\u00C8\u00CA\u00F4\u00CB\u00CF\u00FB\u00F9\u00A4\u00D4\u00DC\u00A2\u00A3\u00D9\u00DB\u0192\u00A6\u00B4\u00F3\u00FA\u00A8\u00B8\u00B3\u00AF\u00CE\u2310\u00AC\u00BD\u00BC\u00BE\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$\u066A&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00B0\u00B7\u2219\u221A\u2592\u2500\u2502\u253C\u2524\u252C\u251C\u2534\u2510\u250C\u2514\u2518\u03B2\u221E\u03C6\u00B1\u00BD\u00BC\u2248\u00AB\u00BB\uFEF7\uFEF8\uFFFD\uFFFD\uFEFB\uFEFC\uFFFD\u00A0\u00AD\uFE82\u00A3\u00A4\uFE84\uFFFD\uFFFD\uFE8E\uFE8F\uFE95\uFE99\u060C\uFE9D\uFEA1\uFEA5\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFED1\u061B\uFEB1\uFEB5\uFEB9\u061F\u00A2\uFE80\uFE81\uFE83\uFE85\uFECA\uFE8B\uFE8D\uFE91\uFE93\uFE97\uFE9B\uFE9F\uFEA3\uFEA7\uFEA9\uFEAB\uFEAD\uFEAF\uFEB3\uFEB7\uFEBB\uFEBF\uFEC1\uFEC5\uFECB\uFECF\u00A6\u00AC\u00F7\u00D7\uFEC9\u0640\uFED3\uFED7\uFEDB\uFEDF\uFEE3\uFEE7\uFEEB\uFEED\uFEEF\uFEF3\uFEBD\uFECC\uFECE\uFECD\uFEE1\uFE7D\u0651\uFEE5\uFEE9\uFEEC\uFEF0\uFEF2\uFED0\uFED5\uFEF5\uFEF6\uFEDD\uFED9\uFEF1\u25A0\uFFFD\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C7\u00FC\u00E9\u00E2\u00E4\u00E0\u00E5\u00E7\u00EA\u00EB\u00E8\u00EF\u00EE\u00EC\u00C4\u00C5\u00C9\u00E6\u00C6\u00F4\u00F6\u00F2\u00FB\u00F9\u00FF\u00D6\u00DC\u00F8\u00A3\u00D8\u20A7\u0192\u00E1\u00ED\u00F3\u00FA\u00F1\u00D1\u00AA\u00BA\u00BF\u2310\u00AC\u00BD\u00BC\u00A1\u00AB\u00A4\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u03B1\u00DF\u0393\u03C0\u03A3\u03C3\u00B5\u03C4\u03A6\u0398\u03A9\u03B4\u221E\u03C6\u03B5\u2229\u2261\u00B1\u2265\u2264\u2320\u2321\u00F7\u2248\u00B0\u2219\u00B7\u221A\u207F\u00B2\u25A0\u00A0\"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0404\u0454\u0407\u0457\u040E\u045E\u00B0\u2219\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0386\uFFFD\u00B7\u00AC\u00A6\u2018\u2019\u0388\u2015\u0389\u038A\u03AA\u038C\uFFFD\uFFFD\u038E\u03AB\u00A9\u038F\u00B2\u00B3\u03AC\u00A3\u03AD\u03AE\u03AF\u03CA\u0390\u03CC\u03CD\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u00BD\u0398\u0399\u00AB\u00BB\u2591\u2592\u2593\u2502\u2524\u039A\u039B\u039C\u039D\u2563\u2551\u2557\u255D\u039E\u039F\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u03A0\u03A1\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u03A3\u03A4\u03A5\u03A6\u03A7\u03A8\u03A9\u03B1\u03B2\u03B3\u2518\u250C\u2588\u2584\u03B4\u03B5\u2580\u03B6\u03B7\u03B8\u03B9\u03BA\u03BB\u03BC\u03BD\u03BE\u03BF\u03C0\u03C1\u03C3\u03C2\u03C4\u0384\u00AD\u00B1\u03C5\u03C6\u03C7\u00A7\u03C8\u0385\u00B0\u00A8\u03C9\u03CB\u03B0\u03CE\u25A0\u00A0\"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u203E\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u00C3\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u00CC\u00CD\u00CE\u00CF\u0160\u00D1\u00D2\u00D3\u00D4\u00D5\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u00DD\u017D\u00DF\u00E0\u00E1\u00E2\u00E3\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u0161\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u017E\u00FF\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFE88\u00D7\u00F7\uF8F6\uF8F5\uF8F4\uF8F7\uFE71\u0088\u25A0\u2502\u2500\u2510\u250C\u2514\u2518\uFE79\uFE7B\uFE7D\uFE7F\uFE77\uFE8A\uFEF0\uFEF3\uFEF2\uFECE\uFECF\uFED0\uFEF6\uFEF8\uFEFA\uFEFC\u00A0\uF8FA\uF8F9\uF8F8\u00A4\uF8FB\uFE8B\uFE91\uFE97\uFE9B\uFE9F\uFEA3\u060C\u00AD\uFEA7\uFEB3\u0660\u0661\u0662\u0663\u0664\u0665\u0666\u0667\u0668\u0669\uFEB7\u061B\uFEBB\uFEBF\uFECA\u061F\uFECB\u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\uFEC7\u0639\u063A\uFECC\uFE82\uFE84\uFE8E\uFED3\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652\uFED7\uFEDB\uFEDF\uF8FC\uFEF5\uFEF7\uFEF9\uFEFB\uFEE3\uFEE7\uFEEC\uFEE9\uFFFD\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0401\u0402\u0490\u0404\u0405\u0406\u0407\u0408\u0409\u040A\u040B\u040C\u00AD\u040E\u040F\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u2116\u0451\u0452\u0491\u0454\u0455\u0456\u0457\u0458\u0459\u045A\u045B\u045C\u00A7\u045E\u045F\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u2591\u2592\u2593\u2502\u2524\u2561\u2562\u2556\u2555\u2563\u2551\u2557\u255D\u255C\u255B\u2510\u2514\u2534\u252C\u251C\u2500\u253C\u255E\u255F\u255A\u2554\u2569\u2566\u2560\u2550\u256C\u2567\u2568\u2564\u2565\u2559\u2558\u2552\u2553\u256B\u256A\u2518\u250C\u2588\u2584\u258C\u2590\u2580\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\u0401\u0451\u0490\u0491\u0404\u0454\u0406\u0456\u0407\u0457\u00B7\u221A\u2116\u00A4\u25A0\u00A0\"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E81\u0E82\u0E84\u0E87\u0E88\u0EAA\u0E8A\u0E8D\u0E94\u0E95\u0E96\u0E97\u0E99\u0E9A\u0E9B\u0E9C\u0E9D\u0E9E\u0E9F\u0EA1\u0EA2\u0EA3\u0EA5\u0EA7\u0EAB\u0EAD\u0EAE\uFFFD\uFFFD\uFFFD\u0EAF\u0EB0\u0EB2\u0EB3\u0EB4\u0EB5\u0EB6\u0EB7\u0EB8\u0EB9\u0EBC\u0EB1\u0EBB\u0EBD\uFFFD\uFFFD\uFFFD\u0EC0\u0EC1\u0EC2\u0EC3\u0EC4\u0EC8\u0EC9\u0ECA\u0ECB\u0ECC\u0ECD\u0EC6\uFFFD\u0EDC\u0EDD\u20AD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0ED0\u0ED1\u0ED2\u0ED3\u0ED4\u0ED5\u0ED6\u0ED7\u0ED8\u0ED9\uFFFD\uFFFD\u00A2\u00AC\u00A6\uFFFD\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E48\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\u0E49\u0E4A\u0E4B\u20AC\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\u00A2\u00AC\u00A6\u00A0\"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u20AC\u0081\u0082\u0083\u0084\u2026\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00A1\u00A2\u00A3\u20AC\u00A5\u00A6\u00A7\u0153\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u0178\u00B5\u00B6\u00B7\u0152\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u00C0\u00C1\u00C2\u0102\u00C4\u00C5\u00C6\u00C7\u00C8\u00C9\u00CA\u00CB\u0300\u00CD\u00CE\u00CF\u0110\u00D1\u0309\u00D3\u00D4\u01A0\u00D6\u00D7\u00D8\u00D9\u00DA\u00DB\u00DC\u01AF\u0303\u00DF\u00E0\u00E1\u00E2\u0103\u00E4\u00E5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u0301\u00ED\u00EE\u00EF\u0111\u00F1\u0323\u00F3\u00F4\u01A1\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u01B0\u20AB\u00FF\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u0160\u2122\u00B4\u00A8\u2260\u017D\u00D8\u221E\u00B1\u2264\u2265\u2206\u00B5\u2202\u2211\u220F\u0161\u222B\u00AA\u00BA\u2126\u017E\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u0106\u00AB\u010C\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\uFFFD\u00A9\u2044\u00A4\u2039\u203A\u00C6\u00BB\u2013\u00B7\u201A\u201E\u2030\u00C2\u0107\u00C1\u010D\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\u0111\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u03C0\u00CB\u02DA\u00B8\u00CA\u00E6\u02C7\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u2202\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00B9\u00B2\u00C9\u00B3\u00D6\u00DC\u0385\u00E0\u00E2\u00E4\u0384\u00A8\u00E7\u00E9\u00E8\u00EA\u00EB\u00A3\u2122\u00EE\u00EF\u2022\u00BD\u2030\u00F4\u00F6\u00A6\u00AD\u00F9\u00FB\u00FC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\u00DF\u00AE\u00A9\u03A3\u03AA\u00A7\u2260\u00B0\u0387\u0391\u00B1\u2264\u2265\u00A5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\u00AC\u039F\u03A1\u2248\u03A4\u00AB\u00BB\u2026\u00A0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\u00F7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\uFFFD\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u00DD\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u00D0\u00F0\u00DE\u00FE\u00FD\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u0102\u015E\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u0103\u015F\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\u0162\u0163\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00AB\u00BB\u2026\uF88C\uF88F\uF892\uF895\uF898\uF88B\uF88E\uF891\uF894\uF897\u201C\u201D\uF899\uFFFD\u2022\uF884\uF889\uF885\uF886\uF887\uF888\uF88A\uF88D\uF890\uF893\uF896\u2018\u2019\uFFFD\u00A0\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFEFF\u200B\u2013\u2014\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u2122\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u00AE\u00A9\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\uFFFD\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\u00B0\u0490\u00A3\u00A7\u2022\u00B6\u0406\u00AE\u00A9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\u00B1\u2264\u2265\u0456\u00B5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u00A4\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u2553\u2554\u2555\u2556\u2557\u2558\u2559\u255A\u255B\u255C\u255D\u255E\u255F\u2560\u2561\u0401\u2562\u2563\u2564\u2565\u2566\u2567\u2568\u2569\u256A\u256B\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u255D\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u256C\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u2500\u2502\u250C\u2510\u2514\u2518\u251C\u2524\u252C\u2534\u253C\u2580\u2584\u2588\u258C\u2590\u2591\u2592\u2593\u2320\u25A0\u2219\u221A\u2248\u2264\u2265\u00A0\u2321\u00B0\u00B2\u00B7\u00F7\u2550\u2551\u2552\u0451\u0454\u2554\u0456\u0457\u2557\u2558\u2559\u255A\u255B\u0491\u045E\u255E\u255F\u2560\u2561\u0401\u0404\u2563\u0406\u0407\u2566\u2567\u2568\u2569\u256A\u0490\u040E\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u049B\u0493\u201A\u0492\u201E\u2026\u2020\u2021\uFFFD\u2030\u04B3\u2039\u04B2\u04B7\u04B6\uFFFD\u049A\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\uFFFD\u203A\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u04EF\u04EE\u0451\u00A4\u04E3\u00A6\u00A7\uFFFD\uFFFD\uFFFD\u00AB\u00AC\u00AD\u00AE\uFFFD\u00B0\u00B1\u00B2\u0401\uFFFD\u04E2\u00B6\u00B7\uFFFD\u2116\uFFFD\u00BB\uFFFD\uFFFD\uFFFD\u00A9\u044E\u0430\u0431\u0446\u0434\u0435\u0444\u0433\u0445\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u044F\u0440\u0441\u0442\u0443\u0436\u0432\u044C\u044B\u0437\u0448\u044D\u0449\u0447\u044A\u042E\u0410\u0411\u0426\u0414\u0415\u0424\u0413\u0425\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u042F\u0420\u0421\u0422\u0423\u0416\u0412\u042C\u042B\u0417\u0428\u042D\u0429\u0427\u042A\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\uFFFD\u0587\u0589)(\u00BB\u00AB\u2014.\u055D,-\u058A\u2026\u055C\u055B\u055E\u0531\u0561\u0532\u0562\u0533\u0563\u0534\u0564\u0535\u0565\u0536\u0566\u0537\u0567\u0538\u0568\u0539\u0569\u053A\u056A\u053B\u056B\u053C\u056C\u053D\u056D\u053E\u056E\u053F\u056F\u0540\u0570\u0541\u0571\u0542\u0572\u0543\u0573\u0544\u0574\u0545\u0575\u0546\u0576\u0547\u0577\u0548\u0578\u0549\u0579\u054A\u057A\u054B\u057B\u054C\u057C\u054D\u057D\u054E\u057E\u054F\u057F\u0550\u0580\u0551\u0581\u0552\u0582\u0553\u0583\u0554\u0584\u0555\u0585\u0556\u0586\u055A\uFFFD\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0402\u0403\u201A\u0453\u201E\u2026\u2020\u2021\u20AC\u2030\u0409\u2039\u040A\u049A\u04BA\u040F\u0452\u2018\u2019\u201C\u201D\u2022\u2013\u2014\uFFFD\u2122\u0459\u203A\u045A\u049B\u04BB\u045F\u00A0\u04B0\u04B1\u04D8\u00A4\u04E8\u00A6\u00A7\u0401\u00A9\u0492\u00AB\u00AC\u00AD\u00AE\u04AE\u00B0\u00B1\u0406\u0456\u04E9\u00B5\u00B6\u00B7\u0451\u2116\u0493\u00BB\u04D9\u04A2\u04A3\u04AF\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\u00DA\u1EE4\\u0003\u1EEA\u1EEC\u1EEE\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\u1EE8\u1EF0\u1EF2\u1EF6\u1EF8\u00DD\u1EF4\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u00C0\u1EA2\u00C3\u00C1\u1EA0\u1EB6\u1EAC\u00C8\u1EBA\u1EBC\u00C9\u1EB8\u1EC6\u00CC\u1EC8\u0128\u00CD\u1ECA\u00D2\u1ECE\u00D5\u00D3\u1ECC\u1ED8\u1EDC\u1EDE\u1EE0\u1EDA\u1EE2\u00D9\u1EE6\u0168\u00A0\u0102\u00C2\u00CA\u00D4\u01A0\u01AF\u0110\u0103\u00E2\u00EA\u00F4\u01A1\u01B0\u0111\u1EB0\u0300\u0309\u0303\u0301\u0323\u00E0\u1EA3\u00E3\u00E1\u1EA1\u1EB2\u1EB1\u1EB3\u1EB5\u1EAF\u1EB4\u1EAE\u1EA6\u1EA8\u1EAA\u1EA4\u1EC0\u1EB7\u1EA7\u1EA9\u1EAB\u1EA5\u1EAD\u00E8\u1EC2\u1EBB\u1EBD\u00E9\u1EB9\u1EC1\u1EC3\u1EC5\u1EBF\u1EC7\u00EC\u1EC9\u1EC4\u1EBE\u1ED2\u0129\u00ED\u1ECB\u00F2\u1ED4\u1ECF\u00F5\u00F3\u1ECD\u1ED3\u1ED5\u1ED7\u1ED1\u1ED9\u1EDD\u1EDF\u1EE1\u1EDB\u1EE3\u00F9\u1ED6\u1EE7\u0169\u00FA\u1EE5\u1EEB\u1EED\u1EEF\u1EE9\u1EF1\u1EF3\u1EF7\u1EF9\u00FD\u1EF5\u1ED0\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10EF\u10F0\u10F1\u10F2\u10F3\u10F4\u10F5\u10F6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u201A\u0192\u201E\u2026\u2020\u2021\u02C6\u2030\u0160\u2039\u0152\u008D\u008E\u008F\u0090\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u02DC\u2122\u0161\u203A\u0153\u009D\u009E\u0178\u00A0\u00A1\u00A2\u00A3\u00A4\u00A5\u00A6\u00A7\u00A8\u00A9\u00AA\u00AB\u00AC\u00AD\u00AE\u00AF\u00B0\u00B1\u00B2\u00B3\u00B4\u00B5\u00B6\u00B7\u00B8\u00B9\u00BA\u00BB\u00BC\u00BD\u00BE\u00BF\u10D0\u10D1\u10D2\u10D3\u10D4\u10D5\u10D6\u10F1\u10D7\u10D8\u10D9\u10DA\u10DB\u10DC\u10F2\u10DD\u10DE\u10DF\u10E0\u10E1\u10E2\u10F3\u10E3\u10E4\u10E5\u10E6\u10E7\u10E8\u10E9\u10EA\u10EB\u10EC\u10ED\u10EE\u10F4\u10EF\u10F0\u10F5\u00E6\u00E7\u00E8\u00E9\u00EA\u00EB\u00EC\u00ED\u00EE\u00EF\u00F0\u00F1\u00F2\u00F3\u00F4\u00F5\u00F6\u00F7\u00F8\u00F9\u00FA\u00FB\u00FC\u00FD\u00FE\u00FF\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0496\u0492\u04EE\u0493\u201E\u2026\u04B6\u04AE\u04B2\u04AF\u04A0\u04E2\u04A2\u049A\u04BA\u04B8\u0497\u2018\u2019\u201C\u201D\u2022\u2013\u2014\u04B3\u04B7\u04A1\u04E3\u04A3\u049B\u04BB\u04B9\u00A0\u040E\u045E\u0408\u04E8\u0498\u04B0\u00A7\u0401\u00A9\u04D8\u00AB\u00AC\u04EF\u00AE\u049C\u00B0\u04B1\u0406\u0456\u0499\u04E9\u00B6\u00B7\u0451\u2116\u04D9\u00BB\u0458\u04AA\u04AB\u049D\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E\u044F\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\u1EB2\\u0003\\u0004\u1EB4\u1EAA\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\u1EF6\\u0015\\u0016\\u0017\\u0018\u1EF8\\u001a\\u001b\\u001c\\u001d\u1EF4\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\u007F\u1EA0\u1EAE\u1EB0\u1EB6\u1EA4\u1EA6\u1EA8\u1EAC\u1EBC\u1EB8\u1EBE\u1EC0\u1EC2\u1EC4\u1EC6\u1ED0\u1ED2\u1ED4\u1ED6\u1ED8\u1EE2\u1EDA\u1EDC\u1EDE\u1ECA\u1ECE\u1ECC\u1EC8\u1EE6\u0168\u1EE4\u1EF2\u00D5\u1EAF\u1EB1\u1EB7\u1EA5\u1EA7\u1EA9\u1EAD\u1EBD\u1EB9\u1EBF\u1EC1\u1EC3\u1EC5\u1EC7\u1ED1\u1ED3\u1ED5\u1ED7\u1EE0\u01A0\u1ED9\u1EDD\u1EDF\u1ECB\u1EF0\u1EE8\u1EEA\u1EEC\u01A1\u1EDB\u01AF\u00C0\u00C1\u00C2\u00C3\u1EA2\u0102\u1EB3\u1EB5\u00C8\u00C9\u00CA\u1EBA\u00CC\u00CD\u0128\u1EF3\u0110\u1EE9\u00D2\u00D3\u00D4\u1EA1\u1EF7\u1EEB\u1EED\u00D9\u00DA\u1EF9\u1EF5\u00DD\u1EE1\u01B0\u00E0\u00E1\u00E2\u00E3\u1EA3\u0103\u1EEF\u1EAB\u00E8\u00E9\u00EA\u1EBB\u00EC\u00ED\u0129\u1EC9\u0111\u1EF1\u00F2\u00F3\u00F4\u00F5\u1ECF\u1ECD\u1EE5\u00F9\u00FA\u0169\u1EE7\u00FD\u1EE3\u1EEE\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#\u00A5%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\u00A5]^_`abcdefghijklmnopqrstuvwxyz{|}\u203E\u007F\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u0080\u0081\u0082\u0083\u0084\u0085\u0086\u0087\u0088\u0089\u008A\u008B\u008C\u008D\u008E\u008F\u0090\u0091\u0092\u0093\u0094\u0095\u0096\u0097\u0098\u0099\u009A\u009B\u009C\u009D\u009E\u009F\u00A0\u00C0\u00C2\u00C8\u00CA\u00CB\u00CE\u00CF\u00B4\u02CB\u02C6\u00A8\u02DC\u00D9\u00DB\u20A4\u00AF\u00DD\u00FD\u00B0\u00C7\u00E7\u00D1\u00F1\u00A1\u00BF\u00A4\u00A3\u00A5\u00A7\u0192\u00A2\u00E2\u00EA\u00F4\u00FB\u00E1\u00E9\u00F3\u00FA\u00E0\u00E8\u00F2\u00F9\u00E4\u00EB\u00F6\u00FC\u00C5\u00EE\u00D8\u00C6\u00E5\u00ED\u00F8\u00E6\u00C4\u00EC\u00D6\u00DC\u00C9\u00EF\u00DF\u00D4\u00C1\u00C3\u00E3\u00D0\u00F0\u00CD\u00CC\u00D3\u00D2\u00D5\u00F5\u0160\u0161\u00DA\u0178\u00FF\u00DE\u00FE\u00B7\u00B5\u00B6\u00BE\u2014\u00BC\u00BD\u00AA\u00BA\u00AB\u25A0\u00BB\u00B1\uFFFD\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\u00C4\u00C5\u00C7\u00C9\u00D1\u00D6\u00DC\u00E1\u00E0\u00E2\u00E4\u00E3\u00E5\u00E7\u00E9\u00E8\u00EA\u00EB\u00ED\u00EC\u00EE\u00EF\u00F1\u00F3\u00F2\u00F4\u00F6\u00F5\u00FA\u00F9\u00FB\u00FC\u2020\u00B0\u00A2\u00A3\u00A7\u2022\u00B6\u00DF\u00AE\u00A9\u2122\u00B4\u00A8\u2260\u00C6\u00D8\u221E\u00B1\u2264\u2265\u00A5\u00B5\u2202\u2211\u220F\u03C0\u222B\u00AA\u00BA\u2126\u00E6\u00F8\u00BF\u00A1\u00AC\u221A\u0192\u2248\u2206\u00AB\u00BB\u2026\u00A0\u00C0\u00C3\u00D5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u00F7\u25CA\u00FF\u0178\u2044\u00A4\u2039\u203A\uFB01\uFB02\u2021\u00B7\u201A\u201E\u2030\u00C2\u00CA\u00C1\u00CB\u00C8\u00CD\u00CE\u00CF\u00CC\u00D3\u00D4\uFFFD\u00D2\u00DA\u00DB\u00D9\u0131\u02C6\u02DC\u00AF\u02D8\u02D9\u02DA\u00B8\u02DD\u02DB\u02C7\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\uFFFD\u0E01\u0E02\u0E03\u0E04\u0E05\u0E06\u0E07\u0E08\u0E09\u0E0A\u0E0B\u0E0C\u0E0D\u0E0E\u0E0F\u0E10\u0E11\u0E12\u0E13\u0E14\u0E15\u0E16\u0E17\u0E18\u0E19\u0E1A\u0E1B\u0E1C\u0E1D\u0E1E\u0E1F\u0E20\u0E21\u0E22\u0E23\u0E24\u0E25\u0E26\u0E27\u0E28\u0E29\u0E2A\u0E2B\u0E2C\u0E2D\u0E2E\u0E2F\u0E30\u0E31\u0E32\u0E33\u0E34\u0E35\u0E36\u0E37\u0E38\u0E39\u0E3A\uFFFD\uFFFD\uFFFD\uFFFD\u0E3F\u0E40\u0E41\u0E42\u0E43\u0E44\u0E45\u0E46\u0E47\u0E48\u0E49\u0E4A\u0E4B\u0E4C\u0E4D\u0E4E\u0E4F\u0E50\u0E51\u0E52\u0E53\u0E54\u0E55\u0E56\u0E57\u0E58\u0E59\u0E5A\u0E5B\uFFFD\uFFFD\uFFFD\uFFFD\"\n  }\n}", "\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 common decode nodes.\n        var commonThirdByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        var commonFourthByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        // Fill out the tree\n        var firstByteNode = this.decodeTables[0];\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n            for (var j = 0x30; j <= 0x39; j++) {\n                if (secondByteNode[j] === UNASSIGNED) {\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                } else if (secondByteNode[j] > NODE_START) {\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                }\n\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n                for (var k = 0x81; k <= 0xFE; k++) {\n                    if (thirdByteNode[k] === UNASSIGNED) {\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n                        continue;\n                    } else if (thirdByteNode[k] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                    }\n\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n                    for (var l = 0x30; l <= 0x39; l++) {\n                        if (fourthByteNode[l] === UNASSIGNED)\n                            fourthByteNode[l] = GB18030_CODE;\n                    }\n                }\n            }\n        }\n    }\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    var hasValues = false;\n    var subNodeEmpty = {};\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0) {\n            this._setEncodeChar(uCode, mbCode);\n            hasValues = true;\n        } else if (uCode <= NODE_START) {\n            var subNodeIdx = NODE_START - uCode;\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\n                    hasValues = true;\n                else\n                    subNodeEmpty[subNodeIdx] = true;\n            }\n        } else if (uCode <= SEQ_START) {\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n            hasValues = true;\n        }\n    }\n    return hasValues;\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else if (dbcsCode < 0x1000000) {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        } else {\n            newBuf[j++] = dbcsCode >>> 24;\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBytes = [];\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n        }\n        else if (uCode === GB18030_CODE) {\n            if (i >= 3) {\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\n            } else {\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \n                          (curByte-0x30);\n            }\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode >= 0x10000) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 | (uCode >> 10);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 | (uCode & 0x3FF);\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBytes = (seqStart >= 0)\n        ? Array.prototype.slice.call(buf, seqStart)\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBytes.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var bytesArr = this.prevBytes.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n        if (bytesArr.length > 0)\n            ret += this.write(bytesArr);\n    }\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + ((r-l+1) >> 1);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n", "\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + \u00A5 + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'\u20AC': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [\n            // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of\n            // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.\n            // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.\n            0x8e69, 0x8e6f, 0x8e7e, 0x8eab, 0x8eb4, 0x8ecd, 0x8ed0, 0x8f57, 0x8f69, 0x8f6e, 0x8fcb, 0x8ffe,\n            0x906d, 0x907a, 0x90c4, 0x90dc, 0x90f1, 0x91bf, 0x92af, 0x92b0, 0x92b1, 0x92b2, 0x92d1, 0x9447, 0x94ca,\n            0x95d9, 0x96fc, 0x9975, 0x9b76, 0x9b78, 0x9b7b, 0x9bc6, 0x9bde, 0x9bec, 0x9bf6, 0x9c42, 0x9c53, 0x9c62,\n            0x9c68, 0x9c6b, 0x9c77, 0x9cbc, 0x9cbd, 0x9cd0, 0x9d57, 0x9d5a, 0x9dc4, 0x9def, 0x9dfb, 0x9ea9, 0x9eef,\n            0x9efd, 0x9f60, 0x9fcb, 0xa077, 0xa0dc, 0xa0df, 0x8fcc, 0x92c8, 0x9644, 0x96ed,\n\n            // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345\n            0xa2a4, 0xa2a5, 0xa2a7, 0xa2a6, 0xa2cc, 0xa2ce,\n        ],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n", "\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n", "\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n", "import {Buffer} from 'buffer';\n\nexport default BufferList;\n\nfunction BufferList() {\n  this.head = null;\n  this.tail = null;\n  this.length = 0;\n}\n\nBufferList.prototype.push = function (v) {\n  var entry = { data: v, next: null };\n  if (this.length > 0) this.tail.next = entry;else this.head = entry;\n  this.tail = entry;\n  ++this.length;\n};\n\nBufferList.prototype.unshift = function (v) {\n  var entry = { data: v, next: this.head };\n  if (this.length === 0) this.tail = entry;\n  this.head = entry;\n  ++this.length;\n};\n\nBufferList.prototype.shift = function () {\n  if (this.length === 0) return;\n  var ret = this.head.data;\n  if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n  --this.length;\n  return ret;\n};\n\nBufferList.prototype.clear = function () {\n  this.head = this.tail = null;\n  this.length = 0;\n};\n\nBufferList.prototype.join = function (s) {\n  if (this.length === 0) return '';\n  var p = this.head;\n  var ret = '' + p.data;\n  while (p = p.next) {\n    ret += s + p.data;\n  }return ret;\n};\n\nBufferList.prototype.concat = function (n) {\n  if (this.length === 0) return Buffer.alloc(0);\n  if (this.length === 1) return this.head.data;\n  var ret = Buffer.allocUnsafe(n >>> 0);\n  var p = this.head;\n  var i = 0;\n  while (p) {\n    p.data.copy(ret, i);\n    i += p.data.length;\n    p = p.next;\n  }\n  return ret;\n};\n", "'use strict';\n\n\nReadable.ReadableState = ReadableState;\nimport EventEmitter from 'events';\nimport {inherits, debuglog} from 'util';\nimport BufferList from './buffer-list';\nimport {StringDecoder} from 'string_decoder';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\n\nvar debug = debuglog('stream');\ninherits(Readable, EventEmitter);\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') {\n    return emitter.prependListener(event, fn);\n  } else {\n    // This is a hack to make sure that our error handler is attached before any\n    // userland ones.  NEVER DO THIS. This is here only because this code needs\n    // to continue to work with older versions of Node.js that do not include\n    // the prependListener() method. The goal is to eventually remove this hack.\n    if (!emitter._events || !emitter._events[event])\n      emitter.on(event, fn);\n    else if (Array.isArray(emitter._events[event]))\n      emitter._events[event].unshift(fn);\n    else\n      emitter._events[event] = [fn, emitter._events[event]];\n  }\n}\nfunction listenerCount (emitter, type) {\n  return emitter.listeners(type).length;\n}\nfunction ReadableState(options, stream) {\n\n  options = options || {};\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // when piping, we only care about 'readable' events that happen\n  // after read()ing all the bytes and not getting any pushback.\n  this.ranOut = false;\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nexport default Readable;\nexport function Readable(options) {\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options && typeof options.read === 'function') this._read = options.read;\n\n  EventEmitter.call(this);\n}\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n\n  if (!state.objectMode && typeof chunk === 'string') {\n    encoding = encoding || state.defaultEncoding;\n    if (encoding !== state.encoding) {\n      chunk = Buffer.from(chunk, encoding);\n      encoding = '';\n    }\n  }\n\n  return readableAddChunk(this, state, chunk, encoding, false);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  var state = this._readableState;\n  return readableAddChunk(this, state, chunk, '', true);\n};\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\nfunction readableAddChunk(stream, state, chunk, encoding, addToFront) {\n  var er = chunkInvalid(state, chunk);\n  if (er) {\n    stream.emit('error', er);\n  } else if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else if (state.objectMode || chunk && chunk.length > 0) {\n    if (state.ended && !addToFront) {\n      var e = new Error('stream.push() after EOF');\n      stream.emit('error', e);\n    } else if (state.endEmitted && addToFront) {\n      var _e = new Error('stream.unshift() after end event');\n      stream.emit('error', _e);\n    } else {\n      var skipAdd;\n      if (state.decoder && !addToFront && !encoding) {\n        chunk = state.decoder.write(chunk);\n        skipAdd = !state.objectMode && chunk.length === 0;\n      }\n\n      if (!addToFront) state.reading = false;\n\n      // Don't add to the buffer if we've decoded to an empty string chunk and\n      // we're not in object mode\n      if (!skipAdd) {\n        // if we want the data now, just emit it.\n        if (state.flowing && state.length === 0 && !state.sync) {\n          stream.emit('data', chunk);\n          stream.read(0);\n        } else {\n          // update the buffer info.\n          state.length += state.objectMode ? 1 : chunk.length;\n          if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n          if (state.needReadable) emitReadable(stream);\n        }\n      }\n\n      maybeReadMore(stream, state);\n    }\n  } else if (!addToFront) {\n    state.reading = false;\n  }\n\n  return needMoreData(state);\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction chunkInvalid(state, chunk) {\n  var er = null;\n  if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== null && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false);\n\n  var endFn = doEnd ? onend : cleanup;\n  if (state.endEmitted) nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable) {\n    debug('onunpipe');\n    if (readable === src) {\n      cleanup();\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', cleanup);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (listenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && src.listeners('data').length) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var _i = 0; _i < len; _i++) {\n      dests[_i].emit('unpipe', this);\n    }return this;\n  }\n\n  // try to find the right one.\n  var i = indexOf(state.pipes, dest);\n  if (i === -1) return this;\n\n  state.pipes.splice(i, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = EventEmitter.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this, state);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var state = this._readableState;\n  var paused = false;\n\n  var self = this;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) self.push(chunk);\n    }\n\n    self.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = self.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  var events = ['error', 'close', 'destroy', 'pause', 'resume'];\n  forEach(events, function (ev) {\n    stream.on(ev, self.emit.bind(self, ev));\n  });\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  self._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return self;\n};\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction forEach(xs, f) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    f(xs[i], i);\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}\n", "// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n\nimport {inherits, deprecate} from 'util';\nimport {Buffer} from 'buffer';\nWritable.WritableState = WritableState;\nimport {EventEmitter} from 'events';\nimport {Duplex} from './duplex';\nimport {nextTick} from 'process';\ninherits(Writable, EventEmitter);\n\nfunction nop() {}\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\nfunction WritableState(options, stream) {\n  Object.defineProperty(this, 'buffer', {\n    get: deprecate(function () {\n      return this.getBuffer();\n    }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.')\n  });\n  options = options || {};\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (stream instanceof Duplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n  this.highWaterMark = hwm || hwm === 0 ? hwm : defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = ~ ~this.highWaterMark;\n\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function writableStateGetBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\nexport default Writable;\nexport function Writable(options) {\n\n  // Writable ctor is applied to Duplexes, though they're not\n  // instanceof Writable, they're instanceof Readable.\n  if (!(this instanceof Writable) && !(this instanceof Duplex)) return new Writable(options);\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n  }\n\n  EventEmitter.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  nextTick(cb, er);\n}\n\n// If we get something that is not a buffer, string, null, or undefined,\n// and we're not in objectMode, then that's an error.\n// Otherwise stream chunks are all considered to be of length=1, and the\n// watermarks determine how many objects to keep in the buffer, rather than\n// how many bytes or characters.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n  // Always throw error if a null is written\n  // if we are not in object mode then throw\n  // if it is not a buffer, string, or undefined.\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (!Buffer.isBuffer(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, chunk, encoding, cb) {\n  chunk = decodeChunk(state, chunk, encoding);\n\n  if (Buffer.isBuffer(chunk)) encoding = 'buffer';\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) nextTick(cb, er);else cb(er);\n\n  stream._writableState.errorEmitted = true;\n  stream.emit('error', er);\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n        nextTick(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n        afterWrite(stream, state, finished, cb);\n      }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    while (entry) {\n      buffer[count] = entry;\n      entry = entry.next;\n      count += 1;\n    }\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequestCount = 0;\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished) {\n    state.prefinished = true;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    if (state.pendingcb === 0) {\n      prefinish(stream, state);\n      state.finished = true;\n      stream.emit('finish');\n    } else {\n      prefinish(stream, state);\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function (err) {\n    var entry = _this.entry;\n    _this.entry = null;\n    while (entry) {\n      var cb = entry.callback;\n      state.pendingcb--;\n      cb(err);\n      entry = entry.next;\n    }\n    if (state.corkedRequestsFree) {\n      state.corkedRequestsFree.next = _this;\n    } else {\n      state.corkedRequestsFree = _this;\n    }\n  };\n}\n", "\nimport {inherits} from 'util';\nimport {nextTick} from 'process';\nimport {Readable} from './readable';\nimport {Writable} from './writable';\n\n\ninherits(Duplex, Readable);\n\nvar keys = Object.keys(Writable.prototype);\nfor (var v = 0; v < keys.length; v++) {\n  var method = keys[v];\n  if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n}\nexport default Duplex;\nexport function Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n", "// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n\nimport {Duplex} from './duplex';\n\n\nimport {inherits} from 'util';\ninherits(Transform, Duplex);\n\nfunction TransformState(stream) {\n  this.afterTransform = function (er, data) {\n    return afterTransform(stream, er, data);\n  };\n\n  this.needTransform = false;\n  this.transforming = false;\n  this.writecb = null;\n  this.writechunk = null;\n  this.writeencoding = null;\n}\n\nfunction afterTransform(stream, er, data) {\n  var ts = stream._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) return stream.emit('error', new Error('no writecb in Transform class'));\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data !== null && data !== undefined) stream.push(data);\n\n  cb(er);\n\n  var rs = stream._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    stream._read(rs.highWaterMark);\n  }\n}\nexport default Transform;\nexport function Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = new TransformState(this);\n\n  // when the writable side finishes, then flush out anything remaining.\n  var stream = this;\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  this.once('prefinish', function () {\n    if (typeof this._flush === 'function') this._flush(function (er) {\n      done(stream, er);\n    });else done(stream);\n  });\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('Not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nfunction done(stream, er) {\n  if (er) return stream.emit('error', er);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  var ws = stream._writableState;\n  var ts = stream._transformState;\n\n  if (ws.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (ts.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}\n", "\nimport {Transform} from './transform';\n\nimport {inherits} from 'util';\ninherits(PassThrough, Transform);\nexport default PassThrough;\nexport function PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};\n", "import EE from 'events';\nimport {inherits} from 'util';\n\nimport {Duplex} from './readable-stream/duplex.js';\nimport {Readable} from './readable-stream/readable.js';\nimport {Writable} from './readable-stream/writable.js';\nimport {Transform} from './readable-stream/transform.js';\nimport {PassThrough} from './readable-stream/passthrough.js';\ninherits(Stream, EE);\nStream.Readable = Readable;\nStream.Writable = Writable;\nStream.Duplex = Duplex;\nStream.Transform = Transform;\nStream.PassThrough = PassThrough;\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nexport default Stream;\nexport {Readable,Writable,Duplex,Transform,PassThrough,Stream}\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n", "\nconst polyfill = require('stream')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '\uFFFD';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams)\n        return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function() {\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n    };\n}\n\nif (\"\u0100\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n", "//! moment.js\n//! version : 2.29.3\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.3';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n", "//! moment-timezone.js\n//! version : 0.5.34\n//! Copyright (c) JS Foundation and other contributors\n//! license : MIT\n//! github.com/moment/moment-timezone\n\n(function (root, factory) {\n\t\"use strict\";\n\n\t/*global define*/\n\tif (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = factory(require('moment')); // Node\n\t} else if (typeof define === 'function' && define.amd) {\n\t\tdefine(['moment'], factory);                 // AMD\n\t} else {\n\t\tfactory(root.moment);                        // Browser\n\t}\n}(this, function (moment) {\n\t\"use strict\";\n\n\t// Resolves es6 module loading issue\n\tif (moment.version === undefined && moment.default) {\n\t\tmoment = moment.default;\n\t}\n\n\t// Do not load moment-timezone a second time.\n\t// if (moment.tz !== undefined) {\n\t// \tlogError('Moment Timezone ' + moment.tz.version + ' was already loaded ' + (moment.tz.dataVersion ? 'with data from ' : 'without any data') + moment.tz.dataVersion);\n\t// \treturn moment;\n\t// }\n\n\tvar VERSION = \"0.5.34\",\n\t\tzones = {},\n\t\tlinks = {},\n\t\tcountries = {},\n\t\tnames = {},\n\t\tguesses = {},\n\t\tcachedGuess;\n\n\tif (!moment || typeof moment.version !== 'string') {\n\t\tlogError('Moment Timezone requires Moment.js. See https://momentjs.com/timezone/docs/#/use-it/browser/');\n\t}\n\n\tvar momentVersion = moment.version.split('.'),\n\t\tmajor = +momentVersion[0],\n\t\tminor = +momentVersion[1];\n\n\t// Moment.js version check\n\tif (major < 2 || (major === 2 && minor < 6)) {\n\t\tlogError('Moment Timezone requires Moment.js >= 2.6.0. You are using Moment.js ' + moment.version + '. See momentjs.com');\n\t}\n\n\t/************************************\n\t\tUnpacking\n\t************************************/\n\n\tfunction charCodeToInt(charCode) {\n\t\tif (charCode > 96) {\n\t\t\treturn charCode - 87;\n\t\t} else if (charCode > 64) {\n\t\t\treturn charCode - 29;\n\t\t}\n\t\treturn charCode - 48;\n\t}\n\n\tfunction unpackBase60(string) {\n\t\tvar i = 0,\n\t\t\tparts = string.split('.'),\n\t\t\twhole = parts[0],\n\t\t\tfractional = parts[1] || '',\n\t\t\tmultiplier = 1,\n\t\t\tnum,\n\t\t\tout = 0,\n\t\t\tsign = 1;\n\n\t\t// handle negative numbers\n\t\tif (string.charCodeAt(0) === 45) {\n\t\t\ti = 1;\n\t\t\tsign = -1;\n\t\t}\n\n\t\t// handle digits before the decimal\n\t\tfor (i; i < whole.length; i++) {\n\t\t\tnum = charCodeToInt(whole.charCodeAt(i));\n\t\t\tout = 60 * out + num;\n\t\t}\n\n\t\t// handle digits after the decimal\n\t\tfor (i = 0; i < fractional.length; i++) {\n\t\t\tmultiplier = multiplier / 60;\n\t\t\tnum = charCodeToInt(fractional.charCodeAt(i));\n\t\t\tout += num * multiplier;\n\t\t}\n\n\t\treturn out * sign;\n\t}\n\n\tfunction arrayToInt (array) {\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tarray[i] = unpackBase60(array[i]);\n\t\t}\n\t}\n\n\tfunction intToUntil (array, length) {\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tarray[i] = Math.round((array[i - 1] || 0) + (array[i] * 60000)); // minutes to milliseconds\n\t\t}\n\n\t\tarray[length - 1] = Infinity;\n\t}\n\n\tfunction mapIndices (source, indices) {\n\t\tvar out = [], i;\n\n\t\tfor (i = 0; i < indices.length; i++) {\n\t\t\tout[i] = source[indices[i]];\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction unpack (string) {\n\t\tvar data = string.split('|'),\n\t\t\toffsets = data[2].split(' '),\n\t\t\tindices = data[3].split(''),\n\t\t\tuntils  = data[4].split(' ');\n\n\t\tarrayToInt(offsets);\n\t\tarrayToInt(indices);\n\t\tarrayToInt(untils);\n\n\t\tintToUntil(untils, indices.length);\n\n\t\treturn {\n\t\t\tname       : data[0],\n\t\t\tabbrs      : mapIndices(data[1].split(' '), indices),\n\t\t\toffsets    : mapIndices(offsets, indices),\n\t\t\tuntils     : untils,\n\t\t\tpopulation : data[5] | 0\n\t\t};\n\t}\n\n\t/************************************\n\t\tZone object\n\t************************************/\n\n\tfunction Zone (packedString) {\n\t\tif (packedString) {\n\t\t\tthis._set(unpack(packedString));\n\t\t}\n\t}\n\n\tZone.prototype = {\n\t\t_set : function (unpacked) {\n\t\t\tthis.name       = unpacked.name;\n\t\t\tthis.abbrs      = unpacked.abbrs;\n\t\t\tthis.untils     = unpacked.untils;\n\t\t\tthis.offsets    = unpacked.offsets;\n\t\t\tthis.population = unpacked.population;\n\t\t},\n\n\t\t_index : function (timestamp) {\n\t\t\tvar target = +timestamp,\n\t\t\t\tuntils = this.untils,\n\t\t\t\ti;\n\n\t\t\tfor (i = 0; i < untils.length; i++) {\n\t\t\t\tif (target < untils[i]) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tcountries : function () {\n\t\t\tvar zone_name = this.name;\n\t\t\treturn Object.keys(countries).filter(function (country_code) {\n\t\t\t\treturn countries[country_code].zones.indexOf(zone_name) !== -1;\n\t\t\t});\n\t\t},\n\n\t\tparse : function (timestamp) {\n\t\t\tvar target  = +timestamp,\n\t\t\t\toffsets = this.offsets,\n\t\t\t\tuntils  = this.untils,\n\t\t\t\tmax     = untils.length - 1,\n\t\t\t\toffset, offsetNext, offsetPrev, i;\n\n\t\t\tfor (i = 0; i < max; i++) {\n\t\t\t\toffset     = offsets[i];\n\t\t\t\toffsetNext = offsets[i + 1];\n\t\t\t\toffsetPrev = offsets[i ? i - 1 : i];\n\n\t\t\t\tif (offset < offsetNext && tz.moveAmbiguousForward) {\n\t\t\t\t\toffset = offsetNext;\n\t\t\t\t} else if (offset > offsetPrev && tz.moveInvalidForward) {\n\t\t\t\t\toffset = offsetPrev;\n\t\t\t\t}\n\n\t\t\t\tif (target < untils[i] - (offset * 60000)) {\n\t\t\t\t\treturn offsets[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn offsets[max];\n\t\t},\n\n\t\tabbr : function (mom) {\n\t\t\treturn this.abbrs[this._index(mom)];\n\t\t},\n\n\t\toffset : function (mom) {\n\t\t\tlogError(\"zone.offset has been deprecated in favor of zone.utcOffset\");\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t},\n\n\t\tutcOffset : function (mom) {\n\t\t\treturn this.offsets[this._index(mom)];\n\t\t}\n\t};\n\n\t/************************************\n\t\tCountry object\n\t************************************/\n\n\tfunction Country (country_name, zone_names) {\n\t\tthis.name = country_name;\n\t\tthis.zones = zone_names;\n\t}\n\n\t/************************************\n\t\tCurrent Timezone\n\t************************************/\n\n\tfunction OffsetAt(at) {\n\t\tvar timeString = at.toTimeString();\n\t\tvar abbr = timeString.match(/\\([a-z ]+\\)/i);\n\t\tif (abbr && abbr[0]) {\n\t\t\t// 17:56:31 GMT-0600 (CST)\n\t\t\t// 17:56:31 GMT-0600 (Central Standard Time)\n\t\t\tabbr = abbr[0].match(/[A-Z]/g);\n\t\t\tabbr = abbr ? abbr.join('') : undefined;\n\t\t} else {\n\t\t\t// 17:56:31 CST\n\t\t\t// 17:56:31 GMT+0800 (\u53F0\u5317\u6A19\u6E96\u6642\u9593)\n\t\t\tabbr = timeString.match(/[A-Z]{3,5}/g);\n\t\t\tabbr = abbr ? abbr[0] : undefined;\n\t\t}\n\n\t\tif (abbr === 'GMT') {\n\t\t\tabbr = undefined;\n\t\t}\n\n\t\tthis.at = +at;\n\t\tthis.abbr = abbr;\n\t\tthis.offset = at.getTimezoneOffset();\n\t}\n\n\tfunction ZoneScore(zone) {\n\t\tthis.zone = zone;\n\t\tthis.offsetScore = 0;\n\t\tthis.abbrScore = 0;\n\t}\n\n\tZoneScore.prototype.scoreOffsetAt = function (offsetAt) {\n\t\tthis.offsetScore += Math.abs(this.zone.utcOffset(offsetAt.at) - offsetAt.offset);\n\t\tif (this.zone.abbr(offsetAt.at).replace(/[^A-Z]/g, '') !== offsetAt.abbr) {\n\t\t\tthis.abbrScore++;\n\t\t}\n\t};\n\n\tfunction findChange(low, high) {\n\t\tvar mid, diff;\n\n\t\twhile ((diff = ((high.at - low.at) / 12e4 | 0) * 6e4)) {\n\t\t\tmid = new OffsetAt(new Date(low.at + diff));\n\t\t\tif (mid.offset === low.offset) {\n\t\t\t\tlow = mid;\n\t\t\t} else {\n\t\t\t\thigh = mid;\n\t\t\t}\n\t\t}\n\n\t\treturn low;\n\t}\n\n\tfunction userOffsets() {\n\t\tvar startYear = new Date().getFullYear() - 2,\n\t\t\tlast = new OffsetAt(new Date(startYear, 0, 1)),\n\t\t\toffsets = [last],\n\t\t\tchange, next, i;\n\n\t\tfor (i = 1; i < 48; i++) {\n\t\t\tnext = new OffsetAt(new Date(startYear, i, 1));\n\t\t\tif (next.offset !== last.offset) {\n\t\t\t\tchange = findChange(last, next);\n\t\t\t\toffsets.push(change);\n\t\t\t\toffsets.push(new OffsetAt(new Date(change.at + 6e4)));\n\t\t\t}\n\t\t\tlast = next;\n\t\t}\n\n\t\tfor (i = 0; i < 4; i++) {\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 0, 1)));\n\t\t\toffsets.push(new OffsetAt(new Date(startYear + i, 6, 1)));\n\t\t}\n\n\t\treturn offsets;\n\t}\n\n\tfunction sortZoneScores (a, b) {\n\t\tif (a.offsetScore !== b.offsetScore) {\n\t\t\treturn a.offsetScore - b.offsetScore;\n\t\t}\n\t\tif (a.abbrScore !== b.abbrScore) {\n\t\t\treturn a.abbrScore - b.abbrScore;\n\t\t}\n\t\tif (a.zone.population !== b.zone.population) {\n\t\t\treturn b.zone.population - a.zone.population;\n\t\t}\n\t\treturn b.zone.name.localeCompare(a.zone.name);\n\t}\n\n\tfunction addToGuesses (name, offsets) {\n\t\tvar i, offset;\n\t\tarrayToInt(offsets);\n\t\tfor (i = 0; i < offsets.length; i++) {\n\t\t\toffset = offsets[i];\n\t\t\tguesses[offset] = guesses[offset] || {};\n\t\t\tguesses[offset][name] = true;\n\t\t}\n\t}\n\n\tfunction guessesForUserOffsets (offsets) {\n\t\tvar offsetsLength = offsets.length,\n\t\t\tfilteredGuesses = {},\n\t\t\tout = [],\n\t\t\ti, j, guessesOffset;\n\n\t\tfor (i = 0; i < offsetsLength; i++) {\n\t\t\tguessesOffset = guesses[offsets[i].offset] || {};\n\t\t\tfor (j in guessesOffset) {\n\t\t\t\tif (guessesOffset.hasOwnProperty(j)) {\n\t\t\t\t\tfilteredGuesses[j] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (i in filteredGuesses) {\n\t\t\tif (filteredGuesses.hasOwnProperty(i)) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tfunction rebuildGuess () {\n\n\t\t// use Intl API when available and returning valid time zone\n\t\ttry {\n\t\t\tvar intlName = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\t\t\tif (intlName && intlName.length > 3) {\n\t\t\t\tvar name = names[normalizeName(intlName)];\n\t\t\t\tif (name) {\n\t\t\t\t\treturn name;\n\t\t\t\t}\n\t\t\t\tlogError(\"Moment Timezone found \" + intlName + \" from the Intl api, but did not have that data loaded.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// Intl unavailable, fall back to manual guessing.\n\t\t}\n\n\t\tvar offsets = userOffsets(),\n\t\t\toffsetsLength = offsets.length,\n\t\t\tguesses = guessesForUserOffsets(offsets),\n\t\t\tzoneScores = [],\n\t\t\tzoneScore, i, j;\n\n\t\tfor (i = 0; i < guesses.length; i++) {\n\t\t\tzoneScore = new ZoneScore(getZone(guesses[i]), offsetsLength);\n\t\t\tfor (j = 0; j < offsetsLength; j++) {\n\t\t\t\tzoneScore.scoreOffsetAt(offsets[j]);\n\t\t\t}\n\t\t\tzoneScores.push(zoneScore);\n\t\t}\n\n\t\tzoneScores.sort(sortZoneScores);\n\n\t\treturn zoneScores.length > 0 ? zoneScores[0].zone.name : undefined;\n\t}\n\n\tfunction guess (ignoreCache) {\n\t\tif (!cachedGuess || ignoreCache) {\n\t\t\tcachedGuess = rebuildGuess();\n\t\t}\n\t\treturn cachedGuess;\n\t}\n\n\t/************************************\n\t\tGlobal Methods\n\t************************************/\n\n\tfunction normalizeName (name) {\n\t\treturn (name || '').toLowerCase().replace(/\\//g, '_');\n\t}\n\n\tfunction addZone (packed) {\n\t\tvar i, name, split, normalized;\n\n\t\tif (typeof packed === \"string\") {\n\t\t\tpacked = [packed];\n\t\t}\n\n\t\tfor (i = 0; i < packed.length; i++) {\n\t\t\tsplit = packed[i].split('|');\n\t\t\tname = split[0];\n\t\t\tnormalized = normalizeName(name);\n\t\t\tzones[normalized] = packed[i];\n\t\t\tnames[normalized] = name;\n\t\t\taddToGuesses(normalized, split[2].split(' '));\n\t\t}\n\t}\n\n\tfunction getZone (name, caller) {\n\n\t\tname = normalizeName(name);\n\n\t\tvar zone = zones[name];\n\t\tvar link;\n\n\t\tif (zone instanceof Zone) {\n\t\t\treturn zone;\n\t\t}\n\n\t\tif (typeof zone === 'string') {\n\t\t\tzone = new Zone(zone);\n\t\t\tzones[name] = zone;\n\t\t\treturn zone;\n\t\t}\n\n\t\t// Pass getZone to prevent recursion more than 1 level deep\n\t\tif (links[name] && caller !== getZone && (link = getZone(links[name], getZone))) {\n\t\t\tzone = zones[name] = new Zone();\n\t\t\tzone._set(link);\n\t\t\tzone.name = names[name];\n\t\t\treturn zone;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction getNames () {\n\t\tvar i, out = [];\n\n\t\tfor (i in names) {\n\t\t\tif (names.hasOwnProperty(i) && (zones[i] || zones[links[i]]) && names[i]) {\n\t\t\t\tout.push(names[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn out.sort();\n\t}\n\n\tfunction getCountryNames () {\n\t\treturn Object.keys(countries);\n\t}\n\n\tfunction addLink (aliases) {\n\t\tvar i, alias, normal0, normal1;\n\n\t\tif (typeof aliases === \"string\") {\n\t\t\taliases = [aliases];\n\t\t}\n\n\t\tfor (i = 0; i < aliases.length; i++) {\n\t\t\talias = aliases[i].split('|');\n\n\t\t\tnormal0 = normalizeName(alias[0]);\n\t\t\tnormal1 = normalizeName(alias[1]);\n\n\t\t\tlinks[normal0] = normal1;\n\t\t\tnames[normal0] = alias[0];\n\n\t\t\tlinks[normal1] = normal0;\n\t\t\tnames[normal1] = alias[1];\n\t\t}\n\t}\n\n\tfunction addCountries (data) {\n\t\tvar i, country_code, country_zones, split;\n\t\tif (!data || !data.length) return;\n\t\tfor (i = 0; i < data.length; i++) {\n\t\t\tsplit = data[i].split('|');\n\t\t\tcountry_code = split[0].toUpperCase();\n\t\t\tcountry_zones = split[1].split(' ');\n\t\t\tcountries[country_code] = new Country(\n\t\t\t\tcountry_code,\n\t\t\t\tcountry_zones\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction getCountry (name) {\n\t\tname = name.toUpperCase();\n\t\treturn countries[name] || null;\n\t}\n\n\tfunction zonesForCountry(country, with_offset) {\n\t\tcountry = getCountry(country);\n\n\t\tif (!country) return null;\n\n\t\tvar zones = country.zones.sort();\n\n\t\tif (with_offset) {\n\t\t\treturn zones.map(function (zone_name) {\n\t\t\t\tvar zone = getZone(zone_name);\n\t\t\t\treturn {\n\t\t\t\t\tname: zone_name,\n\t\t\t\t\toffset: zone.utcOffset(new Date())\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\treturn zones;\n\t}\n\n\tfunction loadData (data) {\n\t\taddZone(data.zones);\n\t\taddLink(data.links);\n\t\taddCountries(data.countries);\n\t\ttz.dataVersion = data.version;\n\t}\n\n\tfunction zoneExists (name) {\n\t\tif (!zoneExists.didShowError) {\n\t\t\tzoneExists.didShowError = true;\n\t\t\t\tlogError(\"moment.tz.zoneExists('\" + name + \"') has been deprecated in favor of !moment.tz.zone('\" + name + \"')\");\n\t\t}\n\t\treturn !!getZone(name);\n\t}\n\n\tfunction needsOffset (m) {\n\t\tvar isUnixTimestamp = (m._f === 'X' || m._f === 'x');\n\t\treturn !!(m._a && (m._tzm === undefined) && !isUnixTimestamp);\n\t}\n\n\tfunction logError (message) {\n\t\tif (typeof console !== 'undefined' && typeof console.error === 'function') {\n\t\t\tconsole.error(message);\n\t\t}\n\t}\n\n\t/************************************\n\t\tmoment.tz namespace\n\t************************************/\n\n\tfunction tz (input) {\n\t\tvar args = Array.prototype.slice.call(arguments, 0, -1),\n\t\t\tname = arguments[arguments.length - 1],\n\t\t\tzone = getZone(name),\n\t\t\tout  = moment.utc.apply(null, args);\n\n\t\tif (zone && !moment.isMoment(input) && needsOffset(out)) {\n\t\t\tout.add(zone.parse(out), 'minutes');\n\t\t}\n\n\t\tout.tz(name);\n\n\t\treturn out;\n\t}\n\n\ttz.version      = VERSION;\n\ttz.dataVersion  = '';\n\ttz._zones       = zones;\n\ttz._links       = links;\n\ttz._names       = names;\n\ttz._countries\t= countries;\n\ttz.add          = addZone;\n\ttz.link         = addLink;\n\ttz.load         = loadData;\n\ttz.zone         = getZone;\n\ttz.zoneExists   = zoneExists; // deprecated in 0.1.0\n\ttz.guess        = guess;\n\ttz.names        = getNames;\n\ttz.Zone         = Zone;\n\ttz.unpack       = unpack;\n\ttz.unpackBase60 = unpackBase60;\n\ttz.needsOffset  = needsOffset;\n\ttz.moveInvalidForward   = true;\n\ttz.moveAmbiguousForward = false;\n\ttz.countries    = getCountryNames;\n\ttz.zonesForCountry = zonesForCountry;\n\n\t/************************************\n\t\tInterface with Moment.js\n\t************************************/\n\n\tvar fn = moment.fn;\n\n\tmoment.tz = tz;\n\n\tmoment.defaultZone = null;\n\n\tmoment.updateOffset = function (mom, keepTime) {\n\t\tvar zone = moment.defaultZone,\n\t\t\toffset;\n\n\t\tif (mom._z === undefined) {\n\t\t\tif (zone && needsOffset(mom) && !mom._isUTC) {\n\t\t\t\tmom._d = moment.utc(mom._a)._d;\n\t\t\t\tmom.utc().add(zone.parse(mom), 'minutes');\n\t\t\t}\n\t\t\tmom._z = zone;\n\t\t}\n\t\tif (mom._z) {\n\t\t\toffset = mom._z.utcOffset(mom);\n\t\t\tif (Math.abs(offset) < 16) {\n\t\t\t\toffset = offset / 60;\n\t\t\t}\n\t\t\tif (mom.utcOffset !== undefined) {\n\t\t\t\tvar z = mom._z;\n\t\t\t\tmom.utcOffset(-offset, keepTime);\n\t\t\t\tmom._z = z;\n\t\t\t} else {\n\t\t\t\tmom.zone(offset, keepTime);\n\t\t\t}\n\t\t}\n\t};\n\n\tfn.tz = function (name, keepTime) {\n\t\tif (name) {\n\t\t\tif (typeof name !== 'string') {\n\t\t\t\tthrow new Error('Time zone name must be a string, got ' + name + ' [' + typeof name + ']');\n\t\t\t}\n\t\t\tthis._z = getZone(name);\n\t\t\tif (this._z) {\n\t\t\t\tmoment.updateOffset(this, keepTime);\n\t\t\t} else {\n\t\t\t\tlogError(\"Moment Timezone has no data for \" + name + \". See http://momentjs.com/timezone/docs/#/data-loading/.\");\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif (this._z) { return this._z.name; }\n\t};\n\n\tfunction abbrWrap (old) {\n\t\treturn function () {\n\t\t\tif (this._z) { return this._z.abbr(this); }\n\t\t\treturn old.call(this);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap (old) {\n\t\treturn function () {\n\t\t\tthis._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfunction resetZoneWrap2 (old) {\n\t\treturn function () {\n\t\t\tif (arguments.length > 0) this._z = null;\n\t\t\treturn old.apply(this, arguments);\n\t\t};\n\t}\n\n\tfn.zoneName  = abbrWrap(fn.zoneName);\n\tfn.zoneAbbr  = abbrWrap(fn.zoneAbbr);\n\tfn.utc       = resetZoneWrap(fn.utc);\n\tfn.local     = resetZoneWrap(fn.local);\n\tfn.utcOffset = resetZoneWrap2(fn.utcOffset);\n\n\tmoment.tz.setDefault = function(name) {\n\t\tif (major < 2 || (major === 2 && minor < 9)) {\n\t\t\tlogError('Moment Timezone setDefault() requires Moment.js >= 2.9.0. You are using Moment.js ' + moment.version + '.');\n\t\t}\n\t\tmoment.defaultZone = name ? getZone(name) : null;\n\t\treturn moment;\n\t};\n\n\t// Cloning a moment should include the _z property.\n\tvar momentProperties = moment.momentProperties;\n\tif (Object.prototype.toString.call(momentProperties) === '[object Array]') {\n\t\t// moment 2.8.1+\n\t\tmomentProperties.push('_z');\n\t\tmomentProperties.push('_a');\n\t} else if (momentProperties) {\n\t\t// moment 2.7.0\n\t\tmomentProperties._z = null;\n\t}\n\n\t// INJECT DATA\n\n\treturn moment;\n}));\n", "var moment = module.exports = require(\"./moment-timezone\");\nmoment.tz.load(require('./data/packed/latest.json'));\n", "'use strict';\n\nconst Errors = require('../misc/errors');\nconst Iconv = require('iconv-lite');\nconst moment = require('moment-timezone');\n\n/**\n * Object to easily parse buffer.\n * Packet are MUTABLE (buffer are changed, to avoid massive packet object creation).\n * Use clone() in case immutability is required\n *\n */\nclass Packet {\n  update(buf, pos, end) {\n    this.buf = buf;\n    this.pos = pos;\n    this.end = end;\n    return this;\n  }\n\n  skip(n) {\n    this.pos += n;\n  }\n\n  readGeometry(defaultVal) {\n    const geoBuf = this.readBufferLengthEncoded();\n    if (geoBuf === null || geoBuf.length === 0) {\n      return defaultVal;\n    }\n    let geoPos = 4;\n    return readGeometryObject(false);\n\n    function parseCoordinates(byteOrder) {\n      geoPos += 16;\n      const x = byteOrder ? geoBuf.readDoubleLE(geoPos - 16) : geoBuf.readDoubleBE(geoPos - 16);\n      const y = byteOrder ? geoBuf.readDoubleLE(geoPos - 8) : geoBuf.readDoubleBE(geoPos - 8);\n      return [x, y];\n    }\n\n    function readGeometryObject(inner) {\n      const byteOrder = geoBuf[geoPos++];\n      const wkbType = byteOrder ? geoBuf.readInt32LE(geoPos) : geoBuf.readInt32BE(geoPos);\n      geoPos += 4;\n      switch (wkbType) {\n        case 1: //wkbPoint\n          const coords = parseCoordinates(byteOrder);\n\n          if (inner) return coords;\n          return {\n            type: 'Point',\n            coordinates: coords\n          };\n\n        case 2: //wkbLineString\n          const pointNumber = byteOrder ? geoBuf.readInt32LE(geoPos) : geoBuf.readInt32BE(geoPos);\n          geoPos += 4;\n          let coordinates = [];\n          for (let i = 0; i < pointNumber; i++) {\n            coordinates.push(parseCoordinates(byteOrder));\n          }\n          if (inner) return coordinates;\n          return {\n            type: 'LineString',\n            coordinates: coordinates\n          };\n\n        case 3: //wkbPolygon\n          let polygonCoordinates = [];\n          const numRings = byteOrder ? geoBuf.readInt32LE(geoPos) : geoBuf.readInt32BE(geoPos);\n          geoPos += 4;\n          for (let ring = 0; ring < numRings; ring++) {\n            const pointNumber = byteOrder ? geoBuf.readInt32LE(geoPos) : geoBuf.readInt32BE(geoPos);\n            geoPos += 4;\n            let linesCoordinates = [];\n            for (let i = 0; i < pointNumber; i++) {\n              linesCoordinates.push(parseCoordinates(byteOrder));\n            }\n            polygonCoordinates.push(linesCoordinates);\n          }\n\n          if (inner) return polygonCoordinates;\n          return {\n            type: 'Polygon',\n            coordinates: polygonCoordinates\n          };\n\n        case 4: //wkbMultiPoint\n          return {\n            type: 'MultiPoint',\n            coordinates: parseGeomArray(byteOrder, true)\n          };\n\n        case 5: //wkbMultiLineString\n          return {\n            type: 'MultiLineString',\n            coordinates: parseGeomArray(byteOrder, true)\n          };\n        case 6: //wkbMultiPolygon\n          return {\n            type: 'MultiPolygon',\n            coordinates: parseGeomArray(byteOrder, true)\n          };\n        case 7: //wkbGeometryCollection\n          return {\n            type: 'GeometryCollection',\n            geometries: parseGeomArray(byteOrder, false)\n          };\n      }\n      return null;\n    }\n\n    function parseGeomArray(byteOrder, inner) {\n      let coordinates = [];\n      const number = byteOrder ? geoBuf.readInt32LE(geoPos) : geoBuf.readInt32BE(geoPos);\n      geoPos += 4;\n      for (let i = 0; i < number; i++) {\n        coordinates.push(readGeometryObject(inner));\n      }\n      return coordinates;\n    }\n  }\n\n  peek() {\n    return this.buf[this.pos];\n  }\n\n  remaining() {\n    return this.end - this.pos > 0;\n  }\n\n  readInt8() {\n    const val = this.buf[this.pos++];\n    return val | ((val & (2 ** 7)) * 0x1fffffe);\n  }\n\n  readUInt8() {\n    return this.buf[this.pos++];\n  }\n\n  readInt16() {\n    const first = this.buf[this.pos++];\n    const last = this.buf[this.pos++];\n    const val = first + last * 2 ** 8;\n    return val | ((val & (2 ** 15)) * 0x1fffe);\n  }\n\n  readUInt16() {\n    return this.buf[this.pos++] + (this.buf[this.pos++] << 8);\n  }\n\n  readInt24() {\n    const first = this.buf[this.pos];\n    const last = this.buf[this.pos + 2];\n    const val = first + this.buf[this.pos + 1] * 2 ** 8 + last * 2 ** 16;\n    this.pos += 3;\n    return val | ((val & (2 ** 23)) * 0x1fe);\n  }\n\n  readUInt24() {\n    return this.buf[this.pos++] + (this.buf[this.pos++] << 8) + (this.buf[this.pos++] << 16);\n  }\n\n  readUInt32() {\n    return (\n      this.buf[this.pos++] +\n      (this.buf[this.pos++] << 8) +\n      (this.buf[this.pos++] << 16) +\n      this.buf[this.pos++] * 0x1000000\n    );\n  }\n\n  readInt32() {\n    return (\n      this.buf[this.pos++] + (this.buf[this.pos++] << 8) + (this.buf[this.pos++] << 16) + (this.buf[this.pos++] << 24)\n    );\n  }\n\n  readBigInt64() {\n    const val = this.buf.readBigInt64LE(this.pos);\n    this.pos += 8;\n    return val;\n  }\n\n  readBigUInt64() {\n    const val = this.buf.readBigUInt64LE(this.pos);\n    this.pos += 8;\n    return val;\n  }\n\n  readUnsignedLength() {\n    const type = this.buf[this.pos++] & 0xff;\n    switch (type) {\n      case 0xfb:\n        return null;\n      case 0xfc:\n        return this.readUInt16();\n      case 0xfd:\n        return this.readUInt24();\n      case 0xfe:\n        // limitation to BigInt signed value\n        return Number(this.readBigInt64());\n      default:\n        return type;\n    }\n  }\n\n  readBuffer(len) {\n    this.pos += len;\n    return this.buf.slice(this.pos - len, this.pos);\n  }\n\n  readBufferRemaining() {\n    let b = this.buf.slice(this.pos, this.end);\n    this.pos = this.end;\n    return b;\n  }\n\n  readBufferLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n    this.pos += len;\n    return this.buf.slice(this.pos - len, this.pos);\n  }\n\n  readStringNullEnded() {\n    let initialPosition = this.pos;\n    let cnt = 0;\n    while (this.remaining() > 0 && this.buf[this.pos++] !== 0) {\n      cnt++;\n    }\n    return this.buf.toString(undefined, initialPosition, initialPosition + cnt);\n  }\n\n  readSignedLengthBigInt() {\n    const type = this.buf[this.pos++];\n    switch (type) {\n      case 0xfb:\n        return null;\n      case 0xfc:\n        return BigInt(this.readUInt16());\n      case 0xfd:\n        return BigInt(this.readUInt24());\n      case 0xfe:\n        return this.readBigInt64();\n      default:\n        return BigInt(type);\n    }\n  }\n\n  readAsciiStringLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n    this.pos += len;\n    return this.buf.toString('ascii', this.pos - len, this.pos);\n  }\n\n  readStringLengthEncoded() {\n    throw new Error('code is normally superseded by Node encoder or Iconv depending on charset used');\n  }\n\n  readBigIntLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n\n    // fast-path: if length encoded is < to 16, value is in safe integer range\n    // atoi\n    if (len < 16) {\n      return BigInt(this._atoi(len));\n    }\n\n    // atoll\n    let result = BigInt(0);\n    let negate = false;\n    let begin = this.pos;\n\n    if (len > 0 && this.buf[begin] === 45) {\n      //minus sign\n      negate = true;\n      begin++;\n    }\n    for (; begin < this.pos + len; begin++) {\n      result = result * 10n + BigInt(this.buf[begin] - 48);\n    }\n    this.pos += len;\n    return negate ? -1 * result : result;\n  }\n\n  readDecimalLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n    this.pos += len;\n    return this.buf.toString('ascii', this.pos - len, this.pos);\n  }\n\n  readDate() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n\n    let res = [];\n    let value = 0;\n    let initPos = this.pos;\n    this.pos += len;\n    while (initPos < this.pos) {\n      const char = this.buf[initPos++];\n      if (char === 45) {\n        //minus separator\n        res.push(value);\n        value = 0;\n      } else {\n        value = value * 10 + char - 48;\n      }\n    }\n    res.push(value);\n\n    //handle zero-date as null\n    if (res[0] === 0 && res[1] === 0 && res[2] === 0) return null;\n\n    return new Date(res[0], res[1] - 1, res[2]);\n  }\n\n  readBinaryDate(opts) {\n    const len = this.buf[this.pos++];\n    let year = 0;\n    let month = 0;\n    let day = 0;\n    if (len > 0) {\n      year = this.readInt16();\n      if (len > 2) {\n        month = this.readUInt8() - 1;\n        if (len > 3) {\n          day = this.readUInt8();\n        }\n      }\n    }\n    if (year === 0 && month === 0 && day === 0) return opts.dateStrings ? '0000-00-00' : null;\n    if (opts.dateStrings) {\n      return `${appendZero(year, 4)}-${appendZero(month + 1, 2)}-${appendZero(day, 2)}`;\n    }\n    //handle zero-date as null\n    return new Date(year, month, day);\n  }\n\n  readDateTime(opts) {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n    this.pos += len;\n    const str = this.buf.toString('ascii', this.pos - len, this.pos);\n    if (str.startsWith('0000-00-00 00:00:00')) return null;\n\n    if (opts.tz) {\n      return new Date(moment.tz(str, opts.tz).clone().tz(opts._localTz).format('YYYY-MM-DD HH:mm:ss.SSSSSS'));\n    }\n    return new Date(str);\n  }\n\n  readBinaryDateTime(opts, col) {\n    const len = this.buf[this.pos++];\n    let year = 0;\n    let month = 0;\n    let day = 0;\n    let hour = 0;\n    let min = 0;\n    let sec = 0;\n    let microSec = 0;\n\n    if (len > 0) {\n      year = this.readInt16();\n      if (len > 2) {\n        month = this.readUInt8() - 1;\n        if (len > 3) {\n          day = this.readUInt8();\n          if (len > 4) {\n            hour = this.readUInt8();\n            min = this.readUInt8();\n            sec = this.readUInt8();\n            if (len > 7) {\n              microSec = this.readUInt32();\n            }\n          }\n        }\n      }\n    }\n\n    //handle zero-date as null\n    if (year === 0 && month === 0 && day === 0 && hour === 0 && min === 0 && sec === 0 && microSec === 0)\n      return opts.dateStrings\n        ? '0000-00-00 00:00:00' + (col.scale > 0 ? '.000000'.substr(0, col.scale + 1) : '')\n        : null;\n\n    if (opts.dateStrings) {\n      return (\n        appendZero(year, 4) +\n        '-' +\n        appendZero(month + 1, 2) +\n        '-' +\n        appendZero(day, 2) +\n        ' ' +\n        appendZero(hour, 2) +\n        ':' +\n        appendZero(min, 2) +\n        ':' +\n        appendZero(sec, 2) +\n        (microSec > 0 && col.scale > 0 ? '.' + appendZero(microSec, 6).substr(0, col.scale) : '')\n      );\n    }\n\n    if (opts.tz && opts.tz === 'Etc/UTC') {\n      return new Date(Date.UTC(year, month, day, hour, min, sec, microSec / 1000));\n    }\n    return new Date(year, month, day, hour, min, sec, microSec / 1000);\n  }\n\n  readBinaryTime() {\n    const len = this.buf[this.pos++];\n    const negate = this.buf[this.pos++] === 1;\n    const hour = this.readUInt32() * 24 + this.readUInt8();\n    const min = this.readUInt8();\n    const sec = this.readUInt8();\n    let microSec = 0;\n    if (len > 7) {\n      microSec = this.readUInt32();\n    }\n    let val = appendZero(hour, 2) + ':' + appendZero(min, 2) + ':' + appendZero(sec, 2);\n    if (microSec > 0) {\n      val += '.' + appendZero(microSec, 6);\n    }\n    if (negate) return '-' + val;\n    return val;\n  }\n\n  readFloat() {\n    const val = this.buf.readFloatLE(this.pos);\n    this.pos += 4;\n    return val;\n  }\n\n  readDouble() {\n    const val = this.buf.readDoubleLE(this.pos);\n    this.pos += 8;\n    return val;\n  }\n\n  readIntLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n    return this._atoi(len);\n  }\n\n  _atoi(len) {\n    let result = 0;\n    let negate = false;\n    let begin = this.pos;\n\n    if (len > 0 && this.buf[begin] === 45) {\n      //minus sign\n      negate = true;\n      begin++;\n    }\n    for (; begin < this.pos + len; begin++) {\n      result = result * 10 + (this.buf[begin] - 48);\n    }\n    this.pos += len;\n    return negate ? -1 * result : result;\n  }\n\n  readFloatLengthCoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n    this.pos += len;\n    return +this.buf.toString('ascii', this.pos - len, this.pos);\n  }\n\n  skipLengthCodedNumber() {\n    const type = this.buf[this.pos++] & 0xff;\n    switch (type) {\n      case 251:\n        return;\n      case 252:\n        this.pos += 2 + (0xffff & ((this.buf[this.pos] & 0xff) + ((this.buf[this.pos + 1] & 0xff) << 8)));\n        return;\n      case 253:\n        this.pos +=\n          3 +\n          (0xffffff &\n            ((this.buf[this.pos] & 0xff) +\n              ((this.buf[this.pos + 1] & 0xff) << 8) +\n              ((this.buf[this.pos + 2] & 0xff) << 16)));\n        return;\n      case 254:\n        this.pos +=\n          8 +\n          ((this.buf[this.pos] & 0xff) +\n            ((this.buf[this.pos + 1] & 0xff) << 8) +\n            ((this.buf[this.pos + 2] & 0xff) << 16) +\n            ((this.buf[this.pos + 3] & 0xff) << 24) +\n            ((this.buf[this.pos + 4] & 0xff) << 32) +\n            ((this.buf[this.pos + 5] & 0xff) << 40) +\n            ((this.buf[this.pos + 6] & 0xff) << 48) +\n            ((this.buf[this.pos + 7] & 0xff) << 56));\n        return;\n      default:\n        this.pos += type;\n        return;\n    }\n  }\n\n  length() {\n    return this.end - this.pos;\n  }\n\n  subPacketLengthEncoded() {\n    const len = this.readUnsignedLength();\n    this.skip(len);\n    return new Packet().update(this.buf, this.pos - len, this.pos);\n  }\n\n  /**\n   * Parse ERR_Packet : https://mariadb.com/kb/en/library/err_packet/\n   *\n   * @param info              current connection info\n   * @param sql               command sql\n   * @param stack             additional stack trace\n   * @returns {Error}\n   */\n  readError(info, sql, stack) {\n    this.skip(1);\n    let errno = this.readUInt16();\n    let sqlState = '';\n\n    if (this.peek() === 0x23) {\n      this.skip(6);\n      sqlState = this.buf.toString(undefined, this.pos - 5, this.pos);\n    }\n\n    let msg = this.buf.toString(undefined, this.pos, this.end);\n    let fatal = sqlState.startsWith('08') || sqlState === '70100';\n    return Errors.createError(msg, errno, info, sqlState, sql, fatal, stack);\n  }\n}\n\nconst appendZero = (val, len) => {\n  let st = val.toString();\n  while (st.length < len) {\n    st = '0' + st;\n  }\n  return st;\n};\n\nmodule.exports = Packet;\n", "'use strict';\n\nconst Packet = require('./packet');\n\nclass PacketNodeEncoded extends Packet {\n  constructor(encoding) {\n    super();\n    // using undefined for utf8 permit to avoid node.js searching\n    // for charset, using directly utf8 default one.\n    this.encoding = encoding === 'utf8' ? undefined : encoding;\n  }\n\n  clone() {\n    return new PacketNodeEncoded(this.encoding).update(this.buf, this.pos, this.end);\n  }\n\n  readStringLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n\n    this.pos += len;\n    return this.buf.toString(this.encoding, this.pos - len, this.pos);\n  }\n\n  readString(beg, len) {\n    return this.buf.toString(this.encoding, beg, beg + len);\n  }\n\n  subPacketLengthEncoded() {\n    const len = this.readUnsignedLength();\n    this.skip(len);\n    return new PacketNodeEncoded(this.encoding).update(this.buf, this.pos - len, this.pos);\n  }\n\n  readStringRemaining() {\n    const str = this.buf.toString(this.encoding, this.pos, this.end);\n    this.pos = this.end;\n    return str;\n  }\n}\n\nmodule.exports = PacketNodeEncoded;\n", "'use strict';\n\nconst Packet = require('./packet');\nconst Iconv = require('iconv-lite');\n\nclass PacketIconvEncoded extends Packet {\n  constructor(encoding) {\n    super();\n    this.encoding = encoding;\n  }\n\n  clone() {\n    return new PacketIconvEncoded(this.encoding).update(this.buf, this.pos, this.end);\n  }\n\n  readStringLengthEncoded() {\n    const len = this.readUnsignedLength();\n    if (len === null) return null;\n\n    this.pos += len;\n    return Iconv.decode(this.buf.slice(this.pos - len, this.pos), this.encoding);\n  }\n\n  readString(beg, len) {\n    return Iconv.decode(this.buf.slice(beg, beg + len), this.encoding);\n  }\n\n  subPacketLengthEncoded() {\n    const len = this.readUnsignedLength();\n    this.skip(len);\n    return new PacketIconvEncoded(this.encoding).update(this.buf, this.pos - len, this.pos);\n  }\n\n  readStringRemaining() {\n    const str = Iconv.decode(this.buf.slice(this.pos, this.end), this.encoding);\n    this.pos = this.end;\n    return str;\n  }\n}\n\nmodule.exports = PacketIconvEncoded;\n", "// noinspection SpellCheckingInspection\n\n'use strict';\n\nlet charsets = [];\nlet defaultCharsets = [];\n\nclass Collation {\n  constructor(index, name, charset, maxLength) {\n    this.index = index;\n    this.name = name;\n    this.charset = charset;\n    this.maxLength = maxLength;\n  }\n\n  static fromCharset(charset) {\n    return defaultCharsets[charset];\n  }\n\n  static fromIndex(index) {\n    if (index >= charsets.length) return undefined;\n    return charsets[index];\n  }\n\n  static fromName(name) {\n    for (let i = 0; i < charsets.length; i++) {\n      let collation = charsets[i];\n      if (collation && collation.name === name) {\n        return collation;\n      }\n    }\n    return undefined;\n  }\n}\n\n// generated with query :\n// SELECT CONCAT('charsets[', CAST(co.ID as char), '] = new Collation(', CAST(co.ID as char), ', \\'',\n// UPPER(co.COLLATION_NAME), '\\', \\'', co.CHARACTER_SET_NAME, '\\', ', CAST(ca.MAXLEN as char), ');\\n')\n// FROM information_schema.COLLATIONS co\n//   LEFT OUTER JOIN information_schema.CHARACTER_SETS ca ON ca.character_set_name = co.character_set_name\n// ORDER BY co.ID ASC;\n//then replace \"utf8mb4\" by \"utf8\"\n\ncharsets[1] = new Collation(1, 'BIG5_CHINESE_CI', 'big5', 2);\ncharsets[2] = new Collation(2, 'LATIN2_CZECH_CS', 'latin2', 1);\ncharsets[3] = new Collation(3, 'DEC8_SWEDISH_CI', 'dec8', 1);\ncharsets[4] = new Collation(4, 'CP850_GENERAL_CI', 'cp850', 1);\ncharsets[5] = new Collation(5, 'LATIN1_GERMAN1_CI', 'latin1', 1);\ncharsets[6] = new Collation(6, 'HP8_ENGLISH_CI', 'hp8', 1);\ncharsets[7] = new Collation(7, 'KOI8R_GENERAL_CI', 'koi8r', 1);\ncharsets[8] = new Collation(8, 'LATIN1_SWEDISH_CI', 'latin1', 1);\ncharsets[9] = new Collation(9, 'LATIN2_GENERAL_CI', 'latin2', 1);\ncharsets[10] = new Collation(10, 'SWE7_SWEDISH_CI', 'swe7', 1);\ncharsets[11] = new Collation(11, 'ASCII_GENERAL_CI', 'ascii', 1);\ncharsets[12] = new Collation(12, 'UJIS_JAPANESE_CI', 'ujis', 3);\ncharsets[13] = new Collation(13, 'SJIS_JAPANESE_CI', 'sjis', 2);\ncharsets[14] = new Collation(14, 'CP1251_BULGARIAN_CI', 'cp1251', 1);\ncharsets[15] = new Collation(15, 'LATIN1_DANISH_CI', 'latin1', 1);\ncharsets[16] = new Collation(16, 'HEBREW_GENERAL_CI', 'hebrew', 1);\ncharsets[18] = new Collation(18, 'TIS620_THAI_CI', 'tis620', 1);\ncharsets[19] = new Collation(19, 'EUCKR_KOREAN_CI', 'euckr', 2);\ncharsets[20] = new Collation(20, 'LATIN7_ESTONIAN_CS', 'latin7', 1);\ncharsets[21] = new Collation(21, 'LATIN2_HUNGARIAN_CI', 'latin2', 1);\ncharsets[22] = new Collation(22, 'KOI8U_GENERAL_CI', 'koi8u', 1);\ncharsets[23] = new Collation(23, 'CP1251_UKRAINIAN_CI', 'cp1251', 1);\ncharsets[24] = new Collation(24, 'GB2312_CHINESE_CI', 'gb2312', 2);\ncharsets[25] = new Collation(25, 'GREEK_GENERAL_CI', 'greek', 1);\ncharsets[26] = new Collation(26, 'CP1250_GENERAL_CI', 'cp1250', 1);\ncharsets[27] = new Collation(27, 'LATIN2_CROATIAN_CI', 'latin2', 1);\ncharsets[28] = new Collation(28, 'GBK_CHINESE_CI', 'gbk', 2);\ncharsets[29] = new Collation(29, 'CP1257_LITHUANIAN_CI', 'cp1257', 1);\ncharsets[30] = new Collation(30, 'LATIN5_TURKISH_CI', 'latin5', 1);\ncharsets[31] = new Collation(31, 'LATIN1_GERMAN2_CI', 'latin1', 1);\ncharsets[32] = new Collation(32, 'ARMSCII8_GENERAL_CI', 'armscii8', 1);\ncharsets[33] = new Collation(33, 'UTF8_GENERAL_CI', 'utf8', 3);\ncharsets[34] = new Collation(34, 'CP1250_CZECH_CS', 'cp1250', 1);\ncharsets[35] = new Collation(35, 'UCS2_GENERAL_CI', 'ucs2', 2);\ncharsets[36] = new Collation(36, 'CP866_GENERAL_CI', 'cp866', 1);\ncharsets[37] = new Collation(37, 'KEYBCS2_GENERAL_CI', 'keybcs2', 1);\ncharsets[38] = new Collation(38, 'MACCE_GENERAL_CI', 'macce', 1);\ncharsets[39] = new Collation(39, 'MACROMAN_GENERAL_CI', 'macroman', 1);\ncharsets[40] = new Collation(40, 'CP852_GENERAL_CI', 'cp852', 1);\ncharsets[41] = new Collation(41, 'LATIN7_GENERAL_CI', 'latin7', 1);\ncharsets[42] = new Collation(42, 'LATIN7_GENERAL_CS', 'latin7', 1);\ncharsets[43] = new Collation(43, 'MACCE_BIN', 'macce', 1);\ncharsets[44] = new Collation(44, 'CP1250_CROATIAN_CI', 'cp1250', 1);\ncharsets[45] = new Collation(45, 'UTF8MB4_GENERAL_CI', 'utf8', 4);\ncharsets[46] = new Collation(46, 'UTF8MB4_BIN', 'utf8', 4);\ncharsets[47] = new Collation(47, 'LATIN1_BIN', 'latin1', 1);\ncharsets[48] = new Collation(48, 'LATIN1_GENERAL_CI', 'latin1', 1);\ncharsets[49] = new Collation(49, 'LATIN1_GENERAL_CS', 'latin1', 1);\ncharsets[50] = new Collation(50, 'CP1251_BIN', 'cp1251', 1);\ncharsets[51] = new Collation(51, 'CP1251_GENERAL_CI', 'cp1251', 1);\ncharsets[52] = new Collation(52, 'CP1251_GENERAL_CS', 'cp1251', 1);\ncharsets[53] = new Collation(53, 'MACROMAN_BIN', 'macroman', 1);\ncharsets[54] = new Collation(54, 'UTF16_GENERAL_CI', 'utf16', 4);\ncharsets[55] = new Collation(55, 'UTF16_BIN', 'utf16', 4);\ncharsets[56] = new Collation(56, 'UTF16LE_GENERAL_CI', 'utf16le', 4);\ncharsets[57] = new Collation(57, 'CP1256_GENERAL_CI', 'cp1256', 1);\ncharsets[58] = new Collation(58, 'CP1257_BIN', 'cp1257', 1);\ncharsets[59] = new Collation(59, 'CP1257_GENERAL_CI', 'cp1257', 1);\ncharsets[60] = new Collation(60, 'UTF32_GENERAL_CI', 'utf32', 4);\ncharsets[61] = new Collation(61, 'UTF32_BIN', 'utf32', 4);\ncharsets[62] = new Collation(62, 'UTF16LE_BIN', 'utf16le', 4);\ncharsets[63] = new Collation(63, 'BINARY', 'binary', 1);\ncharsets[64] = new Collation(64, 'ARMSCII8_BIN', 'armscii8', 1);\ncharsets[65] = new Collation(65, 'ASCII_BIN', 'ascii', 1);\ncharsets[66] = new Collation(66, 'CP1250_BIN', 'cp1250', 1);\ncharsets[67] = new Collation(67, 'CP1256_BIN', 'cp1256', 1);\ncharsets[68] = new Collation(68, 'CP866_BIN', 'cp866', 1);\ncharsets[69] = new Collation(69, 'DEC8_BIN', 'dec8', 1);\ncharsets[70] = new Collation(70, 'GREEK_BIN', 'greek', 1);\ncharsets[71] = new Collation(71, 'HEBREW_BIN', 'hebrew', 1);\ncharsets[72] = new Collation(72, 'HP8_BIN', 'hp8', 1);\ncharsets[73] = new Collation(73, 'KEYBCS2_BIN', 'keybcs2', 1);\ncharsets[74] = new Collation(74, 'KOI8R_BIN', 'koi8r', 1);\ncharsets[75] = new Collation(75, 'KOI8U_BIN', 'koi8u', 1);\ncharsets[76] = new Collation(76, 'UTF8_TOLOWER_CI', 'utf8', 3);\ncharsets[77] = new Collation(77, 'LATIN2_BIN', 'latin2', 1);\ncharsets[78] = new Collation(78, 'LATIN5_BIN', 'latin5', 1);\ncharsets[79] = new Collation(79, 'LATIN7_BIN', 'latin7', 1);\ncharsets[80] = new Collation(80, 'CP850_BIN', 'cp850', 1);\ncharsets[81] = new Collation(81, 'CP852_BIN', 'cp852', 1);\ncharsets[82] = new Collation(82, 'SWE7_BIN', 'swe7', 1);\ncharsets[83] = new Collation(83, 'UTF8_BIN', 'utf8', 3);\ncharsets[84] = new Collation(84, 'BIG5_BIN', 'big5', 2);\ncharsets[85] = new Collation(85, 'EUCKR_BIN', 'euckr', 2);\ncharsets[86] = new Collation(86, 'GB2312_BIN', 'gb2312', 2);\ncharsets[87] = new Collation(87, 'GBK_BIN', 'gbk', 2);\ncharsets[88] = new Collation(88, 'SJIS_BIN', 'sjis', 2);\ncharsets[89] = new Collation(89, 'TIS620_BIN', 'tis620', 1);\ncharsets[90] = new Collation(90, 'UCS2_BIN', 'ucs2', 2);\ncharsets[91] = new Collation(91, 'UJIS_BIN', 'ujis', 3);\ncharsets[92] = new Collation(92, 'GEOSTD8_GENERAL_CI', 'geostd8', 1);\ncharsets[93] = new Collation(93, 'GEOSTD8_BIN', 'geostd8', 1);\ncharsets[94] = new Collation(94, 'LATIN1_SPANISH_CI', 'latin1', 1);\ncharsets[95] = new Collation(95, 'CP932_JAPANESE_CI', 'cp932', 2);\ncharsets[96] = new Collation(96, 'CP932_BIN', 'cp932', 2);\ncharsets[97] = new Collation(97, 'EUCJPMS_JAPANESE_CI', 'eucjpms', 3);\ncharsets[98] = new Collation(98, 'EUCJPMS_BIN', 'eucjpms', 3);\ncharsets[99] = new Collation(99, 'CP1250_POLISH_CI', 'cp1250', 1);\ncharsets[101] = new Collation(101, 'UTF16_UNICODE_CI', 'utf16', 4);\ncharsets[102] = new Collation(102, 'UTF16_ICELANDIC_CI', 'utf16', 4);\ncharsets[103] = new Collation(103, 'UTF16_LATVIAN_CI', 'utf16', 4);\ncharsets[104] = new Collation(104, 'UTF16_ROMANIAN_CI', 'utf16', 4);\ncharsets[105] = new Collation(105, 'UTF16_SLOVENIAN_CI', 'utf16', 4);\ncharsets[106] = new Collation(106, 'UTF16_POLISH_CI', 'utf16', 4);\ncharsets[107] = new Collation(107, 'UTF16_ESTONIAN_CI', 'utf16', 4);\ncharsets[108] = new Collation(108, 'UTF16_SPANISH_CI', 'utf16', 4);\ncharsets[109] = new Collation(109, 'UTF16_SWEDISH_CI', 'utf16', 4);\ncharsets[110] = new Collation(110, 'UTF16_TURKISH_CI', 'utf16', 4);\ncharsets[111] = new Collation(111, 'UTF16_CZECH_CI', 'utf16', 4);\ncharsets[112] = new Collation(112, 'UTF16_DANISH_CI', 'utf16', 4);\ncharsets[113] = new Collation(113, 'UTF16_LITHUANIAN_CI', 'utf16', 4);\ncharsets[114] = new Collation(114, 'UTF16_SLOVAK_CI', 'utf16', 4);\ncharsets[115] = new Collation(115, 'UTF16_SPANISH2_CI', 'utf16', 4);\ncharsets[116] = new Collation(116, 'UTF16_ROMAN_CI', 'utf16', 4);\ncharsets[117] = new Collation(117, 'UTF16_PERSIAN_CI', 'utf16', 4);\ncharsets[118] = new Collation(118, 'UTF16_ESPERANTO_CI', 'utf16', 4);\ncharsets[119] = new Collation(119, 'UTF16_HUNGARIAN_CI', 'utf16', 4);\ncharsets[120] = new Collation(120, 'UTF16_SINHALA_CI', 'utf16', 4);\ncharsets[121] = new Collation(121, 'UTF16_GERMAN2_CI', 'utf16', 4);\ncharsets[122] = new Collation(122, 'UTF16_CROATIAN_MYSQL561_CI', 'utf16', 4);\ncharsets[123] = new Collation(123, 'UTF16_UNICODE_520_CI', 'utf16', 4);\ncharsets[124] = new Collation(124, 'UTF16_VIETNAMESE_CI', 'utf16', 4);\ncharsets[128] = new Collation(128, 'UCS2_UNICODE_CI', 'ucs2', 2);\ncharsets[129] = new Collation(129, 'UCS2_ICELANDIC_CI', 'ucs2', 2);\ncharsets[130] = new Collation(130, 'UCS2_LATVIAN_CI', 'ucs2', 2);\ncharsets[131] = new Collation(131, 'UCS2_ROMANIAN_CI', 'ucs2', 2);\ncharsets[132] = new Collation(132, 'UCS2_SLOVENIAN_CI', 'ucs2', 2);\ncharsets[133] = new Collation(133, 'UCS2_POLISH_CI', 'ucs2', 2);\ncharsets[134] = new Collation(134, 'UCS2_ESTONIAN_CI', 'ucs2', 2);\ncharsets[135] = new Collation(135, 'UCS2_SPANISH_CI', 'ucs2', 2);\ncharsets[136] = new Collation(136, 'UCS2_SWEDISH_CI', 'ucs2', 2);\ncharsets[137] = new Collation(137, 'UCS2_TURKISH_CI', 'ucs2', 2);\ncharsets[138] = new Collation(138, 'UCS2_CZECH_CI', 'ucs2', 2);\ncharsets[139] = new Collation(139, 'UCS2_DANISH_CI', 'ucs2', 2);\ncharsets[140] = new Collation(140, 'UCS2_LITHUANIAN_CI', 'ucs2', 2);\ncharsets[141] = new Collation(141, 'UCS2_SLOVAK_CI', 'ucs2', 2);\ncharsets[142] = new Collation(142, 'UCS2_SPANISH2_CI', 'ucs2', 2);\ncharsets[143] = new Collation(143, 'UCS2_ROMAN_CI', 'ucs2', 2);\ncharsets[144] = new Collation(144, 'UCS2_PERSIAN_CI', 'ucs2', 2);\ncharsets[145] = new Collation(145, 'UCS2_ESPERANTO_CI', 'ucs2', 2);\ncharsets[146] = new Collation(146, 'UCS2_HUNGARIAN_CI', 'ucs2', 2);\ncharsets[147] = new Collation(147, 'UCS2_SINHALA_CI', 'ucs2', 2);\ncharsets[148] = new Collation(148, 'UCS2_GERMAN2_CI', 'ucs2', 2);\ncharsets[149] = new Collation(149, 'UCS2_CROATIAN_MYSQL561_CI', 'ucs2', 2);\ncharsets[150] = new Collation(150, 'UCS2_UNICODE_520_CI', 'ucs2', 2);\ncharsets[151] = new Collation(151, 'UCS2_VIETNAMESE_CI', 'ucs2', 2);\ncharsets[159] = new Collation(159, 'UCS2_GENERAL_MYSQL500_CI', 'ucs2', 2);\ncharsets[160] = new Collation(160, 'UTF32_UNICODE_CI', 'utf32', 4);\ncharsets[161] = new Collation(161, 'UTF32_ICELANDIC_CI', 'utf32', 4);\ncharsets[162] = new Collation(162, 'UTF32_LATVIAN_CI', 'utf32', 4);\ncharsets[163] = new Collation(163, 'UTF32_ROMANIAN_CI', 'utf32', 4);\ncharsets[164] = new Collation(164, 'UTF32_SLOVENIAN_CI', 'utf32', 4);\ncharsets[165] = new Collation(165, 'UTF32_POLISH_CI', 'utf32', 4);\ncharsets[166] = new Collation(166, 'UTF32_ESTONIAN_CI', 'utf32', 4);\ncharsets[167] = new Collation(167, 'UTF32_SPANISH_CI', 'utf32', 4);\ncharsets[168] = new Collation(168, 'UTF32_SWEDISH_CI', 'utf32', 4);\ncharsets[169] = new Collation(169, 'UTF32_TURKISH_CI', 'utf32', 4);\ncharsets[170] = new Collation(170, 'UTF32_CZECH_CI', 'utf32', 4);\ncharsets[171] = new Collation(171, 'UTF32_DANISH_CI', 'utf32', 4);\ncharsets[172] = new Collation(172, 'UTF32_LITHUANIAN_CI', 'utf32', 4);\ncharsets[173] = new Collation(173, 'UTF32_SLOVAK_CI', 'utf32', 4);\ncharsets[174] = new Collation(174, 'UTF32_SPANISH2_CI', 'utf32', 4);\ncharsets[175] = new Collation(175, 'UTF32_ROMAN_CI', 'utf32', 4);\ncharsets[176] = new Collation(176, 'UTF32_PERSIAN_CI', 'utf32', 4);\ncharsets[177] = new Collation(177, 'UTF32_ESPERANTO_CI', 'utf32', 4);\ncharsets[178] = new Collation(178, 'UTF32_HUNGARIAN_CI', 'utf32', 4);\ncharsets[179] = new Collation(179, 'UTF32_SINHALA_CI', 'utf32', 4);\ncharsets[180] = new Collation(180, 'UTF32_GERMAN2_CI', 'utf32', 4);\ncharsets[181] = new Collation(181, 'UTF32_CROATIAN_MYSQL561_CI', 'utf32', 4);\ncharsets[182] = new Collation(182, 'UTF32_UNICODE_520_CI', 'utf32', 4);\ncharsets[183] = new Collation(183, 'UTF32_VIETNAMESE_CI', 'utf32', 4);\ncharsets[192] = new Collation(192, 'UTF8_UNICODE_CI', 'utf8', 3);\ncharsets[193] = new Collation(193, 'UTF8_ICELANDIC_CI', 'utf8', 3);\ncharsets[194] = new Collation(194, 'UTF8_LATVIAN_CI', 'utf8', 3);\ncharsets[195] = new Collation(195, 'UTF8_ROMANIAN_CI', 'utf8', 3);\ncharsets[196] = new Collation(196, 'UTF8_SLOVENIAN_CI', 'utf8', 3);\ncharsets[197] = new Collation(197, 'UTF8_POLISH_CI', 'utf8', 3);\ncharsets[198] = new Collation(198, 'UTF8_ESTONIAN_CI', 'utf8', 3);\ncharsets[199] = new Collation(199, 'UTF8_SPANISH_CI', 'utf8', 3);\ncharsets[200] = new Collation(200, 'UTF8_SWEDISH_CI', 'utf8', 3);\ncharsets[201] = new Collation(201, 'UTF8_TURKISH_CI', 'utf8', 3);\ncharsets[202] = new Collation(202, 'UTF8_CZECH_CI', 'utf8', 3);\ncharsets[203] = new Collation(203, 'UTF8_DANISH_CI', 'utf8', 3);\ncharsets[204] = new Collation(204, 'UTF8_LITHUANIAN_CI', 'utf8', 3);\ncharsets[205] = new Collation(205, 'UTF8_SLOVAK_CI', 'utf8', 3);\ncharsets[206] = new Collation(206, 'UTF8_SPANISH2_CI', 'utf8', 3);\ncharsets[207] = new Collation(207, 'UTF8_ROMAN_CI', 'utf8', 3);\ncharsets[208] = new Collation(208, 'UTF8_PERSIAN_CI', 'utf8', 3);\ncharsets[209] = new Collation(209, 'UTF8_ESPERANTO_CI', 'utf8', 3);\ncharsets[210] = new Collation(210, 'UTF8_HUNGARIAN_CI', 'utf8', 3);\ncharsets[211] = new Collation(211, 'UTF8_SINHALA_CI', 'utf8', 3);\ncharsets[212] = new Collation(212, 'UTF8_GERMAN2_CI', 'utf8', 3);\ncharsets[213] = new Collation(213, 'UTF8_CROATIAN_MYSQL561_CI', 'utf8', 3);\ncharsets[214] = new Collation(214, 'UTF8_UNICODE_520_CI', 'utf8', 3);\ncharsets[215] = new Collation(215, 'UTF8_VIETNAMESE_CI', 'utf8', 3);\ncharsets[223] = new Collation(223, 'UTF8_GENERAL_MYSQL500_CI', 'utf8', 3);\ncharsets[224] = new Collation(224, 'UTF8MB4_UNICODE_CI', 'utf8', 4);\ncharsets[225] = new Collation(225, 'UTF8MB4_ICELANDIC_CI', 'utf8', 4);\ncharsets[226] = new Collation(226, 'UTF8MB4_LATVIAN_CI', 'utf8', 4);\ncharsets[227] = new Collation(227, 'UTF8MB4_ROMANIAN_CI', 'utf8', 4);\ncharsets[228] = new Collation(228, 'UTF8MB4_SLOVENIAN_CI', 'utf8', 4);\ncharsets[229] = new Collation(229, 'UTF8MB4_POLISH_CI', 'utf8', 4);\ncharsets[230] = new Collation(230, 'UTF8MB4_ESTONIAN_CI', 'utf8', 4);\ncharsets[231] = new Collation(231, 'UTF8MB4_SPANISH_CI', 'utf8', 4);\ncharsets[232] = new Collation(232, 'UTF8MB4_SWEDISH_CI', 'utf8', 4);\ncharsets[233] = new Collation(233, 'UTF8MB4_TURKISH_CI', 'utf8', 4);\ncharsets[234] = new Collation(234, 'UTF8MB4_CZECH_CI', 'utf8', 4);\ncharsets[235] = new Collation(235, 'UTF8MB4_DANISH_CI', 'utf8', 4);\ncharsets[236] = new Collation(236, 'UTF8MB4_LITHUANIAN_CI', 'utf8', 4);\ncharsets[237] = new Collation(237, 'UTF8MB4_SLOVAK_CI', 'utf8', 4);\ncharsets[238] = new Collation(238, 'UTF8MB4_SPANISH2_CI', 'utf8', 4);\ncharsets[239] = new Collation(239, 'UTF8MB4_ROMAN_CI', 'utf8', 4);\ncharsets[240] = new Collation(240, 'UTF8MB4_PERSIAN_CI', 'utf8', 4);\ncharsets[241] = new Collation(241, 'UTF8MB4_ESPERANTO_CI', 'utf8', 4);\ncharsets[242] = new Collation(242, 'UTF8MB4_HUNGARIAN_CI', 'utf8', 4);\ncharsets[243] = new Collation(243, 'UTF8MB4_SINHALA_CI', 'utf8', 4);\ncharsets[244] = new Collation(244, 'UTF8MB4_GERMAN2_CI', 'utf8', 4);\ncharsets[245] = new Collation(245, 'UTF8MB4_CROATIAN_MYSQL561_CI', 'utf8', 4);\ncharsets[246] = new Collation(246, 'UTF8MB4_UNICODE_520_CI', 'utf8', 4);\ncharsets[247] = new Collation(247, 'UTF8MB4_VIETNAMESE_CI', 'utf8', 4);\ncharsets[248] = new Collation(248, 'GB18030_CHINESE_CI', 'gb18030', 4);\ncharsets[249] = new Collation(249, 'GB18030_BIN', 'gb18030', 4);\ncharsets[250] = new Collation(250, 'GB18030_UNICODE_520_CI', 'gb18030', 4);\ncharsets[255] = new Collation(255, 'UTF8MB4_0900_AI_CI', 'utf8', 4);\ncharsets[256] = new Collation(256, 'UTF8MB4_DE_PB_0900_AI_CI', 'utf8', 4);\ncharsets[257] = new Collation(257, 'UTF8MB4_IS_0900_AI_CI', 'utf8', 4);\ncharsets[258] = new Collation(258, 'UTF8MB4_LV_0900_AI_CI', 'utf8', 4);\ncharsets[259] = new Collation(259, 'UTF8MB4_RO_0900_AI_CI', 'utf8', 4);\ncharsets[260] = new Collation(260, 'UTF8MB4_SL_0900_AI_CI', 'utf8', 4);\ncharsets[261] = new Collation(261, 'UTF8MB4_PL_0900_AI_CI', 'utf8', 4);\ncharsets[262] = new Collation(262, 'UTF8MB4_ET_0900_AI_CI', 'utf8', 4);\ncharsets[263] = new Collation(263, 'UTF8MB4_ES_0900_AI_CI', 'utf8', 4);\ncharsets[264] = new Collation(264, 'UTF8MB4_SV_0900_AI_CI', 'utf8', 4);\ncharsets[265] = new Collation(265, 'UTF8MB4_TR_0900_AI_CI', 'utf8', 4);\ncharsets[266] = new Collation(266, 'UTF8MB4_CS_0900_AI_CI', 'utf8', 4);\ncharsets[267] = new Collation(267, 'UTF8MB4_DA_0900_AI_CI', 'utf8', 4);\ncharsets[268] = new Collation(268, 'UTF8MB4_LT_0900_AI_CI', 'utf8', 4);\ncharsets[269] = new Collation(269, 'UTF8MB4_SK_0900_AI_CI', 'utf8', 4);\ncharsets[270] = new Collation(270, 'UTF8MB4_ES_TRAD_0900_AI_CI', 'utf8', 4);\ncharsets[271] = new Collation(271, 'UTF8MB4_LA_0900_AI_CI', 'utf8', 4);\ncharsets[273] = new Collation(273, 'UTF8MB4_EO_0900_AI_CI', 'utf8', 4);\ncharsets[274] = new Collation(274, 'UTF8MB4_HU_0900_AI_CI', 'utf8', 4);\ncharsets[275] = new Collation(275, 'UTF8MB4_HR_0900_AI_CI', 'utf8', 4);\ncharsets[277] = new Collation(277, 'UTF8MB4_VI_0900_AI_CI', 'utf8', 4);\ncharsets[278] = new Collation(278, 'UTF8MB4_0900_AS_CS', 'utf8', 4);\ncharsets[279] = new Collation(279, 'UTF8MB4_DE_PB_0900_AS_CS', 'utf8', 4);\ncharsets[280] = new Collation(280, 'UTF8MB4_IS_0900_AS_CS', 'utf8', 4);\ncharsets[281] = new Collation(281, 'UTF8MB4_LV_0900_AS_CS', 'utf8', 4);\ncharsets[282] = new Collation(282, 'UTF8MB4_RO_0900_AS_CS', 'utf8', 4);\ncharsets[283] = new Collation(283, 'UTF8MB4_SL_0900_AS_CS', 'utf8', 4);\ncharsets[284] = new Collation(284, 'UTF8MB4_PL_0900_AS_CS', 'utf8', 4);\ncharsets[285] = new Collation(285, 'UTF8MB4_ET_0900_AS_CS', 'utf8', 4);\ncharsets[286] = new Collation(286, 'UTF8MB4_ES_0900_AS_CS', 'utf8', 4);\ncharsets[287] = new Collation(287, 'UTF8MB4_SV_0900_AS_CS', 'utf8', 4);\ncharsets[288] = new Collation(288, 'UTF8MB4_TR_0900_AS_CS', 'utf8', 4);\ncharsets[289] = new Collation(289, 'UTF8MB4_CS_0900_AS_CS', 'utf8', 4);\ncharsets[290] = new Collation(290, 'UTF8MB4_DA_0900_AS_CS', 'utf8', 4);\ncharsets[291] = new Collation(291, 'UTF8MB4_LT_0900_AS_CS', 'utf8', 4);\ncharsets[292] = new Collation(292, 'UTF8MB4_SK_0900_AS_CS', 'utf8', 4);\ncharsets[293] = new Collation(293, 'UTF8MB4_ES_TRAD_0900_AS_CS', 'utf8', 4);\ncharsets[294] = new Collation(294, 'UTF8MB4_LA_0900_AS_CS', 'utf8', 4);\ncharsets[296] = new Collation(296, 'UTF8MB4_EO_0900_AS_CS', 'utf8', 4);\ncharsets[297] = new Collation(297, 'UTF8MB4_HU_0900_AS_CS', 'utf8', 4);\ncharsets[298] = new Collation(298, 'UTF8MB4_HR_0900_AS_CS', 'utf8', 4);\ncharsets[300] = new Collation(300, 'UTF8MB4_VI_0900_AS_CS', 'utf8', 4);\ncharsets[303] = new Collation(303, 'UTF8MB4_JA_0900_AS_CS', 'utf8', 4);\ncharsets[304] = new Collation(304, 'UTF8MB4_JA_0900_AS_CS_KS', 'utf8', 4);\ncharsets[305] = new Collation(305, 'UTF8MB4_0900_AS_CI', 'utf8', 4);\ncharsets[306] = new Collation(306, 'UTF8MB4_RU_0900_AI_CI', 'utf8', 4);\ncharsets[307] = new Collation(307, 'UTF8MB4_RU_0900_AS_CS', 'utf8', 4);\ncharsets[308] = new Collation(308, 'UTF8MB4_ZH_0900_AS_CS', 'utf8', 4);\ncharsets[309] = new Collation(309, 'UTF8MB4_0900_BIN', 'utf8', 4);\ncharsets[576] = new Collation(576, 'UTF8_CROATIAN_CI', 'utf8', 3);\ncharsets[577] = new Collation(577, 'UTF8_MYANMAR_CI', 'utf8', 3);\ncharsets[578] = new Collation(578, 'UTF8_THAI_520_W2', 'utf8', 3);\ncharsets[608] = new Collation(608, 'UTF8MB4_CROATIAN_CI', 'utf8', 4);\ncharsets[609] = new Collation(609, 'UTF8MB4_MYANMAR_CI', 'utf8', 4);\ncharsets[610] = new Collation(610, 'UTF8MB4_THAI_520_W2', 'utf8', 4);\ncharsets[640] = new Collation(640, 'UCS2_CROATIAN_CI', 'ucs2', 2);\ncharsets[641] = new Collation(641, 'UCS2_MYANMAR_CI', 'ucs2', 2);\ncharsets[642] = new Collation(642, 'UCS2_THAI_520_W2', 'ucs2', 2);\ncharsets[672] = new Collation(672, 'UTF16_CROATIAN_CI', 'utf16', 4);\ncharsets[673] = new Collation(673, 'UTF16_MYANMAR_CI', 'utf16', 4);\ncharsets[674] = new Collation(674, 'UTF16_THAI_520_W2', 'utf16', 4);\ncharsets[736] = new Collation(736, 'UTF32_CROATIAN_CI', 'utf32', 4);\ncharsets[737] = new Collation(737, 'UTF32_MYANMAR_CI', 'utf32', 4);\ncharsets[738] = new Collation(738, 'UTF32_THAI_520_W2', 'utf32', 4);\ncharsets[1025] = new Collation(1025, 'BIG5_CHINESE_NOPAD_CI', 'big5', 2);\ncharsets[1027] = new Collation(1027, 'DEC8_SWEDISH_NOPAD_CI', 'dec8', 1);\ncharsets[1028] = new Collation(1028, 'CP850_GENERAL_NOPAD_CI', 'cp850', 1);\ncharsets[1030] = new Collation(1030, 'HP8_ENGLISH_NOPAD_CI', 'hp8', 1);\ncharsets[1031] = new Collation(1031, 'KOI8R_GENERAL_NOPAD_CI', 'koi8r', 1);\ncharsets[1032] = new Collation(1032, 'LATIN1_SWEDISH_NOPAD_CI', 'latin1', 1);\ncharsets[1033] = new Collation(1033, 'LATIN2_GENERAL_NOPAD_CI', 'latin2', 1);\ncharsets[1034] = new Collation(1034, 'SWE7_SWEDISH_NOPAD_CI', 'swe7', 1);\ncharsets[1035] = new Collation(1035, 'ASCII_GENERAL_NOPAD_CI', 'ascii', 1);\ncharsets[1036] = new Collation(1036, 'UJIS_JAPANESE_NOPAD_CI', 'ujis', 3);\ncharsets[1037] = new Collation(1037, 'SJIS_JAPANESE_NOPAD_CI', 'sjis', 2);\ncharsets[1040] = new Collation(1040, 'HEBREW_GENERAL_NOPAD_CI', 'hebrew', 1);\ncharsets[1042] = new Collation(1042, 'TIS620_THAI_NOPAD_CI', 'tis620', 1);\ncharsets[1043] = new Collation(1043, 'EUCKR_KOREAN_NOPAD_CI', 'euckr', 2);\ncharsets[1046] = new Collation(1046, 'KOI8U_GENERAL_NOPAD_CI', 'koi8u', 1);\ncharsets[1048] = new Collation(1048, 'GB2312_CHINESE_NOPAD_CI', 'gb2312', 2);\ncharsets[1049] = new Collation(1049, 'GREEK_GENERAL_NOPAD_CI', 'greek', 1);\ncharsets[1050] = new Collation(1050, 'CP1250_GENERAL_NOPAD_CI', 'cp1250', 1);\ncharsets[1052] = new Collation(1052, 'GBK_CHINESE_NOPAD_CI', 'gbk', 2);\ncharsets[1054] = new Collation(1054, 'LATIN5_TURKISH_NOPAD_CI', 'latin5', 1);\ncharsets[1056] = new Collation(1056, 'ARMSCII8_GENERAL_NOPAD_CI', 'armscii8', 1);\ncharsets[1057] = new Collation(1057, 'UTF8_GENERAL_NOPAD_CI', 'utf8', 3);\ncharsets[1059] = new Collation(1059, 'UCS2_GENERAL_NOPAD_CI', 'ucs2', 2);\ncharsets[1060] = new Collation(1060, 'CP866_GENERAL_NOPAD_CI', 'cp866', 1);\ncharsets[1061] = new Collation(1061, 'KEYBCS2_GENERAL_NOPAD_CI', 'keybcs2', 1);\ncharsets[1062] = new Collation(1062, 'MACCE_GENERAL_NOPAD_CI', 'macce', 1);\ncharsets[1063] = new Collation(1063, 'MACROMAN_GENERAL_NOPAD_CI', 'macroman', 1);\ncharsets[1064] = new Collation(1064, 'CP852_GENERAL_NOPAD_CI', 'cp852', 1);\ncharsets[1065] = new Collation(1065, 'LATIN7_GENERAL_NOPAD_CI', 'latin7', 1);\ncharsets[1067] = new Collation(1067, 'MACCE_NOPAD_BIN', 'macce', 1);\ncharsets[1069] = new Collation(1069, 'UTF8MB4_GENERAL_NOPAD_CI', 'utf8', 4);\ncharsets[1070] = new Collation(1070, 'UTF8MB4_NOPAD_BIN', 'utf8', 4);\ncharsets[1071] = new Collation(1071, 'LATIN1_NOPAD_BIN', 'latin1', 1);\ncharsets[1074] = new Collation(1074, 'CP1251_NOPAD_BIN', 'cp1251', 1);\ncharsets[1075] = new Collation(1075, 'CP1251_GENERAL_NOPAD_CI', 'cp1251', 1);\ncharsets[1077] = new Collation(1077, 'MACROMAN_NOPAD_BIN', 'macroman', 1);\ncharsets[1078] = new Collation(1078, 'UTF16_GENERAL_NOPAD_CI', 'utf16', 4);\ncharsets[1079] = new Collation(1079, 'UTF16_NOPAD_BIN', 'utf16', 4);\ncharsets[1080] = new Collation(1080, 'UTF16LE_GENERAL_NOPAD_CI', 'utf16le', 4);\ncharsets[1081] = new Collation(1081, 'CP1256_GENERAL_NOPAD_CI', 'cp1256', 1);\ncharsets[1082] = new Collation(1082, 'CP1257_NOPAD_BIN', 'cp1257', 1);\ncharsets[1083] = new Collation(1083, 'CP1257_GENERAL_NOPAD_CI', 'cp1257', 1);\ncharsets[1084] = new Collation(1084, 'UTF32_GENERAL_NOPAD_CI', 'utf32', 4);\ncharsets[1085] = new Collation(1085, 'UTF32_NOPAD_BIN', 'utf32', 4);\ncharsets[1086] = new Collation(1086, 'UTF16LE_NOPAD_BIN', 'utf16le', 4);\ncharsets[1088] = new Collation(1088, 'ARMSCII8_NOPAD_BIN', 'armscii8', 1);\ncharsets[1089] = new Collation(1089, 'ASCII_NOPAD_BIN', 'ascii', 1);\ncharsets[1090] = new Collation(1090, 'CP1250_NOPAD_BIN', 'cp1250', 1);\ncharsets[1091] = new Collation(1091, 'CP1256_NOPAD_BIN', 'cp1256', 1);\ncharsets[1092] = new Collation(1092, 'CP866_NOPAD_BIN', 'cp866', 1);\ncharsets[1093] = new Collation(1093, 'DEC8_NOPAD_BIN', 'dec8', 1);\ncharsets[1094] = new Collation(1094, 'GREEK_NOPAD_BIN', 'greek', 1);\ncharsets[1095] = new Collation(1095, 'HEBREW_NOPAD_BIN', 'hebrew', 1);\ncharsets[1096] = new Collation(1096, 'HP8_NOPAD_BIN', 'hp8', 1);\ncharsets[1097] = new Collation(1097, 'KEYBCS2_NOPAD_BIN', 'keybcs2', 1);\ncharsets[1098] = new Collation(1098, 'KOI8R_NOPAD_BIN', 'koi8r', 1);\ncharsets[1099] = new Collation(1099, 'KOI8U_NOPAD_BIN', 'koi8u', 1);\ncharsets[1101] = new Collation(1101, 'LATIN2_NOPAD_BIN', 'latin2', 1);\ncharsets[1102] = new Collation(1102, 'LATIN5_NOPAD_BIN', 'latin5', 1);\ncharsets[1103] = new Collation(1103, 'LATIN7_NOPAD_BIN', 'latin7', 1);\ncharsets[1104] = new Collation(1104, 'CP850_NOPAD_BIN', 'cp850', 1);\ncharsets[1105] = new Collation(1105, 'CP852_NOPAD_BIN', 'cp852', 1);\ncharsets[1106] = new Collation(1106, 'SWE7_NOPAD_BIN', 'swe7', 1);\ncharsets[1107] = new Collation(1107, 'UTF8_NOPAD_BIN', 'utf8', 3);\ncharsets[1108] = new Collation(1108, 'BIG5_NOPAD_BIN', 'big5', 2);\ncharsets[1109] = new Collation(1109, 'EUCKR_NOPAD_BIN', 'euckr', 2);\ncharsets[1110] = new Collation(1110, 'GB2312_NOPAD_BIN', 'gb2312', 2);\ncharsets[1111] = new Collation(1111, 'GBK_NOPAD_BIN', 'gbk', 2);\ncharsets[1112] = new Collation(1112, 'SJIS_NOPAD_BIN', 'sjis', 2);\ncharsets[1113] = new Collation(1113, 'TIS620_NOPAD_BIN', 'tis620', 1);\ncharsets[1114] = new Collation(1114, 'UCS2_NOPAD_BIN', 'ucs2', 2);\ncharsets[1115] = new Collation(1115, 'UJIS_NOPAD_BIN', 'ujis', 3);\ncharsets[1116] = new Collation(1116, 'GEOSTD8_GENERAL_NOPAD_CI', 'geostd8', 1);\ncharsets[1117] = new Collation(1117, 'GEOSTD8_NOPAD_BIN', 'geostd8', 1);\ncharsets[1119] = new Collation(1119, 'CP932_JAPANESE_NOPAD_CI', 'cp932', 2);\ncharsets[1120] = new Collation(1120, 'CP932_NOPAD_BIN', 'cp932', 2);\ncharsets[1121] = new Collation(1121, 'EUCJPMS_JAPANESE_NOPAD_CI', 'eucjpms', 3);\ncharsets[1122] = new Collation(1122, 'EUCJPMS_NOPAD_BIN', 'eucjpms', 3);\ncharsets[1125] = new Collation(1125, 'UTF16_UNICODE_NOPAD_CI', 'utf16', 4);\ncharsets[1147] = new Collation(1147, 'UTF16_UNICODE_520_NOPAD_CI', 'utf16', 4);\ncharsets[1152] = new Collation(1152, 'UCS2_UNICODE_NOPAD_CI', 'ucs2', 2);\ncharsets[1174] = new Collation(1174, 'UCS2_UNICODE_520_NOPAD_CI', 'ucs2', 2);\ncharsets[1184] = new Collation(1184, 'UTF32_UNICODE_NOPAD_CI', 'utf32', 4);\ncharsets[1206] = new Collation(1206, 'UTF32_UNICODE_520_NOPAD_CI', 'utf32', 4);\ncharsets[1216] = new Collation(1216, 'UTF8_UNICODE_NOPAD_CI', 'utf8', 3);\ncharsets[1238] = new Collation(1238, 'UTF8_UNICODE_520_NOPAD_CI', 'utf8', 3);\ncharsets[1248] = new Collation(1248, 'UTF8MB4_UNICODE_NOPAD_CI', 'utf8', 4);\ncharsets[1270] = new Collation(1270, 'UTF8MB4_UNICODE_520_NOPAD_CI', 'utf8', 4);\n\nfor (let i = 0; i < charsets.length; i++) {\n  let collation = charsets[i];\n  if (collation) {\n    Collation.prototype[collation.name] = collation;\n  }\n}\n\n/**\n * Map charset to default collation\n *\n * created with query:\n *  SELECT CONCAT(' defaultCharsets[\\'',  co.character_set_name , '\\'] = charsets[', CAST(co.ID as char), '];')\n *  FROM information_schema.COLLATIONS co WHERE co.IS_DEFAULT = 'Yes' ORDER BY co.ID ASC;\n */\ndefaultCharsets['big5'] = charsets[1];\ndefaultCharsets['dec8'] = charsets[3];\ndefaultCharsets['cp850'] = charsets[4];\ndefaultCharsets['hp8'] = charsets[6];\ndefaultCharsets['koi8r'] = charsets[7];\ndefaultCharsets['latin1'] = charsets[8];\ndefaultCharsets['latin2'] = charsets[9];\ndefaultCharsets['swe7'] = charsets[10];\ndefaultCharsets['ascii'] = charsets[11];\ndefaultCharsets['ujis'] = charsets[12];\ndefaultCharsets['sjis'] = charsets[13];\ndefaultCharsets['hebrew'] = charsets[16];\ndefaultCharsets['tis620'] = charsets[18];\ndefaultCharsets['euckr'] = charsets[19];\ndefaultCharsets['koi8u'] = charsets[22];\ndefaultCharsets['gb2312'] = charsets[24];\ndefaultCharsets['greek'] = charsets[25];\ndefaultCharsets['cp1250'] = charsets[26];\ndefaultCharsets['gbk'] = charsets[28];\ndefaultCharsets['latin5'] = charsets[30];\ndefaultCharsets['armscii8'] = charsets[32];\ndefaultCharsets['utf8'] = charsets[33];\ndefaultCharsets['ucs2'] = charsets[35];\ndefaultCharsets['cp866'] = charsets[36];\ndefaultCharsets['keybcs2'] = charsets[37];\ndefaultCharsets['macce'] = charsets[38];\ndefaultCharsets['macroman'] = charsets[39];\ndefaultCharsets['cp852'] = charsets[40];\ndefaultCharsets['latin7'] = charsets[41];\ndefaultCharsets['utf8mb4'] = charsets[45];\ndefaultCharsets['cp1251'] = charsets[51];\ndefaultCharsets['utf16'] = charsets[54];\ndefaultCharsets['utf16le'] = charsets[56];\ndefaultCharsets['cp1256'] = charsets[57];\ndefaultCharsets['cp1257'] = charsets[59];\ndefaultCharsets['utf32'] = charsets[60];\ndefaultCharsets['binary'] = charsets[63];\ndefaultCharsets['geostd8'] = charsets[92];\ndefaultCharsets['cp932'] = charsets[95];\ndefaultCharsets['eucjpms'] = charsets[97];\ndefaultCharsets['gb18030'] = charsets[248];\n\nmodule.exports = Collation;\n", "'use strict';\n\nconst moment = require('moment-timezone');\nconst QUOTE = 0x27;\n\nclass TextEncoder {\n  constructor(opts) {\n    this.getDateQuote = opts.tz\n      ? opts.tz === 'Etc/UTC'\n        ? TextEncoder.getUtcDate\n        : TextEncoder.getTimezoneDate\n      : TextEncoder.getLocalDate;\n  }\n\n  /**\n   * Write (and escape) current parameter value to output writer\n   *\n   * @param out     output writer\n   * @param value   current parameter\n   * @param opts    connection options\n   * @param info    connection information\n   */\n  writeParam(out, value, opts, info) {\n    switch (typeof value) {\n      case 'boolean':\n        out.writeStringAscii(value ? 'true' : 'false');\n        break;\n      case 'bigint':\n      case 'number':\n        out.writeStringAscii('' + value);\n        break;\n      case 'object':\n        if (value === null) {\n          out.writeStringAscii('NULL');\n        } else if (Object.prototype.toString.call(value) === '[object Date]') {\n          out.writeStringAscii(this.getDateQuote(value, opts));\n        } else if (Buffer.isBuffer(value)) {\n          out.writeStringAscii(\"_BINARY '\");\n          out.writeBufferEscape(value);\n          out.writeInt8(QUOTE);\n        } else if (typeof value.toSqlString === 'function') {\n          out.writeStringEscapeQuote(String(value.toSqlString()));\n        } else if (Array.isArray(value)) {\n          if (opts.arrayParenthesis) {\n            out.writeStringAscii('(');\n          }\n          for (let i = 0; i < value.length; i++) {\n            if (i !== 0) out.writeStringAscii(',');\n            this.writeParam(out, value[i], opts, info);\n          }\n          if (opts.arrayParenthesis) {\n            out.writeStringAscii(')');\n          }\n        } else {\n          if (\n            value.type != null &&\n            [\n              'Point',\n              'LineString',\n              'Polygon',\n              'MultiPoint',\n              'MultiLineString',\n              'MultiPolygon',\n              'GeometryCollection'\n            ].includes(value.type)\n          ) {\n            //GeoJSON format.\n            let prefix =\n              (info.isMariaDB() && info.hasMinVersion(10, 1, 4)) || (!info.isMariaDB() && info.hasMinVersion(5, 7, 6))\n                ? 'ST_'\n                : '';\n            switch (value.type) {\n              case 'Point':\n                out.writeStringAscii(\n                  prefix + \"PointFromText('POINT(\" + TextEncoder.geoPointToString(value.coordinates) + \")')\"\n                );\n                break;\n\n              case 'LineString':\n                out.writeStringAscii(\n                  prefix + \"LineFromText('LINESTRING(\" + TextEncoder.geoArrayPointToString(value.coordinates) + \")')\"\n                );\n                break;\n\n              case 'Polygon':\n                out.writeStringAscii(\n                  prefix +\n                    \"PolygonFromText('POLYGON(\" +\n                    TextEncoder.geoMultiArrayPointToString(value.coordinates) +\n                    \")')\"\n                );\n                break;\n\n              case 'MultiPoint':\n                out.writeStringAscii(\n                  prefix +\n                    \"MULTIPOINTFROMTEXT('MULTIPOINT(\" +\n                    TextEncoder.geoArrayPointToString(value.coordinates) +\n                    \")')\"\n                );\n                break;\n\n              case 'MultiLineString':\n                out.writeStringAscii(\n                  prefix +\n                    \"MLineFromText('MULTILINESTRING(\" +\n                    TextEncoder.geoMultiArrayPointToString(value.coordinates) +\n                    \")')\"\n                );\n                break;\n\n              case 'MultiPolygon':\n                out.writeStringAscii(\n                  prefix +\n                    \"MPolyFromText('MULTIPOLYGON(\" +\n                    TextEncoder.geoMultiPolygonToString(value.coordinates) +\n                    \")')\"\n                );\n                break;\n\n              case 'GeometryCollection':\n                out.writeStringAscii(\n                  prefix +\n                    \"GeomCollFromText('GEOMETRYCOLLECTION(\" +\n                    TextEncoder.geometricCollectionToString(value.geometries) +\n                    \")')\"\n                );\n                break;\n            }\n          } else {\n            if (opts.permitSetMultiParamEntries) {\n              let first = true;\n              for (let key in value) {\n                const val = value[key];\n                if (typeof val === 'function') continue;\n                if (first) {\n                  first = false;\n                } else {\n                  out.writeStringAscii(',');\n                }\n                out.writeString('`' + key + '`');\n                out.writeStringAscii('=');\n                this.writeParam(out, val, opts, info);\n              }\n              if (first) out.writeStringEscapeQuote(JSON.stringify(value));\n            } else {\n              out.writeStringEscapeQuote(JSON.stringify(value));\n            }\n          }\n        }\n        break;\n      default:\n        out.writeStringEscapeQuote(value);\n    }\n  }\n\n  static geometricCollectionToString(geo) {\n    if (!geo) return '';\n    let st = '';\n    for (let i = 0; i < geo.length; i++) {\n      //GeoJSON format.\n      st += i !== 0 ? ',' : '';\n      switch (geo[i].type) {\n        case 'Point':\n          st += `POINT(${TextEncoder.geoPointToString(geo[i].coordinates)})`;\n          break;\n\n        case 'LineString':\n          st += `LINESTRING(${TextEncoder.geoArrayPointToString(geo[i].coordinates)})`;\n          break;\n\n        case 'Polygon':\n          st += `POLYGON(${TextEncoder.geoMultiArrayPointToString(geo[i].coordinates)})`;\n          break;\n\n        case 'MultiPoint':\n          st += `MULTIPOINT(${TextEncoder.geoArrayPointToString(geo[i].coordinates)})`;\n          break;\n\n        case 'MultiLineString':\n          st += `MULTILINESTRING(${TextEncoder.geoMultiArrayPointToString(geo[i].coordinates)})`;\n          break;\n\n        case 'MultiPolygon':\n          st += `MULTIPOLYGON(${TextEncoder.geoMultiPolygonToString(geo[i].coordinates)})`;\n          break;\n      }\n    }\n    return st;\n  }\n\n  static geoMultiPolygonToString(coords) {\n    if (!coords) return '';\n    let st = '';\n    for (let i = 0; i < coords.length; i++) {\n      st += (i !== 0 ? ',(' : '(') + TextEncoder.geoMultiArrayPointToString(coords[i]) + ')';\n    }\n    return st;\n  }\n\n  static geoMultiArrayPointToString(coords) {\n    if (!coords) return '';\n    let st = '';\n    for (let i = 0; i < coords.length; i++) {\n      st += (i !== 0 ? ',(' : '(') + TextEncoder.geoArrayPointToString(coords[i]) + ')';\n    }\n    return st;\n  }\n\n  static geoArrayPointToString(coords) {\n    if (!coords) return '';\n    let st = '';\n    for (let i = 0; i < coords.length; i++) {\n      st += (i !== 0 ? ',' : '') + TextEncoder.geoPointToString(coords[i]);\n    }\n    return st;\n  }\n\n  static geoPointToString(coords) {\n    if (!coords) return '';\n    return (isNaN(coords[0]) ? '' : coords[0]) + ' ' + (isNaN(coords[1]) ? '' : coords[1]);\n  }\n\n  static getLocalDate(date, opts) {\n    const year = date.getFullYear();\n    const mon = date.getMonth() + 1;\n    const day = date.getDate();\n    const hour = date.getHours();\n    const min = date.getMinutes();\n    const sec = date.getSeconds();\n    const ms = date.getMilliseconds();\n    return TextEncoder.getDatePartQuote(year, mon, day, hour, min, sec, ms);\n  }\n\n  static getUtcDate(date, opts) {\n    const year = date.getUTCFullYear();\n    const mon = date.getUTCMonth() + 1;\n    const day = date.getUTCDate();\n    const hour = date.getUTCHours();\n    const min = date.getUTCMinutes();\n    const sec = date.getUTCSeconds();\n    const ms = date.getUTCMilliseconds();\n    return TextEncoder.getDatePartQuote(year, mon, day, hour, min, sec, ms);\n  }\n\n  static getDatePartQuote(year, mon, day, hour, min, sec, ms) {\n    //return 'YYYY-MM-DD HH:MM:SS' datetime format\n    //see https://mariadb.com/kb/en/library/datetime/\n    return (\n      \"'\" +\n      (year > 999 ? year : year > 99 ? '0' + year : year > 9 ? '00' + year : '000' + year) +\n      '-' +\n      (mon < 10 ? '0' : '') +\n      mon +\n      '-' +\n      (day < 10 ? '0' : '') +\n      day +\n      ' ' +\n      (hour < 10 ? '0' : '') +\n      hour +\n      ':' +\n      (min < 10 ? '0' : '') +\n      min +\n      ':' +\n      (sec < 10 ? '0' : '') +\n      sec +\n      '.' +\n      (ms > 99 ? ms : ms > 9 ? '0' + ms : '00' + ms) +\n      \"'\"\n    );\n  }\n\n  static getTimezoneDate(date, opts) {\n    if (date.getMilliseconds() !== 0) {\n      return moment.tz(date, opts.tz).format(\"'YYYY-MM-DD HH:mm:ss.SSS'\");\n    }\n    return moment.tz(date, opts.tz).format(\"'YYYY-MM-DD HH:mm:ss'\");\n  }\n}\n\nmodule.exports = TextEncoder;\n", "'use strict';\nconst hexArray = '0123456789ABCDEF'.split('');\nconst Errors = require('../misc/errors');\nconst Iconv = require('iconv-lite');\nconst TextEncoder = require('../cmd/encoder/text-encoder');\n\n/**\n * Write bytes/hexadecimal value of a byte array to a string.\n * String output example :\n * 38 00 00 00 03 63 72 65  61 74 65 20 74 61 62 6C     8....create tabl\n * 65 20 42 6C 6F 62 54 65  73 74 63 6C 6F 62 74 65     e BlobTestclobte\n * 73 74 32 20 28 73 74 72  6D 20 74 65 78 74 29 20     st2 (strm text)\n * 43 48 41 52 53 45 54 20  75 74 66 38                 CHARSET utf8\n */\nmodule.exports.log = function (opts, buf, off, end, header) {\n  let out = [];\n  if (!buf) return '';\n  if (off === undefined || off === null) off = 0;\n  if (end === undefined || end === null) end = buf.length;\n  let asciiValue = new Array(16);\n  asciiValue[8] = ' ';\n\n  let useHeader = header !== undefined;\n  let offset = off || 0;\n  const maxLgh = Math.min(useHeader ? opts.debugLen - header.length : opts.debugLen, end - offset);\n  const isLimited = end - offset > maxLgh;\n  let byteValue;\n  let posHexa = 0;\n  let pos = 0;\n\n  out.push(\n    '+--------------------------------------------------+\\n' +\n      '|  0  1  2  3  4  5  6  7   8  9  a  b  c  d  e  f |\\n' +\n      '+--------------------------------------------------+------------------+\\n'\n  );\n\n  if (useHeader) {\n    while (pos < header.length) {\n      if (posHexa === 0) out.push('| ');\n      byteValue = header[pos++] & 0xff;\n      out.push(hexArray[byteValue >>> 4], hexArray[byteValue & 0x0f], ' ');\n      asciiValue[posHexa++] = byteValue > 31 && byteValue < 127 ? String.fromCharCode(byteValue) : '.';\n      if (posHexa === 8) out.push(' ');\n    }\n  }\n\n  pos = offset;\n  while (pos < maxLgh + offset) {\n    if (posHexa === 0) out.push('| ');\n    byteValue = buf[pos] & 0xff;\n\n    out.push(hexArray[byteValue >>> 4], hexArray[byteValue & 0x0f], ' ');\n\n    asciiValue[posHexa++] = byteValue > 31 && byteValue < 127 ? String.fromCharCode(byteValue) : '.';\n\n    if (posHexa === 8) out.push(' ');\n    if (posHexa === 16) {\n      out.push('| ', asciiValue.join(''), ' |\\n');\n      posHexa = 0;\n    }\n    pos++;\n  }\n\n  let remaining = posHexa;\n  if (remaining > 0) {\n    if (remaining < 8) {\n      for (; remaining < 8; remaining++) {\n        out.push('   ');\n        asciiValue[posHexa++] = ' ';\n      }\n      out.push(' ');\n    }\n\n    for (; remaining < 16; remaining++) {\n      out.push('   ');\n      asciiValue[posHexa++] = ' ';\n    }\n\n    out.push('| ', asciiValue.join(''), isLimited ? ' |...\\n' : ' |\\n');\n  } else if (isLimited) {\n    out[out.length - 1] = ' |...\\n';\n  }\n  out.push('+--------------------------------------------------+------------------+\\n');\n  return out.join('');\n};\n\nmodule.exports.escapeId = (opts, info, value) => {\n  if (!value || value === '') {\n    throw Errors.createError('Cannot escape empty ID value', Errors.ER_NULL_ESCAPEID, info, '0A000');\n  }\n  if (value.includes('\\u0000')) {\n    throw Errors.createError(\n      'Cannot escape ID with null character (u0000)',\n      Errors.ER_NULL_CHAR_ESCAPEID,\n      info,\n      '0A000'\n    );\n  }\n\n  // always return escaped value, event when there is no special characters\n  // to permit working with reserved words\n  if (value.match(/^`.+`$/g)) {\n    // already escaped\n    return value;\n  }\n  return '`' + value.replace(/`/g, '``') + '`';\n};\n\nconst escapeParameters = (opts, info, value) => {\n  if (value === undefined || value === null) return 'NULL';\n\n  switch (typeof value) {\n    case 'boolean':\n      return value ? 'true' : 'false';\n    case 'bigint':\n    case 'number':\n      return '' + value;\n    case 'object':\n      if (Object.prototype.toString.call(value) === '[object Date]') {\n        return opts.tz\n          ? opts.tz === 'Etc/UTC'\n            ? TextEncoder.getUtcDate(value, opts)\n            : TextEncoder.getTimezoneDate(value, opts)\n          : TextEncoder.getLocalDate(value, opts);\n      } else if (Buffer.isBuffer(value)) {\n        let stValue;\n        if (Buffer.isEncoding(info.collation.charset)) {\n          stValue = value.toString(info.collation.charset, 0, value.length);\n        } else {\n          stValue = Iconv.decode(value, info.collation.charset);\n        }\n        return \"_binary'\" + escapeString(stValue) + \"'\";\n      } else if (typeof value.toSqlString === 'function') {\n        return \"'\" + escapeString(String(value.toSqlString())) + \"'\";\n      } else if (Array.isArray(value)) {\n        let out = opts.arrayParenthesis ? '(' : '';\n        for (let i = 0; i < value.length; i++) {\n          if (i !== 0) out += ',';\n          out += escapeParameters(opts, info, value[i]);\n        }\n        if (opts.arrayParenthesis) out += ')';\n        return out;\n      } else {\n        if (\n          value.type != null &&\n          [\n            'Point',\n            'LineString',\n            'Polygon',\n            'MultiPoint',\n            'MultiLineString',\n            'MultiPolygon',\n            'GeometryCollection'\n          ].includes(value.type)\n        ) {\n          //GeoJSON format.\n          let prefix =\n            info &&\n            ((info.isMariaDB() && info.hasMinVersion(10, 1, 4)) || (!info.isMariaDB() && info.hasMinVersion(5, 7, 6)))\n              ? 'ST_'\n              : '';\n          switch (value.type) {\n            case 'Point':\n              return prefix + \"PointFromText('POINT(\" + TextEncoder.geoPointToString(value.coordinates) + \")')\";\n\n            case 'LineString':\n              return (\n                prefix + \"LineFromText('LINESTRING(\" + TextEncoder.geoArrayPointToString(value.coordinates) + \")')\"\n              );\n\n            case 'Polygon':\n              return (\n                prefix + \"PolygonFromText('POLYGON(\" + TextEncoder.geoMultiArrayPointToString(value.coordinates) + \")')\"\n              );\n\n            case 'MultiPoint':\n              return (\n                prefix +\n                \"MULTIPOINTFROMTEXT('MULTIPOINT(\" +\n                TextEncoder.geoArrayPointToString(value.coordinates) +\n                \")')\"\n              );\n\n            case 'MultiLineString':\n              return (\n                prefix +\n                \"MLineFromText('MULTILINESTRING(\" +\n                TextEncoder.geoMultiArrayPointToString(value.coordinates) +\n                \")')\"\n              );\n\n            case 'MultiPolygon':\n              return (\n                prefix + \"MPolyFromText('MULTIPOLYGON(\" + TextEncoder.geoMultiPolygonToString(value.coordinates) + \")')\"\n              );\n\n            case 'GeometryCollection':\n              return (\n                prefix +\n                \"GeomCollFromText('GEOMETRYCOLLECTION(\" +\n                TextEncoder.geometricCollectionToString(value.geometries) +\n                \")')\"\n              );\n          }\n        } else {\n          if (opts.permitSetMultiParamEntries) {\n            let out = '';\n            let first = true;\n            for (let key in value) {\n              const val = value[key];\n              if (typeof val === 'function') continue;\n              if (first) {\n                first = false;\n              } else {\n                out += ',';\n              }\n              out += '`' + key + '`=';\n              out += this.escape(opts, info, val);\n            }\n            if (out === '') return \"'\" + escapeString(JSON.stringify(value)) + \"'\";\n            return out;\n          } else {\n            return \"'\" + escapeString(JSON.stringify(value)) + \"'\";\n          }\n        }\n      }\n    default:\n      return \"'\" + escapeString(value) + \"'\";\n  }\n};\n\n// see https://mariadb.com/kb/en/library/string-literals/\nconst LITTERAL_ESCAPE = {\n  '\\u0000': '\\\\0',\n  \"'\": \"\\\\'\",\n  '\"': '\\\\\"',\n  '\\b': '\\\\b',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  '\\u001A': '\\\\Z',\n  '\\\\': '\\\\\\\\'\n};\n\nconst escapeString = (val) => {\n  const pattern = /[\\u0000'\"\\b\\n\\r\\t\\u001A\\\\]/g;\n\n  let offset = 0;\n  let escaped = '';\n  let match;\n\n  while ((match = pattern.exec(val))) {\n    escaped += val.substring(offset, match.index);\n    escaped += LITTERAL_ESCAPE[match[0]];\n    offset = pattern.lastIndex;\n  }\n\n  if (offset === 0) {\n    return val;\n  }\n\n  if (offset < val.length) {\n    escaped += val.substring(offset);\n  }\n\n  return escaped;\n};\n\nmodule.exports.escape = escapeParameters;\n", "'use strict';\n\nconst PacketNodeEncoded = require('./packet-node-encoded');\nconst PacketIconvEncoded = require('./packet-node-iconv');\nconst Collations = require('../const/collations');\nconst Utils = require('../misc/utils');\n\n/**\n * MySQL packet parser\n * see : https://mariadb.com/kb/en/library/0-packet/\n */\nclass PacketInputStream {\n  constructor(unexpectedPacket, receiveQueue, out, opts, info) {\n    this.unexpectedPacket = unexpectedPacket;\n    this.opts = opts;\n    this.receiveQueue = receiveQueue;\n    this.info = info;\n    this.out = out;\n\n    //in case packet is not complete\n    this.header = Buffer.allocUnsafe(4);\n    this.headerLen = 0;\n    this.packetLen = null;\n    this.remainingLen = null;\n\n    this.parts = null;\n    this.partsTotalLen = 0;\n    this.changeEncoding(this.opts.collation ? this.opts.collation : Collations.fromIndex(224));\n    this.changeDebug(this.opts.debug);\n    this.opts.on('collation', this.changeEncoding.bind(this));\n    this.opts.on('debug', this.changeDebug.bind(this));\n  }\n\n  changeEncoding(collation) {\n    this.encoding = collation.charset;\n    this.packet = Buffer.isEncoding(this.encoding)\n      ? new PacketNodeEncoded(this.encoding)\n      : new PacketIconvEncoded(this.encoding);\n  }\n\n  changeDebug(debug) {\n    this.receivePacket = debug ? this.receivePacketDebug : this.receivePacketBasic;\n  }\n\n  receivePacketDebug(packet) {\n    let cmd = this.currentCmd();\n    if (packet) {\n      this.opts.logger.network(\n        `<== conn:${this.info.threadId ? this.info.threadId : -1} ${\n          cmd\n            ? cmd.onPacketReceive\n              ? cmd.constructor.name + '.' + cmd.onPacketReceive.name\n              : cmd.constructor.name\n            : 'no command'\n        } (${packet.pos},${packet.end})\\n${Utils.log(this.opts, packet.buf, packet.pos, packet.end, this.header)}`\n      );\n    }\n\n    if (!cmd) {\n      this.unexpectedPacket(packet);\n      return;\n    }\n\n    cmd.sequenceNo = this.header[3];\n    cmd.onPacketReceive(packet, this.out, this.opts, this.info);\n    if (!cmd.onPacketReceive) this.receiveQueue.shift();\n  }\n\n  receivePacketBasic(packet) {\n    let cmd = this.currentCmd();\n    if (!cmd) {\n      this.unexpectedPacket(packet);\n      return;\n    }\n    cmd.sequenceNo = this.header[3];\n    cmd.onPacketReceive(packet, this.out, this.opts, this.info);\n    if (!cmd.onPacketReceive) this.receiveQueue.shift();\n  }\n\n  resetHeader() {\n    this.remainingLen = null;\n    this.headerLen = 0;\n  }\n\n  currentCmd() {\n    let cmd;\n    while ((cmd = this.receiveQueue.peek())) {\n      if (cmd.onPacketReceive) return cmd;\n      this.receiveQueue.shift();\n    }\n    return null;\n  }\n\n  onData(chunk) {\n    let pos = 0;\n    let length;\n    const chunkLen = chunk.length;\n\n    do {\n      //read header\n      if (this.remainingLen) {\n        length = this.remainingLen;\n      } else if (this.headerLen === 0 && chunkLen - pos >= 4) {\n        this.header[0] = chunk[pos];\n        this.header[1] = chunk[pos + 1];\n        this.header[2] = chunk[pos + 2];\n        this.header[3] = chunk[pos + 3];\n        pos += 4;\n        this.headerLen = 4;\n        this.packetLen = this.header[0] + (this.header[1] << 8) + (this.header[2] << 16);\n        length = this.packetLen;\n      } else {\n        length = null;\n        while (chunkLen - pos > 0) {\n          this.header[this.headerLen++] = chunk[pos++];\n          if (this.headerLen === 4) {\n            this.packetLen = this.header[0] + (this.header[1] << 8) + (this.header[2] << 16);\n            length = this.packetLen;\n            break;\n          }\n        }\n      }\n\n      if (length) {\n        if (chunkLen - pos >= length) {\n          const buf = chunk.slice(pos, pos + length);\n          pos += length;\n          if (this.parts) {\n            this.parts.push(buf);\n            this.partsTotalLen += length;\n\n            if (this.packetLen < 0xffffff) {\n              let buf = Buffer.concat(this.parts, this.partsTotalLen);\n              this.parts = null;\n              this.receivePacket(this.packet.update(buf, 0, this.partsTotalLen));\n            }\n          } else {\n            if (this.packetLen < 0xffffff) {\n              this.receivePacket(this.packet.update(buf, 0, length));\n            } else {\n              this.parts = [buf];\n              this.partsTotalLen = length;\n            }\n          }\n          this.resetHeader();\n        } else {\n          const buf = chunk.slice(pos, chunkLen);\n          if (!this.parts) {\n            this.parts = [buf];\n            this.partsTotalLen = chunkLen - pos;\n          } else {\n            this.parts.push(buf);\n            this.partsTotalLen += chunkLen - pos;\n          }\n          this.remainingLen = length - (chunkLen - pos);\n          return;\n        }\n      }\n    } while (pos < chunkLen);\n  }\n}\n\nmodule.exports = PacketInputStream;\n", "'use strict';\n\nconst Iconv = require('iconv-lite');\nconst Utils = require('../misc/utils');\nconst Errors = require('../misc/errors');\nconst Collations = require('../const/collations');\n\nconst QUOTE = 0x27;\nconst DBL_QUOTE = 0x22;\nconst ZERO_BYTE = 0x00;\nconst SLASH = 0x5c;\n\n//increase by level to avoid buffer copy.\nconst SMALL_BUFFER_SIZE = 1024;\nconst MEDIUM_BUFFER_SIZE = 16384; //16k\nconst LARGE_BUFFER_SIZE = 131072; //128k\nconst BIG_BUFFER_SIZE = 1048576; //1M\nconst MAX_BUFFER_SIZE = 16777219; //16M + 4\nconst CHARS_GLOBAL_REGEXP = /[\\0\\\"\\'\\\\\\b\\n\\r\\t\\u001A]/g; // eslint-disable-line no-control-regex\n\n/**\n * MySQL packet builder.\n *\n * @param opts    options\n * @param info    connection info\n * @constructor\n */\nclass PacketOutputStream {\n  constructor(opts, info) {\n    this.opts = opts;\n    this.info = info;\n    this.pos = 4;\n    this.markPos = -1;\n    this.bufContainDataAfterMark = false;\n    this.cmdLength = 0;\n    this.buf = Buffer.allocUnsafe(SMALL_BUFFER_SIZE);\n    this.maxAllowedPacket = opts.maxAllowedPacket || 4194304;\n    this.maxPacketLength = Math.min(MAX_BUFFER_SIZE, this.maxAllowedPacket + 4);\n\n    this.changeEncoding(this.opts.collation ? this.opts.collation : Collations.fromIndex(224));\n    this.changeDebug(this.opts.debug);\n\n    this.opts.on('collation', this.changeEncoding.bind(this));\n    this.opts.on('debug', this.changeDebug.bind(this));\n  }\n\n  changeEncoding(collation) {\n    this.encoding = collation.charset;\n    if (this.encoding === 'utf8') {\n      this.writeString = this.writeDefaultBufferString;\n      this.writeLengthEncodedString = this.writeDefaultBufferLengthEncodedString;\n      this.writeStringEscapeQuote = this.writeUtf8StringEscapeQuote;\n    } else if (Buffer.isEncoding(this.encoding)) {\n      this.writeString = this.writeDefaultBufferString;\n      this.writeLengthEncodedString = this.writeDefaultBufferLengthEncodedString;\n      this.writeStringEscapeQuote = this.writeDefaultStringEscapeQuote;\n    } else {\n      this.writeString = this.writeDefaultIconvString;\n      this.writeLengthEncodedString = this.writeDefaultIconvLengthEncodedString;\n      this.writeStringEscapeQuote = this.writeDefaultStringEscapeQuote;\n    }\n  }\n\n  changeDebug(debug) {\n    this.debug = debug;\n    this.flushBuffer = debug ? this.flushBufferDebug : this.flushBufferBasic;\n  }\n\n  setStream(stream) {\n    this.stream = stream;\n  }\n\n  growBuffer(len) {\n    let newCapacity;\n    if (len + this.pos < MEDIUM_BUFFER_SIZE) {\n      newCapacity = MEDIUM_BUFFER_SIZE;\n    } else if (len + this.pos < LARGE_BUFFER_SIZE) {\n      newCapacity = LARGE_BUFFER_SIZE;\n    } else if (len + this.pos < BIG_BUFFER_SIZE) {\n      newCapacity = BIG_BUFFER_SIZE;\n    } else {\n      newCapacity = MAX_BUFFER_SIZE;\n    }\n\n    if (len + this.pos > newCapacity) {\n      if (this.markPos !== -1) {\n        // buf is > 16M with mark.\n        // flush until mark, reset pos at beginning\n        this.flushBufferStopAtMark();\n\n        if (len + this.pos <= this.buf.length) {\n          return;\n        }\n        this.growBuffer(len);\n      }\n    }\n\n    let newBuf = Buffer.allocUnsafe(newCapacity);\n    this.buf.copy(newBuf, 0, 0, this.pos);\n    this.buf = newBuf;\n  }\n\n  mark() {\n    this.markPos = this.pos;\n  }\n\n  isMarked() {\n    return this.markPos !== -1;\n  }\n\n  hasFlushed() {\n    return this.cmd.sequenceNo !== -1;\n  }\n\n  bufIsDataAfterMark() {\n    return this.bufContainDataAfterMark;\n  }\n\n  bufIsAfterMaxPacketLength() {\n    return this.pos > this.maxPacketLength;\n  }\n\n  /**\n   * Reset mark flag and send bytes after mark flag.\n   *\n   * @return buffer after mark flag\n   */\n  resetMark() {\n    this.pos = this.markPos;\n    this.markPos = -1;\n\n    const data = Buffer.allocUnsafe(this.pos - 4);\n    this.buf.copy(data, 0, 4, this.pos);\n    this.cmd.sequenceNo = -1;\n    this.cmd.compressSequenceNo = -1;\n    this.bufContainDataAfterMark = false;\n    return data;\n  }\n\n  /**\n   * Send packet to socket.\n   *\n   * @throws IOException if socket error occur.\n   */\n  flush() {\n    this.flushBuffer(true, 0);\n    this.buf = Buffer.allocUnsafe(SMALL_BUFFER_SIZE);\n    this.cmd.sequenceNo = -1;\n    this.cmd.compressSequenceNo = -1;\n    this.cmdLength = 0;\n    this.markPos = -1;\n  }\n\n  flushPacket() {\n    this.flushBuffer(false, 0);\n    this.buf = Buffer.allocUnsafe(SMALL_BUFFER_SIZE);\n    this.cmdLength = 0;\n    this.markPos = -1;\n  }\n\n  startPacket(cmd) {\n    this.cmd = cmd;\n    this.pos = 4;\n  }\n\n  writeInt8(value) {\n    if (this.pos + 1 >= this.buf.length) {\n      if (this.pos >= MAX_BUFFER_SIZE && !this.bufContainDataAfterMark) {\n        //buffer is more than a Packet, must flushBuffer()\n        this.flushBuffer(false, 1);\n      } else this.growBuffer(1);\n    }\n    this.buf[this.pos++] = value;\n  }\n\n  writeInt16(value) {\n    if (this.pos + 2 >= this.buf.length) {\n      let b = Buffer.allocUnsafe(2);\n      b[0] = value;\n      b[1] = value >>> 8;\n      this.writeBuffer(b, 0, 2);\n      return;\n    }\n    this.buf[this.pos] = value;\n    this.buf[this.pos + 1] = value >> 8;\n    this.pos += 2;\n  }\n\n  writeInt16AtPos(initPos) {\n    this.buf[initPos] = this.pos - initPos - 2;\n    this.buf[initPos + 1] = (this.pos - initPos - 2) >> 8;\n  }\n\n  writeInt24(value) {\n    if (this.pos + 3 >= this.buf.length) {\n      //not enough space remaining\n      let arr = Buffer.allocUnsafe(3);\n      arr[0] = value;\n      arr[1] = value >> 8;\n      arr[2] = value >> 16;\n      this.writeBuffer(arr, 0, 3);\n      return;\n    }\n\n    this.buf[this.pos] = value;\n    this.buf[this.pos + 1] = value >> 8;\n    this.buf[this.pos + 2] = value >> 16;\n    this.pos += 3;\n  }\n\n  writeInt32(value) {\n    if (this.pos + 4 >= this.buf.length) {\n      //not enough space remaining\n      let arr = Buffer.allocUnsafe(4);\n      arr.writeInt32LE(value, 0);\n      this.writeBuffer(arr, 0, 4);\n      return;\n    }\n\n    this.buf[this.pos] = value;\n    this.buf[this.pos + 1] = value >> 8;\n    this.buf[this.pos + 2] = value >> 16;\n    this.buf[this.pos + 3] = value >> 24;\n    this.pos += 4;\n  }\n\n  writeBigInt(value) {\n    if (this.pos + 8 >= this.buf.length) {\n      //not enough space remaining\n      let arr = Buffer.allocUnsafe(8);\n      arr.writeBigInt64LE(value, 0);\n      this.writeBuffer(arr, 0, 8);\n      return;\n    }\n    this.buf.writeBigInt64LE(value, this.pos);\n    this.pos += 8;\n  }\n\n  writeDouble(value) {\n    if (this.pos + 8 >= this.buf.length) {\n      //not enough space remaining\n      let arr = Buffer.allocUnsafe(8);\n      arr.writeDoubleLE(value, 0);\n      this.writeBuffer(arr, 0, 8);\n      return;\n    }\n    this.buf.writeDoubleLE(value, this.pos);\n    this.pos += 8;\n  }\n\n  writeLengthCoded(len) {\n    if (len < 0xfb) {\n      this.writeInt8(len);\n      return;\n    }\n\n    if (len < 65536) {\n      //max length is len < 0xffff\n      this.writeInt8(0xfc);\n      this.writeInt16(len);\n    } else if (len < 16777216) {\n      this.writeInt8(0xfd);\n      this.writeInt24(len);\n    } else {\n      this.writeInt8(0xfe);\n      this.writeBigInt(BigInt(len));\n    }\n  }\n\n  writeBuffer(arr, off, len) {\n    if (len > this.buf.length - this.pos) {\n      if (this.buf.length !== MAX_BUFFER_SIZE) {\n        this.growBuffer(len);\n      }\n\n      //max buffer size\n      if (len > this.buf.length - this.pos) {\n        if (this.markPos !== -1) {\n          this.growBuffer(len);\n          if (this.markPos !== -1) {\n            this.flushBufferStopAtMark();\n          }\n        }\n\n        if (len > this.buf.length - this.pos) {\n          //not enough space in buffer, will stream :\n          // fill buffer and flush until all data are snd\n          let remainingLen = len;\n\n          while (true) {\n            //filling buffer\n            let lenToFillBuffer = Math.min(MAX_BUFFER_SIZE - this.pos, remainingLen);\n            arr.copy(this.buf, this.pos, off, off + lenToFillBuffer);\n            remainingLen -= lenToFillBuffer;\n            off += lenToFillBuffer;\n            this.pos += lenToFillBuffer;\n\n            if (remainingLen === 0) return;\n            this.flushBuffer(false, remainingLen);\n          }\n        }\n      }\n    }\n    arr.copy(this.buf, this.pos, off, off + len);\n    this.pos += len;\n  }\n\n  /**\n   * Write ascii string to socket (no escaping)\n   *\n   * @param str                string\n   */\n  writeStringAscii(str) {\n    let len = str.length;\n\n    //not enough space remaining\n    if (len >= this.buf.length - this.pos) {\n      let strBuf = Buffer.from(str, 'ascii');\n      this.writeBuffer(strBuf, 0, strBuf.length);\n      return;\n    }\n\n    for (let off = 0; off < len; ) {\n      this.buf[this.pos++] = str.charCodeAt(off++);\n    }\n  }\n\n  writeLengthEncodedBuffer(buffer) {\n    const len = buffer.length;\n    this.writeLengthCoded(len);\n    this.writeBuffer(buffer, 0, len);\n  }\n\n  writeUtf8StringEscapeQuote(str) {\n    const charsLength = str.length;\n\n    //not enough space remaining\n    if (charsLength * 3 + 2 >= this.buf.length - this.pos) {\n      const arr = Buffer.from(str, 'utf8');\n      this.writeInt8(QUOTE);\n      this.writeBufferEscape(arr);\n      this.writeInt8(QUOTE);\n      return;\n    }\n\n    //create UTF-8 byte array\n    //since javascript char are internally using UTF-16 using surrogate's pattern, 4 bytes unicode characters will\n    //represent 2 characters : example \"\\uD83C\\uDFA4\" = \uD83C\uDFA4 unicode 8 \"no microphones\"\n    //so max size is 3 * charLength\n    //(escape characters are 1 byte encoded, so length might only be 2 when escaped)\n    // + 2 for the quotes for text protocol\n    let charsOffset = 0;\n    let currChar;\n    this.buf[this.pos++] = QUOTE;\n    //quick loop if only ASCII chars for faster escape\n    for (; charsOffset < charsLength && (currChar = str.charCodeAt(charsOffset)) < 0x80; charsOffset++) {\n      if (currChar === SLASH || currChar === QUOTE || currChar === ZERO_BYTE || currChar === DBL_QUOTE) {\n        this.buf[this.pos++] = SLASH;\n      }\n      this.buf[this.pos++] = currChar;\n    }\n\n    //if quick loop not finished\n    while (charsOffset < charsLength) {\n      currChar = str.charCodeAt(charsOffset++);\n      if (currChar < 0x80) {\n        if (currChar === SLASH || currChar === QUOTE || currChar === ZERO_BYTE || currChar === DBL_QUOTE) {\n          this.buf[this.pos++] = SLASH;\n        }\n        this.buf[this.pos++] = currChar;\n      } else if (currChar < 0x800) {\n        this.buf[this.pos++] = 0xc0 | (currChar >> 6);\n        this.buf[this.pos++] = 0x80 | (currChar & 0x3f);\n      } else if (currChar >= 0xd800 && currChar < 0xe000) {\n        //reserved for surrogate - see https://en.wikipedia.org/wiki/UTF-16\n        if (currChar < 0xdc00) {\n          //is high surrogate\n          if (charsOffset + 1 > charsLength) {\n            this.buf[this.pos++] = 0x3f;\n          } else {\n            const nextChar = str.charCodeAt(charsOffset);\n            if (nextChar >= 0xdc00 && nextChar < 0xe000) {\n              //is low surrogate\n              const surrogatePairs = (currChar << 10) + nextChar + (0x010000 - (0xd800 << 10) - 0xdc00);\n              this.buf[this.pos++] = 0xf0 | (surrogatePairs >> 18);\n              this.buf[this.pos++] = 0x80 | ((surrogatePairs >> 12) & 0x3f);\n              this.buf[this.pos++] = 0x80 | ((surrogatePairs >> 6) & 0x3f);\n              this.buf[this.pos++] = 0x80 | (surrogatePairs & 0x3f);\n              charsOffset++;\n            } else {\n              //must have low surrogate\n              this.buf[this.pos++] = 0x3f;\n            }\n          }\n        } else {\n          //low surrogate without high surrogate before\n          this.buf[this.pos++] = 0x3f;\n        }\n      } else {\n        this.buf[this.pos++] = 0xe0 | (currChar >> 12);\n        this.buf[this.pos++] = 0x80 | ((currChar >> 6) & 0x3f);\n        this.buf[this.pos++] = 0x80 | (currChar & 0x3f);\n      }\n    }\n    this.buf[this.pos++] = QUOTE;\n  }\n\n  writeDefaultBufferString(str) {\n    //javascript use UCS-2 or UTF-16 string internal representation\n    //that means that string to byte will be a maximum of * 3\n    // (4 bytes utf-8 are represented on 2 UTF-16 characters)\n    if (str.length * 3 < this.buf.length - this.pos) {\n      this.pos += this.buf.write(str, this.pos, this.encoding);\n      return;\n    }\n\n    //checking real length\n    let byteLength = Buffer.byteLength(str, this.encoding);\n    if (byteLength > this.buf.length - this.pos) {\n      if (this.buf.length < MAX_BUFFER_SIZE) {\n        this.growBuffer(byteLength);\n      }\n      if (byteLength > this.buf.length - this.pos) {\n        //not enough space in buffer, will stream :\n        let strBuf = Buffer.from(str, this.encoding);\n        this.writeBuffer(strBuf, 0, strBuf.length);\n        return;\n      }\n    }\n    this.pos += this.buf.write(str, this.pos, this.encoding);\n  }\n\n  writeDefaultBufferLengthEncodedString(str) {\n    //javascript use UCS-2 or UTF-16 string internal representation\n    //that means that string to byte will be a maximum of * 3\n    // (4 bytes utf-8 are represented on 2 UTF-16 characters)\n    //checking real length\n    let byteLength = Buffer.byteLength(str, this.encoding);\n    this.writeLengthCoded(byteLength);\n\n    if (byteLength > this.buf.length - this.pos) {\n      if (this.buf.length < MAX_BUFFER_SIZE) {\n        this.growBuffer(byteLength);\n      }\n      if (byteLength > this.buf.length - this.pos) {\n        //not enough space in buffer, will stream :\n        let strBuf = Buffer.from(str, this.encoding);\n        this.writeBuffer(strBuf, 0, strBuf.length);\n        return;\n      }\n    }\n    this.pos += this.buf.write(str, this.pos, this.encoding);\n  }\n\n  writeDefaultIconvString(str) {\n    let buf = Iconv.encode(str, this.encoding);\n    this.writeBuffer(buf, 0, buf.length);\n  }\n\n  writeDefaultIconvLengthEncodedString(str) {\n    let buf = Iconv.encode(str, this.encoding);\n    this.writeLengthCoded(buf.length);\n    this.writeBuffer(buf, 0, buf.length);\n  }\n\n  /**\n   * Parameters need to be properly escaped :\n   * following characters are to be escaped by \"\\\" :\n   * - \\0\n   * - \\\\\n   * - \\'\n   * - \\\"\n   * regex split part of string writing part, and escaping special char.\n   * Those chars are <= 7f meaning that this will work even with multi-byte encoding\n   *\n   * @param str string to escape.\n   */\n  writeDefaultStringEscapeQuote(str) {\n    this.writeInt8(QUOTE);\n    let match;\n    let lastIndex = 0;\n    while ((match = CHARS_GLOBAL_REGEXP.exec(str)) !== null) {\n      this.writeString(str.slice(lastIndex, match.index));\n      this.writeInt8(SLASH);\n      this.writeInt8(match[0].charCodeAt(0));\n      lastIndex = CHARS_GLOBAL_REGEXP.lastIndex;\n    }\n\n    if (lastIndex === 0) {\n      // Nothing was escaped\n      this.writeString(str);\n      this.writeInt8(QUOTE);\n      return;\n    }\n\n    if (lastIndex < str.length) {\n      this.writeString(str.slice(lastIndex));\n    }\n    this.writeInt8(QUOTE);\n  }\n\n  writeBinaryDate(year, mon, day, hour, min, sec, ms) {\n    let len = ms === 0 ? 7 : 11;\n    //not enough space remaining\n    if (len + 1 > this.buf.length - this.pos) {\n      let tmpBuf = Buffer.allocUnsafe(len + 1);\n\n      tmpBuf[0] = len;\n      tmpBuf[1] = year;\n      tmpBuf[2] = year >>> 8;\n      tmpBuf[3] = mon;\n      tmpBuf[4] = day;\n      tmpBuf[5] = hour;\n      tmpBuf[6] = min;\n      tmpBuf[7] = sec;\n      if (ms !== 0) {\n        const micro = ms * 1000;\n        tmpBuf[8] = micro;\n        tmpBuf[9] = micro >>> 8;\n        tmpBuf[10] = micro >>> 16;\n        tmpBuf[11] = micro >>> 24;\n      }\n\n      this.writeBuffer(tmpBuf, 0, len + 1);\n      return;\n    }\n\n    this.buf[this.pos] = len;\n    this.buf[this.pos + 1] = year;\n    this.buf[this.pos + 2] = year >>> 8;\n    this.buf[this.pos + 3] = mon;\n    this.buf[this.pos + 4] = day;\n    this.buf[this.pos + 5] = hour;\n    this.buf[this.pos + 6] = min;\n    this.buf[this.pos + 7] = sec;\n\n    if (ms !== 0) {\n      const micro = ms * 1000;\n      this.buf[this.pos + 8] = micro;\n      this.buf[this.pos + 9] = micro >>> 8;\n      this.buf[this.pos + 10] = micro >>> 16;\n      this.buf[this.pos + 11] = micro >>> 24;\n    }\n    this.pos += len + 1;\n  }\n\n  writeBufferEscape(val) {\n    let valLen = val.length;\n    if (valLen * 2 > this.buf.length - this.pos) {\n      //makes buffer bigger (up to 16M)\n      if (this.buf.length !== MAX_BUFFER_SIZE) this.growBuffer(valLen * 2);\n\n      //data may still be bigger than buffer.\n      //must flush buffer when full (and reset position to 4)\n      if (valLen * 2 > this.buf.length - this.pos) {\n        if (this.markPos !== -1) {\n          this.growBuffer(valLen * 2);\n          if (this.markPos !== -1) {\n            this.flushBufferStopAtMark();\n          }\n        }\n\n        //not enough space in buffer, will fill buffer\n        for (let i = 0; i < valLen; i++) {\n          switch (val[i]) {\n            case QUOTE:\n            case SLASH:\n            case DBL_QUOTE:\n            case ZERO_BYTE:\n              if (this.pos >= this.buf.length) this.flushBuffer(false, (valLen - i) * 2);\n              this.buf[this.pos++] = SLASH; //add escape slash\n          }\n          if (this.pos >= this.buf.length) this.flushBuffer(false, (valLen - i) * 2);\n          this.buf[this.pos++] = val[i];\n        }\n        return;\n      }\n    }\n\n    //sure to have enough place to use buffer directly\n    for (let i = 0; i < valLen; i++) {\n      switch (val[i]) {\n        case QUOTE:\n        case SLASH:\n        case DBL_QUOTE:\n        case ZERO_BYTE:\n          this.buf[this.pos++] = SLASH; //add escape slash\n      }\n      this.buf[this.pos++] = val[i];\n    }\n  }\n\n  /**\n   * Count query size. If query size is greater than max_allowed_packet and nothing has been already\n   * send, throw an exception to avoid having the connection closed.\n   *\n   * @param length additional length to query size\n   * @param info current connection information\n   * @throws Error if query has not to be send.\n   */\n  checkMaxAllowedLength(length, info) {\n    if (this.cmdLength + length >= this.maxAllowedPacket) {\n      // launch exception only if no packet has been send.\n      return Errors.createFatalError(\n        `query size (${this.cmdLength + length}) is >= to max_allowed_packet (${this.maxAllowedPacket})`,\n        Errors.ER_MAX_ALLOWED_PACKET,\n        info\n      );\n    }\n    return null;\n  }\n\n  /**\n   * Indicate if buffer contain any data.\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return this.pos <= 4;\n  }\n\n  /**\n   * Flush the internal buffer.\n   */\n  flushBufferDebug(commandEnd, remainingLen) {\n    if (this.pos > 4) {\n      this.buf[0] = this.pos - 4;\n      this.buf[1] = (this.pos - 4) >>> 8;\n      this.buf[2] = (this.pos - 4) >>> 16;\n      this.buf[3] = ++this.cmd.sequenceNo;\n      this.stream.writeBuf(this.buf.slice(0, this.pos), this.cmd);\n      this.stream.flush(true, this.cmd);\n      this.cmdLength += this.pos - 4;\n\n      this.opts.logger.network(\n        `==> conn:${this.info.threadId ? this.info.threadId : -1} ${\n          this.cmd.constructor.name + '(0,' + this.pos + ')'\n        }\\n${Utils.log(this.opts, this.buf, 0, this.pos)}`\n      );\n\n      if (commandEnd && this.pos === MAX_BUFFER_SIZE) {\n        //if last packet fill the max size, must send an empty com to indicate that command end.\n        this.writeEmptyPacket();\n      }\n      this.pos = 4;\n    }\n  }\n\n  /**\n   * Flush to last mark.\n   */\n  flushBufferStopAtMark() {\n    const end = this.pos;\n    this.pos = this.markPos;\n    const tmpBuf = Buffer.allocUnsafe(Math.max(SMALL_BUFFER_SIZE, end - this.pos));\n    this.buf.copy(tmpBuf, 4, this.markPos, end);\n    this.flushBuffer(true, end - this.pos);\n    this.cmdLength = 0;\n    this.buf = tmpBuf;\n    this.pos = 4 + end - this.markPos;\n    this.markPos = -1;\n    this.bufContainDataAfterMark = true;\n  }\n\n  flushBufferBasic(commandEnd, remainingLen) {\n    this.buf[0] = this.pos - 4;\n    this.buf[1] = (this.pos - 4) >>> 8;\n    this.buf[2] = (this.pos - 4) >>> 16;\n    this.buf[3] = ++this.cmd.sequenceNo;\n    this.stream.writeBuf(this.buf.slice(0, this.pos), this.cmd);\n    this.stream.flush(true, this.cmd);\n    this.cmdLength += this.pos - 4;\n    if (commandEnd && this.pos === MAX_BUFFER_SIZE) {\n      //if last packet fill the max size, must send an empty com to indicate that command end.\n      this.writeEmptyPacket();\n    }\n    this.pos = 4;\n  }\n\n  writeEmptyPacket() {\n    const emptyBuf = Buffer.from([0x00, 0x00, 0x00, ++this.cmd.sequenceNo]);\n\n    if (this.debug) {\n      this.opts.logger.network(\n        `==> conn:${this.info.threadId ? this.info.threadId : -1} ${this.cmd.constructor.name}(0,4)\\n${Utils.log(\n          this.opts,\n          emptyBuf,\n          0,\n          4\n        )}`\n      );\n    }\n\n    this.stream.writeBuf(emptyBuf, this.cmd);\n    this.stream.flush(true, this.cmd);\n    this.cmdLength = 0;\n  }\n}\n\nmodule.exports = PacketOutputStream;\n", "export default {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n", "\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nexport default ZStream;\n", "'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\n\nexport function assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (source.hasOwnProperty(p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n}\n\n\n// reduce buffer size, avoiding mem copy\nexport function shrinkBuf(buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n}\nexport function arraySet(dest, src, src_offs, len, dest_offs) {\n  if (src.subarray && dest.subarray) {\n    dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n    return;\n  }\n  // Fallback to ordinary array\n  for (var i = 0; i < len; i++) {\n    dest[dest_offs + i] = src[src_offs + i];\n  }\n}\nexport function flattenChunks(chunks) {\n  var i, l, len, pos, chunk, result;\n\n  // calculate data length\n  len = 0;\n  for (i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  result = new Uint8Array(len);\n  pos = 0;\n  for (i = 0, l = chunks.length; i < l; i++) {\n    chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n}\n\n\nexport var Buf8 = Uint8Array;\nexport var Buf16 = Uint16Array;\nexport var Buf32 = Int32Array;\n// Enable/Disable typed arrays use, for testing\n//\n", "'use strict';\n\nimport {arraySet} from './utils';\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY = 0;\nvar Z_TEXT = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) {\n  var len = buf.length;\n  while (--len >= 0) {\n    buf[len] = 0;\n  }\n}\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES = 30;\n/* number of distance codes */\n\nvar BL_CODES = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK = 256;\n/* end of block literal code */\n\nvar REP_3_6 = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10 = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits = /* extra bits for each length code */ [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0];\n\nvar extra_dbits = /* extra bits for each distance code */ [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13];\n\nvar extra_blbits = /* extra bits for each bit length code */ [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7];\n\nvar bl_order = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array insdead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree = static_tree; /* static tree or NULL */\n  this.extra_bits = extra_bits; /* extra bits for each code or NULL */\n  this.extra_base = extra_base; /* base index for extra_bits */\n  this.elems = elems; /* max number of elements in the tree */\n  this.max_length = max_length; /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree; /* the dynamic tree */\n  this.max_code = 0; /* largest code with non zero frequency */\n  this.stat_desc = stat_desc; /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n  //    put_byte(s, (uch)((w) & 0xff));\n  //    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2] /*.Code*/ , tree[c * 2 + 1] /*.Len*/ );\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc) {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n  var tree = desc.dyn_tree;\n  var max_code = desc.max_code;\n  var stree = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var extra = desc.stat_desc.extra_bits;\n  var base = desc.stat_desc.extra_base;\n  var max_length = desc.stat_desc.max_length;\n  var h; /* heap index */\n  var n, m; /* iterate over the tree elements */\n  var bits; /* bit length */\n  var xbits; /* extra bits */\n  var f; /* frequency */\n  var overflow = 0; /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1] /*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1] /*.Dad*/ * 2 + 1] /*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1] /*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) {\n      continue;\n    } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2] /*.Freq*/ ;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1] /*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) {\n    return;\n  }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) {\n      bits--;\n    }\n    s.bl_count[bits]--; /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) {\n        continue;\n      }\n      if (tree[m * 2 + 1] /*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1] /*.Len*/ ) * tree[m * 2] /*.Freq*/ ;\n        tree[m * 2 + 1] /*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count) {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0; /* running code value */\n  var bits; /* bit index */\n  var n; /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0; n <= max_code; n++) {\n    var len = tree[n * 2 + 1] /*.Len*/ ;\n    if (len === 0) {\n      continue;\n    }\n    /* Now reverse the bits */\n    tree[n * 2] /*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n; /* iterates over tree elements */\n  var bits; /* bit counter */\n  var length; /* length value */\n  var code; /* code value */\n  var dist; /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n  /*#ifdef NO_INIT_GLOBAL_POINTERS\n    static_l_desc.static_tree = static_ltree;\n    static_l_desc.extra_bits = extra_lbits;\n    static_d_desc.static_tree = static_dtree;\n    static_d_desc.extra_bits = extra_dbits;\n    static_bl_desc.extra_bits = extra_blbits;\n  #endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1] /*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1] /*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1] /*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1] /*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1] /*.Len*/ = 5;\n    static_dtree[n * 2] /*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0, D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0, BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES; n++) {\n    s.dyn_ltree[n * 2] /*.Freq*/ = 0;\n  }\n  for (n = 0; n < D_CODES; n++) {\n    s.dyn_dtree[n * 2] /*.Freq*/ = 0;\n  }\n  for (n = 0; n < BL_CODES; n++) {\n    s.bl_tree[n * 2] /*.Freq*/ = 0;\n  }\n\n  s.dyn_ltree[END_BLOCK * 2] /*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s) {\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header) {\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n\n  bi_windup(s); /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n  //  while (len--) {\n  //    put_byte(s, *buf++);\n  //  }\n  arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2] /*.Freq*/ < tree[_m2] /*.Freq*/ ||\n    (tree[_n2] /*.Freq*/ === tree[_m2] /*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1; /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) {\n      break;\n    }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist; /* distance of matched string */\n  var lc; /* match length or unmatched char (if dist == 0) */\n  var lx = 0; /* running index in l_buf */\n  var code; /* the code to send */\n  var extra; /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra); /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree); /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra); /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree = desc.dyn_tree;\n  var stree = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems = desc.stat_desc.elems;\n  var n, m; /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node; /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2] /*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1] /*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2] /*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1] /*.Len*/ ;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1 /*int /2*/ ); n >= 1; n--) {\n    pqdownheap(s, tree, n);\n  }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems; /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1 /*SMALLEST*/ ];\n    s.heap[1 /*SMALLEST*/ ] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1 /*SMALLEST*/ );\n    /***/\n\n    m = s.heap[1 /*SMALLEST*/ ]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2] /*.Freq*/ = tree[n * 2] /*.Freq*/ + tree[m * 2] /*.Freq*/ ;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1] /*.Dad*/ = tree[m * 2 + 1] /*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1 /*SMALLEST*/ ] = node++;\n    pqdownheap(s, tree, 1 /*SMALLEST*/ );\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1 /*SMALLEST*/ ];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n; /* iterates over all tree elements */\n  var prevlen = -1; /* last emitted length */\n  var curlen; /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1] /*.Len*/ ; /* length of next code */\n\n  var count = 0; /* repeat count of the current code */\n  var max_count = 7; /* max repeat count */\n  var min_count = 4; /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1] /*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1] /*.Len*/ ;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2] /*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) {\n        s.bl_tree[curlen * 2] /*.Freq*/ ++;\n      }\n      s.bl_tree[REP_3_6 * 2] /*.Freq*/ ++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2] /*.Freq*/ ++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2] /*.Freq*/ ++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n; /* iterates over all tree elements */\n  var prevlen = -1; /* last emitted length */\n  var curlen; /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1] /*.Len*/ ; /* length of next code */\n\n  var count = 0; /* repeat count of the current code */\n  var max_count = 7; /* max repeat count */\n  var min_count = 4; /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */\n  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1] /*.Len*/ ;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do {\n        send_code(s, curlen, s.bl_tree);\n      } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex; /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1] /*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank; /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1, 5);\n  send_bits(s, blcodes - 4, 4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1] /*.Len*/ , 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2] /*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2] /*.Freq*/ !== 0 || s.dyn_ltree[10 * 2] /*.Freq*/ !== 0 ||\n    s.dyn_ltree[13 * 2] /*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2] /*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nexport function _tr_init(s) {\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nexport function _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3); /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nexport function _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nexport function _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb; /* opt_len and static_len in bytes */\n  var max_blindex = 0; /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) {\n      opt_lenb = static_lenb;\n    }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nexport function _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2] = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2] /*.Freq*/ ++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--; /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2] /*.Freq*/ ++;\n    s.dyn_dtree[d_code(dist) * 2] /*.Freq*/ ++;\n  }\n\n  // (!) This block is disabled in zlib defailts,\n  // don't enable it for binary compatibility\n\n  //#ifdef TRUNCATE_BLOCK\n  //  /* Try to guess if it is profitable to stop the current block here */\n  //  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n  //    /* Compute an upper bound for the compressed length */\n  //    out_length = s.last_lit*8;\n  //    in_length = s.strstart - s.block_start;\n  //\n  //    for (dcode = 0; dcode < D_CODES; dcode++) {\n  //      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n  //    }\n  //    out_length >>>= 3;\n  //    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n  //    //       s->last_lit, in_length, out_length,\n  //    //       100L - out_length*100L/in_length));\n  //    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n  //      return true;\n  //    }\n  //  }\n  //#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n", "\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It doesn't worth to make additional optimizationa as in original.\n// Small size is preferable.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nexport default adler32;\n", "\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nexport default crc32;\n", "\nimport {Buf8,Buf16,arraySet} from './utils';\nimport {_tr_flush_block, _tr_tally, _tr_init, _tr_align, _tr_stored_block} from './trees';\nimport adler32 from './adler32';\nimport crc32 from './crc32';\nimport msg from './messages';\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH = 3;\nvar Z_FINISH = 4;\nvar Z_BLOCK = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK = 0;\nvar Z_STREAM_END = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR = -2;\nvar Z_DATA_ERROR = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED = 1;\nvar Z_HUFFMAN_ONLY = 2;\nvar Z_RLE = 3;\nvar Z_FIXED = 4;\nvar Z_DEFAULT_STRATEGY = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES = 30;\n/* number of distance codes */\nvar BL_CODES = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) {\n  var len = buf.length;\n  while (--len >= 0) {\n    buf[len] = 0;\n  }\n}\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) {\n    return;\n  }\n\n  arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n  //  put_byte(s, (Byte)(b >> 8));\n  //  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) {\n    len = size;\n  }\n  if (len === 0) {\n    return 0;\n  }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  } else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length; /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match; /* matched string */\n  var len; /* length of current match */\n  var best_len = s.prev_length; /* best match length so far */\n  var nice_match = s.nice_match; /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n    s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0 /*NIL*/ ;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1 = _win[scan + best_len - 1];\n  var scan_end = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) {\n    nice_match = s.lookahead;\n  }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len] !== scan_end ||\n      _win[match + best_len - 1] !== scan_end1 ||\n      _win[match] !== _win[scan] ||\n      _win[++match] !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n      _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n      _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n      _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n      scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1 = _win[scan + best_len - 1];\n      scan_end = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n      //#if MIN_MATCH != 3\n      //        Call update_hash() MIN_MATCH-3 more times\n      //#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n  //  if (s.high_water < s.window_size) {\n  //    var curr = s.strstart + s.lookahead;\n  //    var init = 0;\n  //\n  //    if (s.high_water < curr) {\n  //      /* Previous high water mark below current data -- zero WIN_INIT\n  //       * bytes or up to end of window, whichever is less.\n  //       */\n  //      init = s.window_size - curr;\n  //      if (init > WIN_INIT)\n  //        init = WIN_INIT;\n  //      zmemzero(s->window + curr, (unsigned)init);\n  //      s->high_water = curr + init;\n  //    }\n  //    else if (s->high_water < (ulg)curr + WIN_INIT) {\n  //      /* High water mark at or above current data, but below current data\n  //       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n  //       * to end of window, whichever is less.\n  //       */\n  //      init = (ulg)curr + WIN_INIT - s->high_water;\n  //      if (init > s->window_size - s->high_water)\n  //        init = s->window_size - s->high_water;\n  //      zmemzero(s->window + s->high_water, (unsigned)init);\n  //      s->high_water += init;\n  //    }\n  //  }\n  //\n  //  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n  //    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n      //      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n      //        s.block_start >= s.w_size)) {\n      //        throw  new Error(\"slide too late\");\n      //      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n    //    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head; /* head of the hash chain */\n  var bflush; /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0 /*NIL*/ ;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0 /*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match /*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n        //#if MIN_MATCH != 3\n        //                Call UPDATE_HASH() MIN_MATCH-3 more times\n        //#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head; /* head of hash chain */\n  var bflush; /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break;\n      } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0 /*NIL*/ ;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0 /*NIL*/ && s.prev_length < s.max_lazy_match &&\n      s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD) /*MAX_DIST(s)*/ ) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n        (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096 /*TOO_FAR*/ ))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush; /* set if current block must be flushed */\n  var prev; /* byte at distance one to match */\n  var scan, strend; /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break;\n      } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n          prev === _win[++scan] && prev === _win[++scan] &&\n          prev === _win[++scan] && prev === _win[++scan] &&\n          prev === _win[++scan] && prev === _win[++scan] &&\n          scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush; /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break; /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored), /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast), /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast), /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast), /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow), /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow), /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow), /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow), /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow), /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow) /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null; /* pointer back to this zlib stream */\n  this.status = 0; /* as the name implies */\n  this.pending_buf = null; /* output still pending */\n  this.pending_buf_size = 0; /* size of pending_buf */\n  this.pending_out = 0; /* next pending byte to output to the stream */\n  this.pending = 0; /* nb of bytes in the pending buffer */\n  this.wrap = 0; /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null; /* gzip header information to write */\n  this.gzindex = 0; /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1; /* value of flush param for previous deflate call */\n\n  this.w_size = 0; /* LZ77 window size (32K by default) */\n  this.w_bits = 0; /* log2(w_size)  (8..16) */\n  this.w_mask = 0; /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null; /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0; /* hash index of string to be inserted */\n  this.hash_size = 0; /* number of elements in hash table */\n  this.hash_bits = 0; /* log2(hash_size) */\n  this.hash_mask = 0; /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0; /* length of best match */\n  this.prev_match = 0; /* previous match */\n  this.match_available = 0; /* set if previous match exists */\n  this.strstart = 0; /* start of string to insert */\n  this.match_start = 0; /* start of matching string */\n  this.lookahead = 0; /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0; /* compression level (1..9) */\n  this.strategy = 0; /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n  /* used by c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree = new Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree = new Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree = new Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc = null; /* desc. for literal tree */\n  this.d_desc = null; /* desc. for distance tree */\n  this.bl_desc = null; /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Buf16(2 * L_CODES + 1); /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0; /* number of elements in the heap */\n  this.heap_max = 0; /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all\n   */\n\n  this.depth = new Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0; /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0; /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0; /* bit length of current block with optimal trees */\n  this.static_len = 0; /* bit length of current block with static trees */\n  this.matches = 0; /* number of string matches in current block */\n  this.insert = 0; /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nexport function deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0 // crc32(0, Z_NULL, 0)\n    :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  _tr_init(s);\n  return Z_OK;\n}\n\n\nexport function deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nexport function deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  if (strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nexport function deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  } else if (windowBits > 15) {\n    wrap = 2; /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Buf8(s.w_size * 2);\n  s.head = new Buf16(s.hash_size);\n  s.prev = new Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nexport function deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nexport function deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n    (!strm.input && strm.avail_in !== 0) ||\n    (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n    if (s.wrap === 2) {\n      // GZIP header\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n          (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n            4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      } else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n          (s.gzhead.hcrc ? 2 : 0) +\n          (!s.gzhead.extra ? 0 : 4) +\n          (!s.gzhead.name ? 0 : 8) +\n          (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n          (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n            4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    } else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) {\n        header |= PRESET_DICT;\n      }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n  //#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra /* != Z_NULL*/ ) {\n      beg = s.pending; /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    } else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name /* != Z_NULL*/ ) {\n      beg = s.pending; /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    } else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment /* != Z_NULL*/ ) {\n      beg = s.pending; /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    } else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    } else {\n      s.status = BUSY_STATE;\n    }\n  }\n  //#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      } else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/\n          /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) {\n    return Z_OK;\n  }\n  if (s.wrap <= 0) {\n    return Z_STREAM_END;\n  }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  } else {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) {\n    s.wrap = -s.wrap;\n  }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nexport function deflateEnd(strm) {\n  var status;\n\n  if (!strm /*== Z_NULL*/ || !strm.state /*== Z_NULL*/ ) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nexport function deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm /*== Z_NULL*/ || !strm.state /*== Z_NULL*/ ) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0; /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) { /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new Buf8(s.w_size);\n    arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexport var deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n", "\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nexport default function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defailts,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n", "import {Buf16} from './utils';\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nexport default function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts) {\n  var bits = opts.bits;\n  //here = opts.here; /* table entry for duplication */\n\n  var len = 0; /* a code's length in bits */\n  var sym = 0; /* index of code symbols */\n  var min = 0,\n    max = 0; /* minimum and maximum code lengths */\n  var root = 0; /* number of index bits for root table */\n  var curr = 0; /* number of index bits for current table */\n  var drop = 0; /* code bits to drop for sub-table */\n  var left = 0; /* number of prefix codes available */\n  var used = 0; /* code entries in table used */\n  var huff = 0; /* Huffman code */\n  var incr; /* for incrementing code, index */\n  var fill; /* index for replicating entries */\n  var low; /* low bits for current root entry */\n  var mask; /* mask for low root bits */\n  var next; /* next available space in table */\n  var base = null; /* base value table to use */\n  var base_index = 0;\n  //  var shoextra;    /* extra bits table to use */\n  var end; /* use base and extra for symbol > end */\n  var count = new Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) {\n      break;\n    }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) { /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0; /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) {\n      break;\n    }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    } /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1; /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work; /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else { /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0; /* starting code */\n  sym = 0; /* starting code symbol */\n  len = min; /* starting code length */\n  next = table_index; /* current table to fill in */\n  curr = root; /* current table index bits */\n  drop = 0; /* current bits to drop from code for index */\n  low = -1; /* trigger new sub-table when len > root */\n  used = 1 << root; /* use root table entries */\n  mask = used - 1; /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  var i = 0;\n  /* process all codes and make table entries */\n  for (;;) {\n    i++;\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    } else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    } else {\n      here_op = 32 + 64; /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill; /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val | 0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) {\n        break;\n      }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min; /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) {\n          break;\n        }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) | 0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) | 0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n", "'use strict';\n\nimport {Buf8,Buf16,Buf32,arraySet} from './utils';\nimport adler32 from './adler32';\nimport crc32 from './crc32';\nimport inflate_fast from './inffast';\nimport inflate_table from './inftrees';\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH = 4;\nvar Z_BLOCK = 5;\nvar Z_TREES = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK = 0;\nvar Z_STREAM_END = 1;\nvar Z_NEED_DICT = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR = -2;\nvar Z_DATA_ERROR = -3;\nvar Z_MEM_ERROR = -4;\nvar Z_BUF_ERROR = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar HEAD = 1; /* i: waiting for magic header */\nvar FLAGS = 2; /* i: waiting for method and flags (gzip) */\nvar TIME = 3; /* i: waiting for modification time (gzip) */\nvar OS = 4; /* i: waiting for extra flags and operating system (gzip) */\nvar EXLEN = 5; /* i: waiting for extra length (gzip) */\nvar EXTRA = 6; /* i: waiting for extra bytes (gzip) */\nvar NAME = 7; /* i: waiting for end of file name (gzip) */\nvar COMMENT = 8; /* i: waiting for end of comment (gzip) */\nvar HCRC = 9; /* i: waiting for header crc (gzip) */\nvar DICTID = 10; /* i: waiting for dictionary check value */\nvar DICT = 11; /* waiting for inflateSetDictionary() call */\nvar TYPE = 12; /* i: waiting for type bits, including last-flag bit */\nvar TYPEDO = 13; /* i: same, but skip check to exit inflate on new block */\nvar STORED = 14; /* i: waiting for stored size (length and complement) */\nvar COPY_ = 15; /* i/o: same as COPY below, but only first time in */\nvar COPY = 16; /* i/o: waiting for input or output to copy stored block */\nvar TABLE = 17; /* i: waiting for dynamic block table lengths */\nvar LENLENS = 18; /* i: waiting for code length code lengths */\nvar CODELENS = 19; /* i: waiting for length/lit and distance code lengths */\nvar LEN_ = 20; /* i: same as LEN below, but only first time in */\nvar LEN = 21; /* i: waiting for length/lit/eob code */\nvar LENEXT = 22; /* i: waiting for length extra bits */\nvar DIST = 23; /* i: waiting for distance code */\nvar DISTEXT = 24; /* i: waiting for distance extra bits */\nvar MATCH = 25; /* o: waiting for output space to copy string */\nvar LIT = 26; /* o: waiting for output space to write literal */\nvar CHECK = 27; /* i: waiting for 32-bit check value */\nvar LENGTH = 28; /* i: waiting for 32-bit length (gzip) */\nvar DONE = 29; /* finished check, done -- remain here until reset */\nvar BAD = 30; /* got a data error -- remain here until reset */\nvar MEM = 31; /* got an inflate() memory error -- remain here until reset */\nvar SYNC = 32; /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return (((q >>> 24) & 0xff) +\n    ((q >>> 8) & 0xff00) +\n    ((q & 0xff00) << 8) +\n    ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0; /* current inflate mode */\n  this.last = false; /* true if processing last block */\n  this.wrap = 0; /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false; /* true if dictionary provided */\n  this.flags = 0; /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0; /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0; /* protected copy of check value */\n  this.total = 0; /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null; /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0; /* log base 2 of requested window size */\n  this.wsize = 0; /* window size or zero if not using window */\n  this.whave = 0; /* valid bytes in the window */\n  this.wnext = 0; /* window write index */\n  this.window = null; /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0; /* input bit accumulator */\n  this.bits = 0; /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0; /* literal or length of data to copy */\n  this.offset = 0; /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0; /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null; /* starting table for length/literal codes */\n  this.distcode = null; /* starting table for distance codes */\n  this.lenbits = 0; /* index bits for lencode */\n  this.distbits = 0; /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0; /* number of code length code lengths */\n  this.nlen = 0; /* number of length code lengths */\n  this.ndist = 0; /* number of distance code lengths */\n  this.have = 0; /* number of code lengths in lens[] */\n  this.next = null; /* next available space in codes[] */\n\n  this.lens = new Buf16(320); /* temporary storage for code lengths */\n  this.work = new Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null; /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null; /* dynamic table for distance codes (JS specific) */\n  this.sane = 0; /* if false, allow invalid distance too far */\n  this.back = 0; /* bits back of last unprocessed length/lit */\n  this.was = 0; /* initial length of match */\n}\n\nexport function inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) { /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null /*Z_NULL*/ ;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nexport function inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nexport function inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  } else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nexport function inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) {\n    return Z_STREAM_ERROR;\n  }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null /*Z_NULL*/ ;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null /*Z_NULL*/ ;\n  }\n  return ret;\n}\n\nexport function inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new Buf32(512);\n    distfix = new Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) {\n      state.lens[sym++] = 8;\n    }\n    while (sym < 256) {\n      state.lens[sym++] = 9;\n    }\n    while (sym < 280) {\n      state.lens[sym++] = 7;\n    }\n    while (sym < 288) {\n      state.lens[sym++] = 8;\n    }\n\n    inflate_table(LENS, state.lens, 0, 288, lenfix, 0, state.work, {\n      bits: 9\n    });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) {\n      state.lens[sym++] = 5;\n    }\n\n    inflate_table(DISTS, state.lens, 0, 32, distfix, 0, state.work, {\n      bits: 5\n    });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  } else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    } else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) {\n        state.wnext = 0;\n      }\n      if (state.whave < state.wsize) {\n        state.whave += dist;\n      }\n    }\n  }\n  return 0;\n}\n\nexport function inflate(strm, flush) {\n  var state;\n  var input, output; // input/output buffers\n  var next; /* next input INDEX */\n  var put; /* next output INDEX */\n  var have, left; /* available input and output */\n  var hold; /* bit buffer */\n  var bits; /* bits in bit buffer */\n  var _in, _out; /* save starting available input and output */\n  var copy; /* number of stored or match bytes to copy */\n  var from; /* where to copy match bytes from */\n  var from_source;\n  var here = 0; /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len; /* length to copy for repeats, bits to drop */\n  var ret; /* return code */\n  var hbuf = new Buf8(4); /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */ [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];\n\n\n  if (!strm || !strm.state || !strm.output ||\n    (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) {\n    state.mode = TYPEDO;\n  } /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n    for (;;) {\n      switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) { /* gzip header */\n          state.check = 0 /*crc32(0L, Z_NULL, 0)*/ ;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0; /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) || /* check if zlib header allowed */\n          (((hold & 0xff) /*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f) /*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f) /*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        } else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1 /*adler32(0L, Z_NULL, 0)*/ ;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        } else if (state.head) {\n          state.head.extra = null /*Z_NULL*/ ;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) {\n            copy = have;\n          }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more conveniend processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) {\n            break inf_leave;\n          }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n              (state.length < 65536 /*state.head.name_max*/ )) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) {\n            break inf_leave;\n          }\n        } else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n              (state.length < 65536 /*state.head.comm_max*/ )) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) {\n            break inf_leave;\n          }\n        } else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1 /*adler32(0L, Z_NULL, 0)*/ ;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) {\n          break inf_leave;\n        }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01) /*BITS(1)*/ ;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03) /*BITS(2)*/ ) {\n        case 0:\n          /* stored block */\n          //Tracev((stderr, \"inflate:     stored block%s\\n\",\n          //        state.last ? \" (last)\" : \"\"));\n          state.mode = STORED;\n          break;\n        case 1:\n          /* fixed block */\n          fixedtables(state);\n          //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n          //        state.last ? \" (last)\" : \"\"));\n          state.mode = LEN_; /* decode codes */\n          if (flush === Z_TREES) {\n            //--- DROPBITS(2) ---//\n            hold >>>= 2;\n            bits -= 2;\n            //---//\n            break inf_leave;\n          }\n          break;\n        case 2:\n          /* dynamic block */\n          //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n          //        state.last ? \" (last)\" : \"\"));\n          state.mode = TABLE;\n          break;\n        case 3:\n          strm.msg = 'invalid block type';\n          state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) {\n          break inf_leave;\n        }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) {\n            copy = have;\n          }\n          if (copy > left) {\n            copy = left;\n          }\n          if (copy === 0) {\n            break inf_leave;\n          }\n          //--- zmemcpy(put, next, copy); ---\n          arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f) /*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f) /*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f) /*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        //#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n        //#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07); //BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = {\n          bits: state.lenbits\n        };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)]; /*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) {\n              break;\n            }\n            //--- PULLBYTE() ---//\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          } else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03); //BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            } else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07); //BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            } else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) {\n                  break inf_leave;\n                }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f); //BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) {\n          break;\n        }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = {\n          bits: state.lenbits\n        };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = {\n          bits: state.distbits\n        };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) {\n          break inf_leave;\n        }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)]; /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) {\n            break;\n          }\n          //--- PULLBYTE() ---//\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n              ((hold & ((1 << (last_bits + last_op)) - 1)) /*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) {\n              break;\n            }\n            //--- PULLBYTE() ---//\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1) /*BITS(state.extra)*/ ;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)]; /*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) {\n            break;\n          }\n          //--- PULLBYTE() ---//\n          if (have === 0) {\n            break inf_leave;\n          }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n              ((hold & ((1 << (last_bits + last_op)) - 1)) /*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) {\n              break;\n            }\n            //--- PULLBYTE() ---//\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1) /*BITS(state.extra)*/ ;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n        //#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) {\n          break inf_leave;\n        }\n        copy = _out - left;\n        if (state.offset > copy) { /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n            // (!) This block is disabled in zlib defailts,\n            // don't enable it for binary compatibility\n            //#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n            //          Trace((stderr, \"inflate.c too far\\n\"));\n            //          copy -= state.whave;\n            //          if (copy > state.length) { copy = state.length; }\n            //          if (copy > left) { copy = left; }\n            //          left -= copy;\n            //          state.length -= copy;\n            //          do {\n            //            output[put++] = 0;\n            //          } while (--copy);\n            //          if (state.length === 0) { state.mode = LEN; }\n            //          break;\n            //#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          } else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) {\n            copy = state.length;\n          }\n          from_source = state.window;\n        } else { /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) {\n          copy = left;\n        }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) {\n          state.mode = LEN;\n        }\n        break;\n      case LIT:\n        if (left === 0) {\n          break inf_leave;\n        }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            // Use '|' insdead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n              /*UPDATE(state.check, put - _out, _out);*/\n              (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) {\n              break inf_leave;\n            }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n      }\n    }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n    (state.mode === TYPE ? 128 : 0) +\n    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nexport function inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/ ) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nexport function inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nexport function inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */ ) {\n    return Z_STREAM_ERROR;\n  }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexport var inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n", "import msg from './messages';\nimport zstream from './zstream';\nimport {deflateInit2, deflateEnd, deflateReset, deflate} from './deflate';\nimport {inflateInit2, inflate, inflateEnd, inflateReset} from './inflate';\n// import constants from './constants';\n\n\n// zlib modes\nexport var NONE = 0;\nexport var DEFLATE = 1;\nexport var INFLATE = 2;\nexport var GZIP = 3;\nexport var GUNZIP = 4;\nexport var DEFLATERAW = 5;\nexport var INFLATERAW = 6;\nexport var UNZIP = 7;\nexport var Z_NO_FLUSH=         0,\n  Z_PARTIAL_FLUSH=    1,\n  Z_SYNC_FLUSH=    2,\n  Z_FULL_FLUSH=       3,\n  Z_FINISH=       4,\n  Z_BLOCK=           5,\n  Z_TREES=            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK=               0,\n  Z_STREAM_END=       1,\n  Z_NEED_DICT=      2,\n  Z_ERRNO=       -1,\n  Z_STREAM_ERROR=   -2,\n  Z_DATA_ERROR=    -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR=    -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION=         0,\n  Z_BEST_SPEED=             1,\n  Z_BEST_COMPRESSION=       9,\n  Z_DEFAULT_COMPRESSION=   -1,\n\n\n  Z_FILTERED=               1,\n  Z_HUFFMAN_ONLY=           2,\n  Z_RLE=                    3,\n  Z_FIXED=                  4,\n  Z_DEFAULT_STRATEGY=       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY=                 0,\n  Z_TEXT=                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN=                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED=               8;\nexport function Zlib(mode) {\n  if (mode < DEFLATE || mode > UNZIP)\n    throw new TypeError('Bad argument');\n\n  this.mode = mode;\n  this.init_done = false;\n  this.write_in_progress = false;\n  this.pending_close = false;\n  this.windowBits = 0;\n  this.level = 0;\n  this.memLevel = 0;\n  this.strategy = 0;\n  this.dictionary = null;\n}\n\nZlib.prototype.init = function(windowBits, level, memLevel, strategy, dictionary) {\n  this.windowBits = windowBits;\n  this.level = level;\n  this.memLevel = memLevel;\n  this.strategy = strategy;\n  // dictionary not supported.\n\n  if (this.mode === GZIP || this.mode === GUNZIP)\n    this.windowBits += 16;\n\n  if (this.mode === UNZIP)\n    this.windowBits += 32;\n\n  if (this.mode === DEFLATERAW || this.mode === INFLATERAW)\n    this.windowBits = -this.windowBits;\n\n  this.strm = new zstream();\n  var status;\n  switch (this.mode) {\n  case DEFLATE:\n  case GZIP:\n  case DEFLATERAW:\n    status = deflateInit2(\n      this.strm,\n      this.level,\n      Z_DEFLATED,\n      this.windowBits,\n      this.memLevel,\n      this.strategy\n    );\n    break;\n  case INFLATE:\n  case GUNZIP:\n  case INFLATERAW:\n  case UNZIP:\n    status  = inflateInit2(\n      this.strm,\n      this.windowBits\n    );\n    break;\n  default:\n    throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (status !== Z_OK) {\n    this._error(status);\n    return;\n  }\n\n  this.write_in_progress = false;\n  this.init_done = true;\n};\n\nZlib.prototype.params = function() {\n  throw new Error('deflateParams Not supported');\n};\n\nZlib.prototype._writeCheck = function() {\n  if (!this.init_done)\n    throw new Error('write before init');\n\n  if (this.mode === NONE)\n    throw new Error('already finalized');\n\n  if (this.write_in_progress)\n    throw new Error('write already in progress');\n\n  if (this.pending_close)\n    throw new Error('close is pending');\n};\n\nZlib.prototype.write = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this._writeCheck();\n  this.write_in_progress = true;\n\n  var self = this;\n  process.nextTick(function() {\n    self.write_in_progress = false;\n    var res = self._write(flush, input, in_off, in_len, out, out_off, out_len);\n    self.callback(res[0], res[1]);\n\n    if (self.pending_close)\n      self.close();\n  });\n\n  return this;\n};\n\n// set method for Node buffers, used by pako\nfunction bufferSet(data, offset) {\n  for (var i = 0; i < data.length; i++) {\n    this[offset + i] = data[i];\n  }\n}\n\nZlib.prototype.writeSync = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this._writeCheck();\n  return this._write(flush, input, in_off, in_len, out, out_off, out_len);\n};\n\nZlib.prototype._write = function(flush, input, in_off, in_len, out, out_off, out_len) {\n  this.write_in_progress = true;\n\n  if (flush !== Z_NO_FLUSH &&\n      flush !== Z_PARTIAL_FLUSH &&\n      flush !== Z_SYNC_FLUSH &&\n      flush !== Z_FULL_FLUSH &&\n      flush !== Z_FINISH &&\n      flush !== Z_BLOCK) {\n    throw new Error('Invalid flush value');\n  }\n\n  if (input == null) {\n    input = new Buffer(0);\n    in_len = 0;\n    in_off = 0;\n  }\n\n  if (out._set)\n    out.set = out._set;\n  else\n    out.set = bufferSet;\n\n  var strm = this.strm;\n  strm.avail_in = in_len;\n  strm.input = input;\n  strm.next_in = in_off;\n  strm.avail_out = out_len;\n  strm.output = out;\n  strm.next_out = out_off;\n  var status;\n  switch (this.mode) {\n  case DEFLATE:\n  case GZIP:\n  case DEFLATERAW:\n    status = deflate(strm, flush);\n    break;\n  case UNZIP:\n  case INFLATE:\n  case GUNZIP:\n  case INFLATERAW:\n    status = inflate(strm, flush);\n    break;\n  default:\n    throw new Error('Unknown mode ' + this.mode);\n  }\n\n  if (status !== Z_STREAM_END && status !== Z_OK) {\n    this._error(status);\n  }\n\n  this.write_in_progress = false;\n  return [strm.avail_in, strm.avail_out];\n};\n\nZlib.prototype.close = function() {\n  if (this.write_in_progress) {\n    this.pending_close = true;\n    return;\n  }\n\n  this.pending_close = false;\n\n  if (this.mode === DEFLATE || this.mode === GZIP || this.mode === DEFLATERAW) {\n    deflateEnd(this.strm);\n  } else {\n    inflateEnd(this.strm);\n  }\n\n  this.mode = NONE;\n};\nvar status\nZlib.prototype.reset = function() {\n  switch (this.mode) {\n  case DEFLATE:\n  case DEFLATERAW:\n    status = deflateReset(this.strm);\n    break;\n  case INFLATE:\n  case INFLATERAW:\n    status = inflateReset(this.strm);\n    break;\n  }\n\n  if (status !== Z_OK) {\n    this._error(status);\n  }\n};\n\nZlib.prototype._error = function(status) {\n  this.onerror(msg[status] + ': ' + this.strm.msg, status);\n\n  this.write_in_progress = false;\n  if (this.pending_close)\n    this.close();\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport {Transform} from 'stream';\nimport * as _binding from './zlib-lib/binding';\nimport {inherits} from 'util';\nfunction assert (a, msg) {\n  if (!a) {\n    throw new Error(msg);\n  }\n}\nvar binding = {};\nObject.keys(_binding).forEach(function (key) {\n  binding[key] = _binding[key];\n});\n// zlib doesn't provide these, so kludge them in following the same\n// const naming scheme zlib uses.\nbinding.Z_MIN_WINDOWBITS = 8;\nbinding.Z_MAX_WINDOWBITS = 15;\nbinding.Z_DEFAULT_WINDOWBITS = 15;\n\n// fewer than 64 bytes per chunk is stupid.\n// technically it could work with as few as 8, but even 64 bytes\n// is absurdly low.  Usually a MB or more is best.\nbinding.Z_MIN_CHUNK = 64;\nbinding.Z_MAX_CHUNK = Infinity;\nbinding.Z_DEFAULT_CHUNK = (16 * 1024);\n\nbinding.Z_MIN_MEMLEVEL = 1;\nbinding.Z_MAX_MEMLEVEL = 9;\nbinding.Z_DEFAULT_MEMLEVEL = 8;\n\nbinding.Z_MIN_LEVEL = -1;\nbinding.Z_MAX_LEVEL = 9;\nbinding.Z_DEFAULT_LEVEL = binding.Z_DEFAULT_COMPRESSION;\n\n\n// translation table for return codes.\nexport var codes = {\n  Z_OK: binding.Z_OK,\n  Z_STREAM_END: binding.Z_STREAM_END,\n  Z_NEED_DICT: binding.Z_NEED_DICT,\n  Z_ERRNO: binding.Z_ERRNO,\n  Z_STREAM_ERROR: binding.Z_STREAM_ERROR,\n  Z_DATA_ERROR: binding.Z_DATA_ERROR,\n  Z_MEM_ERROR: binding.Z_MEM_ERROR,\n  Z_BUF_ERROR: binding.Z_BUF_ERROR,\n  Z_VERSION_ERROR: binding.Z_VERSION_ERROR\n};\n\nObject.keys(codes).forEach(function(k) {\n  codes[codes[k]] = k;\n});\n\nexport function createDeflate(o) {\n  return new Deflate(o);\n}\n\nexport function createInflate(o) {\n  return new Inflate(o);\n}\n\nexport function createDeflateRaw(o) {\n  return new DeflateRaw(o);\n}\n\nexport function createInflateRaw(o) {\n  return new InflateRaw(o);\n}\n\nexport function createGzip(o) {\n  return new Gzip(o);\n}\n\nexport function createGunzip(o) {\n  return new Gunzip(o);\n}\n\nexport function createUnzip(o) {\n  return new Unzip(o);\n}\n\n\n// Convenience methods.\n// compress/decompress a string or buffer in one step.\nexport function deflate(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Deflate(opts), buffer, callback);\n}\n\nexport function deflateSync(buffer, opts) {\n  return zlibBufferSync(new Deflate(opts), buffer);\n}\n\nexport function gzip(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gzip(opts), buffer, callback);\n}\n\nexport function gzipSync(buffer, opts) {\n  return zlibBufferSync(new Gzip(opts), buffer);\n}\n\nexport function deflateRaw(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new DeflateRaw(opts), buffer, callback);\n}\n\nexport function deflateRawSync(buffer, opts) {\n  return zlibBufferSync(new DeflateRaw(opts), buffer);\n}\n\nexport function unzip(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Unzip(opts), buffer, callback);\n}\n\nexport function unzipSync(buffer, opts) {\n  return zlibBufferSync(new Unzip(opts), buffer);\n}\n\nexport function inflate(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Inflate(opts), buffer, callback);\n}\n\nexport function inflateSync(buffer, opts) {\n  return zlibBufferSync(new Inflate(opts), buffer);\n}\n\nexport function gunzip(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new Gunzip(opts), buffer, callback);\n}\n\nexport function gunzipSync(buffer, opts) {\n  return zlibBufferSync(new Gunzip(opts), buffer);\n}\n\nexport function inflateRaw(buffer, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return zlibBuffer(new InflateRaw(opts), buffer, callback);\n}\n\nexport function inflateRawSync(buffer, opts) {\n  return zlibBufferSync(new InflateRaw(opts), buffer);\n}\n\nfunction zlibBuffer(engine, buffer, callback) {\n  var buffers = [];\n  var nread = 0;\n\n  engine.on('error', onError);\n  engine.on('end', onEnd);\n\n  engine.end(buffer);\n  flow();\n\n  function flow() {\n    var chunk;\n    while (null !== (chunk = engine.read())) {\n      buffers.push(chunk);\n      nread += chunk.length;\n    }\n    engine.once('readable', flow);\n  }\n\n  function onError(err) {\n    engine.removeListener('end', onEnd);\n    engine.removeListener('readable', flow);\n    callback(err);\n  }\n\n  function onEnd() {\n    var buf = Buffer.concat(buffers, nread);\n    buffers = [];\n    callback(null, buf);\n    engine.close();\n  }\n}\n\nfunction zlibBufferSync(engine, buffer) {\n  if (typeof buffer === 'string')\n    buffer = new Buffer(buffer);\n  if (!Buffer.isBuffer(buffer))\n    throw new TypeError('Not a string or buffer');\n\n  var flushFlag = binding.Z_FINISH;\n\n  return engine._processChunk(buffer, flushFlag);\n}\n\n// generic zlib\n// minimal 2-byte header\nexport function Deflate(opts) {\n  if (!(this instanceof Deflate)) return new Deflate(opts);\n  Zlib.call(this, opts, binding.DEFLATE);\n}\n\nexport function Inflate(opts) {\n  if (!(this instanceof Inflate)) return new Inflate(opts);\n  Zlib.call(this, opts, binding.INFLATE);\n}\n\n\n\n// gzip - bigger header, same deflate compression\nexport function Gzip(opts) {\n  if (!(this instanceof Gzip)) return new Gzip(opts);\n  Zlib.call(this, opts, binding.GZIP);\n}\n\nexport function Gunzip(opts) {\n  if (!(this instanceof Gunzip)) return new Gunzip(opts);\n  Zlib.call(this, opts, binding.GUNZIP);\n}\n\n\n\n// raw - no header\nexport function DeflateRaw(opts) {\n  if (!(this instanceof DeflateRaw)) return new DeflateRaw(opts);\n  Zlib.call(this, opts, binding.DEFLATERAW);\n}\n\nexport function InflateRaw(opts) {\n  if (!(this instanceof InflateRaw)) return new InflateRaw(opts);\n  Zlib.call(this, opts, binding.INFLATERAW);\n}\n\n\n// auto-detect header.\nexport function Unzip(opts) {\n  if (!(this instanceof Unzip)) return new Unzip(opts);\n  Zlib.call(this, opts, binding.UNZIP);\n}\n\n\n// the Zlib class they all inherit from\n// This thing manages the queue of requests, and returns\n// true or false if there is anything in the queue when\n// you call the .write() method.\n\nexport function Zlib(opts, mode) {\n  this._opts = opts = opts || {};\n  this._chunkSize = opts.chunkSize || binding.Z_DEFAULT_CHUNK;\n\n  Transform.call(this, opts);\n\n  if (opts.flush) {\n    if (opts.flush !== binding.Z_NO_FLUSH &&\n        opts.flush !== binding.Z_PARTIAL_FLUSH &&\n        opts.flush !== binding.Z_SYNC_FLUSH &&\n        opts.flush !== binding.Z_FULL_FLUSH &&\n        opts.flush !== binding.Z_FINISH &&\n        opts.flush !== binding.Z_BLOCK) {\n      throw new Error('Invalid flush flag: ' + opts.flush);\n    }\n  }\n  this._flushFlag = opts.flush || binding.Z_NO_FLUSH;\n\n  if (opts.chunkSize) {\n    if (opts.chunkSize < binding.Z_MIN_CHUNK ||\n        opts.chunkSize > binding.Z_MAX_CHUNK) {\n      throw new Error('Invalid chunk size: ' + opts.chunkSize);\n    }\n  }\n\n  if (opts.windowBits) {\n    if (opts.windowBits < binding.Z_MIN_WINDOWBITS ||\n        opts.windowBits > binding.Z_MAX_WINDOWBITS) {\n      throw new Error('Invalid windowBits: ' + opts.windowBits);\n    }\n  }\n\n  if (opts.level) {\n    if (opts.level < binding.Z_MIN_LEVEL ||\n        opts.level > binding.Z_MAX_LEVEL) {\n      throw new Error('Invalid compression level: ' + opts.level);\n    }\n  }\n\n  if (opts.memLevel) {\n    if (opts.memLevel < binding.Z_MIN_MEMLEVEL ||\n        opts.memLevel > binding.Z_MAX_MEMLEVEL) {\n      throw new Error('Invalid memLevel: ' + opts.memLevel);\n    }\n  }\n\n  if (opts.strategy) {\n    if (opts.strategy != binding.Z_FILTERED &&\n        opts.strategy != binding.Z_HUFFMAN_ONLY &&\n        opts.strategy != binding.Z_RLE &&\n        opts.strategy != binding.Z_FIXED &&\n        opts.strategy != binding.Z_DEFAULT_STRATEGY) {\n      throw new Error('Invalid strategy: ' + opts.strategy);\n    }\n  }\n\n  if (opts.dictionary) {\n    if (!Buffer.isBuffer(opts.dictionary)) {\n      throw new Error('Invalid dictionary: it should be a Buffer instance');\n    }\n  }\n\n  this._binding = new binding.Zlib(mode);\n\n  var self = this;\n  this._hadError = false;\n  this._binding.onerror = function(message, errno) {\n    // there is no way to cleanly recover.\n    // continuing only obscures problems.\n    self._binding = null;\n    self._hadError = true;\n\n    var error = new Error(message);\n    error.errno = errno;\n    error.code = binding.codes[errno];\n    self.emit('error', error);\n  };\n\n  var level = binding.Z_DEFAULT_COMPRESSION;\n  if (typeof opts.level === 'number') level = opts.level;\n\n  var strategy = binding.Z_DEFAULT_STRATEGY;\n  if (typeof opts.strategy === 'number') strategy = opts.strategy;\n\n  this._binding.init(opts.windowBits || binding.Z_DEFAULT_WINDOWBITS,\n                     level,\n                     opts.memLevel || binding.Z_DEFAULT_MEMLEVEL,\n                     strategy,\n                     opts.dictionary);\n\n  this._buffer = new Buffer(this._chunkSize);\n  this._offset = 0;\n  this._closed = false;\n  this._level = level;\n  this._strategy = strategy;\n\n  this.once('end', this.close);\n}\n\ninherits(Zlib, Transform);\n\nZlib.prototype.params = function(level, strategy, callback) {\n  if (level < binding.Z_MIN_LEVEL ||\n      level > binding.Z_MAX_LEVEL) {\n    throw new RangeError('Invalid compression level: ' + level);\n  }\n  if (strategy != binding.Z_FILTERED &&\n      strategy != binding.Z_HUFFMAN_ONLY &&\n      strategy != binding.Z_RLE &&\n      strategy != binding.Z_FIXED &&\n      strategy != binding.Z_DEFAULT_STRATEGY) {\n    throw new TypeError('Invalid strategy: ' + strategy);\n  }\n\n  if (this._level !== level || this._strategy !== strategy) {\n    var self = this;\n    this.flush(binding.Z_SYNC_FLUSH, function() {\n      self._binding.params(level, strategy);\n      if (!self._hadError) {\n        self._level = level;\n        self._strategy = strategy;\n        if (callback) callback();\n      }\n    });\n  } else {\n    process.nextTick(callback);\n  }\n};\n\nZlib.prototype.reset = function() {\n  return this._binding.reset();\n};\n\n// This is the _flush function called by the transform class,\n// internally, when the last chunk has been written.\nZlib.prototype._flush = function(callback) {\n  this._transform(new Buffer(0), '', callback);\n};\n\nZlib.prototype.flush = function(kind, callback) {\n  var ws = this._writableState;\n\n  if (typeof kind === 'function' || (kind === void 0 && !callback)) {\n    callback = kind;\n    kind = binding.Z_FULL_FLUSH;\n  }\n\n  if (ws.ended) {\n    if (callback)\n      process.nextTick(callback);\n  } else if (ws.ending) {\n    if (callback)\n      this.once('end', callback);\n  } else if (ws.needDrain) {\n    var self = this;\n    this.once('drain', function() {\n      self.flush(callback);\n    });\n  } else {\n    this._flushFlag = kind;\n    this.write(new Buffer(0), '', callback);\n  }\n};\n\nZlib.prototype.close = function(callback) {\n  if (callback)\n    process.nextTick(callback);\n\n  if (this._closed)\n    return;\n\n  this._closed = true;\n\n  this._binding.close();\n\n  var self = this;\n  process.nextTick(function() {\n    self.emit('close');\n  });\n};\n\nZlib.prototype._transform = function(chunk, encoding, cb) {\n  var flushFlag;\n  var ws = this._writableState;\n  var ending = ws.ending || ws.ended;\n  var last = ending && (!chunk || ws.length === chunk.length);\n\n  if (!chunk === null && !Buffer.isBuffer(chunk))\n    return cb(new Error('invalid input'));\n\n  // If it's the last chunk, or a final flush, we use the Z_FINISH flush flag.\n  // If it's explicitly flushing at some other time, then we use\n  // Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression\n  // goodness.\n  if (last)\n    flushFlag = binding.Z_FINISH;\n  else {\n    flushFlag = this._flushFlag;\n    // once we've flushed the last of the queue, stop flushing and\n    // go back to the normal behavior.\n    if (chunk.length >= ws.length) {\n      this._flushFlag = this._opts.flush || binding.Z_NO_FLUSH;\n    }\n  }\n\n  this._processChunk(chunk, flushFlag, cb);\n};\n\nZlib.prototype._processChunk = function(chunk, flushFlag, cb) {\n  var availInBefore = chunk && chunk.length;\n  var availOutBefore = this._chunkSize - this._offset;\n  var inOff = 0;\n\n  var self = this;\n\n  var async = typeof cb === 'function';\n\n  if (!async) {\n    var buffers = [];\n    var nread = 0;\n\n    var error;\n    this.on('error', function(er) {\n      error = er;\n    });\n\n    do {\n      var res = this._binding.writeSync(flushFlag,\n                                        chunk, // in\n                                        inOff, // in_off\n                                        availInBefore, // in_len\n                                        this._buffer, // out\n                                        this._offset, //out_off\n                                        availOutBefore); // out_len\n    } while (!this._hadError && callback(res[0], res[1]));\n\n    if (this._hadError) {\n      throw error;\n    }\n\n    var buf = Buffer.concat(buffers, nread);\n    this.close();\n\n    return buf;\n  }\n\n  var req = this._binding.write(flushFlag,\n                                chunk, // in\n                                inOff, // in_off\n                                availInBefore, // in_len\n                                this._buffer, // out\n                                this._offset, //out_off\n                                availOutBefore); // out_len\n\n  req.buffer = chunk;\n  req.callback = callback;\n\n  function callback(availInAfter, availOutAfter) {\n    if (self._hadError)\n      return;\n\n    var have = availOutBefore - availOutAfter;\n    assert(have >= 0, 'have should not go down');\n\n    if (have > 0) {\n      var out = self._buffer.slice(self._offset, self._offset + have);\n      self._offset += have;\n      // serve some output to the consumer.\n      if (async) {\n        self.push(out);\n      } else {\n        buffers.push(out);\n        nread += out.length;\n      }\n    }\n\n    // exhausted the output buffer, or used all the input create a new one.\n    if (availOutAfter === 0 || self._offset >= self._chunkSize) {\n      availOutBefore = self._chunkSize;\n      self._offset = 0;\n      self._buffer = new Buffer(self._chunkSize);\n    }\n\n    if (availOutAfter === 0) {\n      // Not actually done.  Need to reprocess.\n      // Also, update the availInBefore to the availInAfter value,\n      // so that if we have to hit it a third (fourth, etc.) time,\n      // it'll have the correct byte counts.\n      inOff += (availInBefore - availInAfter);\n      availInBefore = availInAfter;\n\n      if (!async)\n        return true;\n\n      var newReq = self._binding.write(flushFlag,\n                                       chunk,\n                                       inOff,\n                                       availInBefore,\n                                       self._buffer,\n                                       self._offset,\n                                       self._chunkSize);\n      newReq.callback = callback; // this same function\n      newReq.buffer = chunk;\n      return;\n    }\n\n    if (!async)\n      return false;\n\n    // finished with the chunk.\n    cb();\n  }\n};\n\ninherits(Deflate, Zlib);\ninherits(Inflate, Zlib);\ninherits(Gzip, Zlib);\ninherits(Gunzip, Zlib);\ninherits(DeflateRaw, Zlib);\ninherits(InflateRaw, Zlib);\ninherits(Unzip, Zlib);\nexport default {\n  codes: codes,\n  createDeflate: createDeflate,\n  createInflate: createInflate,\n  createDeflateRaw: createDeflateRaw,\n  createInflateRaw: createInflateRaw,\n  createGzip: createGzip,\n  createGunzip: createGunzip,\n  createUnzip: createUnzip,\n  deflate: deflate,\n  deflateSync: deflateSync,\n  gzip: gzip,\n  gzipSync: gzipSync,\n  deflateRaw: deflateRaw,\n  deflateRawSync: deflateRawSync,\n  unzip: unzip,\n  unzipSync: unzipSync,\n  inflate: inflate,\n  inflateSync: inflateSync,\n  gunzip: gunzip,\n  gunzipSync: gunzipSync,\n  inflateRaw: inflateRaw,\n  inflateRawSync: inflateRawSync,\n  Deflate: Deflate,\n  Inflate: Inflate,\n  Gzip: Gzip,\n  Gunzip: Gunzip,\n  DeflateRaw: DeflateRaw,\n  InflateRaw: InflateRaw,\n  Unzip: Unzip,\n  Zlib: Zlib\n};\n", "\nconst polyfill = require('zlib')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "'use strict';\n\nconst ZLib = require('zlib');\nconst Utils = require('../misc/utils');\n\n/**\n * MySQL packet parser\n * see : https://mariadb.com/kb/en/library/0-packet/\n */\nclass CompressionInputStream {\n  constructor(reader, receiveQueue, opts, info) {\n    this.reader = reader;\n    this.receiveQueue = receiveQueue;\n    this.info = info;\n    this.opts = opts;\n    this.header = Buffer.allocUnsafe(7);\n    this.headerLen = 0;\n    this.compressPacketLen = null;\n    this.packetLen = null;\n    this.remainingLen = null;\n\n    this.parts = null;\n    this.partsTotalLen = 0;\n  }\n\n  receivePacket(chunk) {\n    let cmd = this.currentCmd();\n    if (this.opts.debugCompress) {\n      this.opts.logger.network(\n        `<== conn:${this.info.threadId ? this.info.threadId : -1} ${\n          cmd\n            ? cmd.onPacketReceive\n              ? cmd.constructor.name + '.' + cmd.onPacketReceive.name\n              : cmd.constructor.name\n            : 'no command'\n        } (compress)\\n${Utils.log(this.opts, chunk, 0, chunk.length, this.header)}`\n      );\n    }\n    if (cmd) cmd.compressSequenceNo = this.header[3];\n    const unCompressLen = this.header[4] | (this.header[5] << 8) | (this.header[6] << 16);\n    if (unCompressLen === 0) {\n      this.reader.onData(chunk);\n    } else {\n      //use synchronous inflating, to ensure FIFO packet order\n      const unCompressChunk = ZLib.inflateSync(chunk);\n      this.reader.onData(unCompressChunk);\n    }\n  }\n\n  currentCmd() {\n    let cmd;\n    while ((cmd = this.receiveQueue.peek())) {\n      if (cmd.onPacketReceive) return cmd;\n      this.receiveQueue.shift();\n    }\n    return null;\n  }\n\n  resetHeader() {\n    this.remainingLen = null;\n    this.headerLen = 0;\n  }\n\n  onData(chunk) {\n    let pos = 0;\n    let length;\n    const chunkLen = chunk.length;\n\n    do {\n      if (this.remainingLen) {\n        length = this.remainingLen;\n      } else if (this.headerLen === 0 && chunkLen - pos >= 7) {\n        this.header[0] = chunk[pos];\n        this.header[1] = chunk[pos + 1];\n        this.header[2] = chunk[pos + 2];\n        this.header[3] = chunk[pos + 3];\n        this.header[4] = chunk[pos + 4];\n        this.header[5] = chunk[pos + 5];\n        this.header[6] = chunk[pos + 6];\n        this.headerLen = 7;\n        pos += 7;\n        this.compressPacketLen = this.header[0] + (this.header[1] << 8) + (this.header[2] << 16);\n        this.packetLen = this.header[4] | (this.header[5] << 8) | (this.header[6] << 16);\n        if (this.packetLen === 0) this.packetLen = this.compressPacketLen;\n        length = this.compressPacketLen;\n      } else {\n        length = null;\n        while (chunkLen - pos > 0) {\n          this.header[this.headerLen++] = chunk[pos++];\n          if (this.headerLen === 7) {\n            this.compressPacketLen = this.header[0] + (this.header[1] << 8) + (this.header[2] << 16);\n            this.packetLen = this.header[4] | (this.header[5] << 8) | (this.header[6] << 16);\n            if (this.packetLen === 0) this.packetLen = this.compressPacketLen;\n            length = this.compressPacketLen;\n            break;\n          }\n        }\n      }\n\n      if (length) {\n        if (chunkLen - pos >= length) {\n          const buf = chunk.slice(pos, pos + length);\n          pos += length;\n          if (this.parts) {\n            this.parts.push(buf);\n            this.partsTotalLen += length;\n\n            if (this.compressPacketLen < 0xffffff) {\n              let buf = Buffer.concat(this.parts, this.partsTotalLen);\n              this.parts = null;\n              this.receivePacket(buf);\n            }\n          } else {\n            if (this.compressPacketLen < 0xffffff) {\n              this.receivePacket(buf);\n            } else {\n              this.parts = [buf];\n              this.partsTotalLen = length;\n            }\n          }\n          this.resetHeader();\n        } else {\n          const buf = chunk.slice(pos, chunkLen);\n          if (!this.parts) {\n            this.parts = [buf];\n            this.partsTotalLen = chunkLen - pos;\n          } else {\n            this.parts.push(buf);\n            this.partsTotalLen += chunkLen - pos;\n          }\n          this.remainingLen = length - (chunkLen - pos);\n          return;\n        }\n      }\n    } while (pos < chunkLen);\n  }\n}\n\nmodule.exports = CompressionInputStream;\n", "'use strict';\n\nconst Utils = require('../misc/utils');\nconst ZLib = require('zlib');\n\n//increase by level to avoid buffer copy.\nconst SMALL_BUFFER_SIZE = 2048;\nconst MEDIUM_BUFFER_SIZE = 131072; //128k\nconst LARGE_BUFFER_SIZE = 1048576; //1M\nconst MAX_BUFFER_SIZE = 16777222; //16M + 7\n\n/**\n/**\n * MySQL compression filter.\n * see https://mariadb.com/kb/en/library/0-packet/#compressed-packet\n */\nclass CompressionOutputStream {\n  /**\n   * Constructor\n   *\n   * @param socket    current socket\n   * @param opts      current connection options\n   * @param info      current connection information\n   * @constructor\n   */\n  constructor(socket, opts, info) {\n    this.info = info;\n    this.opts = opts;\n    this.pos = 7;\n    this.header = Buffer.allocUnsafe(7);\n    this.buf = Buffer.allocUnsafe(SMALL_BUFFER_SIZE);\n    this.writer = (buffer) => {\n      socket.write(buffer);\n    };\n  }\n\n  growBuffer(len) {\n    let newCapacity;\n    if (len + this.pos < MEDIUM_BUFFER_SIZE) {\n      newCapacity = MEDIUM_BUFFER_SIZE;\n    } else if (len + this.pos < LARGE_BUFFER_SIZE) {\n      newCapacity = LARGE_BUFFER_SIZE;\n    } else newCapacity = MAX_BUFFER_SIZE;\n\n    let newBuf = Buffer.allocUnsafe(newCapacity);\n    this.buf.copy(newBuf, 0, 0, this.pos);\n    this.buf = newBuf;\n  }\n\n  writeBuf(arr, cmd) {\n    let off = 0,\n      len = arr.length;\n    if (len > this.buf.length - this.pos) {\n      if (this.buf.length !== MAX_BUFFER_SIZE) {\n        this.growBuffer(len);\n      }\n\n      //max buffer size\n      if (len > this.buf.length - this.pos) {\n        //not enough space in buffer, will stream :\n        // fill buffer and flush until all data are snd\n        let remainingLen = len;\n\n        while (true) {\n          //filling buffer\n          let lenToFillBuffer = Math.min(MAX_BUFFER_SIZE - this.pos, remainingLen);\n          arr.copy(this.buf, this.pos, off, off + lenToFillBuffer);\n          remainingLen -= lenToFillBuffer;\n          off += lenToFillBuffer;\n          this.pos += lenToFillBuffer;\n\n          if (remainingLen === 0) return;\n          this.flush(false, cmd, remainingLen);\n        }\n      }\n    }\n    arr.copy(this.buf, this.pos, off, off + len);\n    this.pos += len;\n  }\n\n  /**\n   * Flush the internal buffer.\n   */\n  flush(cmdEnd, cmd, remainingLen) {\n    if (this.pos < 1536) {\n      //*******************************************************************************\n      // small packet, no compression\n      //*******************************************************************************\n\n      this.buf[0] = this.pos - 7;\n      this.buf[1] = (this.pos - 7) >>> 8;\n      this.buf[2] = (this.pos - 7) >>> 16;\n      this.buf[3] = ++cmd.compressSequenceNo;\n      this.buf[4] = 0;\n      this.buf[5] = 0;\n      this.buf[6] = 0;\n\n      if (this.opts.debugCompress) {\n        this.opts.logger.network(\n          `==> conn:${this.info.threadId ? this.info.threadId : -1} ${\n            cmd ? cmd.constructor.name + '(0,' + this.pos + ')' : 'unknown'\n          } (compress)\\n${Utils.log(this.opts, this.buf, 0, this.pos)}`\n        );\n      }\n\n      this.writer(this.buf.slice(0, this.pos));\n    } else {\n      //*******************************************************************************\n      // compressing packet\n      //*******************************************************************************\n      //use synchronous inflating, to ensure FIFO packet order\n      const compressChunk = ZLib.deflateSync(this.buf.slice(7, this.pos));\n      const compressChunkLen = compressChunk.length;\n\n      this.header[0] = compressChunkLen;\n      this.header[1] = compressChunkLen >>> 8;\n      this.header[2] = compressChunkLen >>> 16;\n      this.header[3] = ++cmd.compressSequenceNo;\n      this.header[4] = this.pos - 7;\n      this.header[5] = (this.pos - 7) >>> 8;\n      this.header[6] = (this.pos - 7) >>> 16;\n\n      if (this.opts.debugCompress) {\n        this.opts.logger.network(\n          `==> conn:${this.info.threadId ? this.info.threadId : -1} ${\n            cmd ? cmd.constructor.name + '(0,' + this.pos + '=>' + compressChunkLen + ')' : 'unknown'\n          } (compress)\\n${Utils.log(this.opts, compressChunk, 0, compressChunkLen, this.header)}`\n        );\n      }\n\n      this.writer(this.header);\n      this.writer(compressChunk);\n      if (cmdEnd && compressChunkLen === MAX_BUFFER_SIZE) this.writeEmptyPacket(cmd);\n      this.header = Buffer.allocUnsafe(7);\n    }\n    this.buf = remainingLen\n      ? CompressionOutputStream.allocateBuffer(remainingLen)\n      : Buffer.allocUnsafe(SMALL_BUFFER_SIZE);\n    this.pos = 7;\n  }\n\n  static allocateBuffer(len) {\n    if (len + 4 < SMALL_BUFFER_SIZE) {\n      return Buffer.allocUnsafe(SMALL_BUFFER_SIZE);\n    } else if (len + 4 < MEDIUM_BUFFER_SIZE) {\n      return Buffer.allocUnsafe(MEDIUM_BUFFER_SIZE);\n    } else if (len + 4 < LARGE_BUFFER_SIZE) {\n      return Buffer.allocUnsafe(LARGE_BUFFER_SIZE);\n    }\n    return Buffer.allocUnsafe(MAX_BUFFER_SIZE);\n  }\n\n  writeEmptyPacket(cmd) {\n    const emptyBuf = Buffer.from([0x00, 0x00, 0x00, cmd.compressSequenceNo, 0x00, 0x00, 0x00]);\n\n    if (this.opts.debugCompress) {\n      this.opts.logger.network(\n        `==> conn:${this.info.threadId ? this.info.threadId : -1} ${\n          cmd ? cmd.constructor.name + '(0,' + this.pos + ')' : 'unknown'\n        } (compress)\\n${Utils.log(this.opts, emptyBuf, 0, 7)}`\n      );\n    }\n\n    this.writer(emptyBuf);\n  }\n}\n\nmodule.exports = CompressionOutputStream;\n", "/**\n * possible server status flag value\n * see https://mariadb.com/kb/en/library/ok_packet/#server-status-flag\n * @type {number}\n */\n//A transaction is currently active\nmodule.exports.STATUS_IN_TRANS = 1;\n//Autocommit mode is set\nmodule.exports.STATUS_AUTOCOMMIT = 2;\n//more results exists (more packet follow)\nmodule.exports.MORE_RESULTS_EXISTS = 8;\nmodule.exports.QUERY_NO_GOOD_INDEX_USED = 16;\nmodule.exports.QUERY_NO_INDEX_USED = 32;\n//when using COM_STMT_FETCH, indicate that current cursor still has result (deprecated)\nmodule.exports.STATUS_CURSOR_EXISTS = 64;\n//when using COM_STMT_FETCH, indicate that current cursor has finished to send results (deprecated)\nmodule.exports.STATUS_LAST_ROW_SENT = 128;\n//database has been dropped\nmodule.exports.STATUS_DB_DROPPED = 1 << 8;\n//current escape mode is \"no backslash escape\"\nmodule.exports.STATUS_NO_BACKSLASH_ESCAPES = 1 << 9;\n//A DDL change did have an impact on an existing PREPARE (an automatic reprepare has been executed)\nmodule.exports.STATUS_METADATA_CHANGED = 1 << 10;\nmodule.exports.QUERY_WAS_SLOW = 1 << 11;\n//this result-set contain stored procedure output parameter\nmodule.exports.PS_OUT_PARAMS = 1 << 12;\n//current transaction is a read-only transaction\nmodule.exports.STATUS_IN_TRANS_READONLY = 1 << 13;\n//session state change. see Session change type for more information\nmodule.exports.SESSION_STATE_CHANGED = 1 << 14;\n", "'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Infinity;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge === Infinity ? undefined : Date.now() + this.maxAge} = {}) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\tmaxAge\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry: maxAge});\n\t\t}\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\t\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n}\n\nmodule.exports = QuickLRU;\n", "'use strict';\nconst QuickLRU = require('@alloc/quick-lru');\n\nclass ConnectionInformation {\n  constructor(opts) {\n    this.threadId = -1;\n    this.status = null;\n    this.serverVersion = null;\n    this.serverCapabilities = null;\n    if (opts.prepareCacheLength > 0) {\n      this._prepareCache = new QuickLRU({ maxSize: opts.prepareCacheLength });\n    }\n  }\n\n  hasMinVersion(major, minor, patch) {\n    if (!this.serverVersion) throw new Error('cannot know if server version until connection is established');\n\n    if (!major) throw new Error('a major version must be set');\n\n    if (!minor) minor = 0;\n    if (!patch) patch = 0;\n\n    let ver = this.serverVersion;\n    return (\n      ver.major > major ||\n      (ver.major === major && ver.minor > minor) ||\n      (ver.major === major && ver.minor === minor && ver.patch >= patch)\n    );\n  }\n\n  isMariaDB() {\n    if (!this.serverVersion) throw new Error('cannot know if server is MariaDB until connection is established');\n    return this.serverVersion.mariaDb;\n  }\n\n  /**\n   * Parse raw info to set server major/minor/patch values\n   * @param info\n   */\n  static parseVersionString(info) {\n    let car;\n    let offset = 0;\n    let type = 0;\n    let val = 0;\n\n    for (; offset < info.serverVersion.raw.length; offset++) {\n      car = info.serverVersion.raw.charCodeAt(offset);\n      if (car < 48 || car > 57) {\n        switch (type) {\n          case 0:\n            info.serverVersion.major = val;\n            break;\n          case 1:\n            info.serverVersion.minor = val;\n            break;\n          case 2:\n            info.serverVersion.patch = val;\n            return;\n        }\n        type++;\n        val = 0;\n      } else {\n        val = val * 10 + car - 48;\n      }\n    }\n    //serverVersion finished by number like \"5.5.57\", assign patchVersion\n    if (type === 2) info.serverVersion.patch = val;\n  }\n}\n\nmodule.exports = ConnectionInformation;\n", "export default {};\n", "\nconst polyfill = require('tls')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "/**\n * Capabilities list ( with 'CLIENT_' removed)\n * see : https://mariadb.com/kb/en/library/1-connecting-connecting/#capabilities\n */\n/* mysql/old mariadb server/client */\nmodule.exports.MYSQL = BigInt(1);\n/* Found instead of affected rows */\nmodule.exports.FOUND_ROWS = BigInt(2);\n/* get all column flags */\nmodule.exports.LONG_FLAG = BigInt(4);\n/* one can specify db on connect */\nmodule.exports.CONNECT_WITH_DB = BigInt(8);\n/* don't allow database.table.column */\nmodule.exports.NO_SCHEMA = BigInt(1) << BigInt(4);\n/* can use compression protocol */\nmodule.exports.COMPRESS = BigInt(1) << BigInt(5);\n/* odbc client */\nmodule.exports.ODBC = BigInt(1) << BigInt(6);\n/* can use LOAD DATA LOCAL */\nmodule.exports.LOCAL_FILES = BigInt(1) << BigInt(7);\n/* ignore spaces before '' */\nmodule.exports.IGNORE_SPACE = BigInt(1) << BigInt(8);\n/* new 4.1 protocol */\nmodule.exports.PROTOCOL_41 = BigInt(1) << BigInt(9);\n/* this is an interactive client */\nmodule.exports.INTERACTIVE = BigInt(1) << BigInt(10);\n/* switch to ssl after handshake */\nmodule.exports.SSL = BigInt(1) << BigInt(11);\n/* IGNORE sigpipes */\nmodule.exports.IGNORE_SIGPIPE = BigInt(1) << BigInt(12);\n/* client knows about transactions */\nmodule.exports.TRANSACTIONS = BigInt(1) << BigInt(13);\n/* old flag for 4.1 protocol  */\nmodule.exports.RESERVED = BigInt(1) << BigInt(14);\n/* new 4.1 authentication */\nmodule.exports.SECURE_CONNECTION = BigInt(1) << BigInt(15);\n/* enable/disable multi-stmt support */\nmodule.exports.MULTI_STATEMENTS = BigInt(1) << BigInt(16);\n/* enable/disable multi-results */\nmodule.exports.MULTI_RESULTS = BigInt(1) << BigInt(17);\n/* multi-results in ps-protocol */\nmodule.exports.PS_MULTI_RESULTS = BigInt(1) << BigInt(18);\n/* client supports plugin authentication */\nmodule.exports.PLUGIN_AUTH = BigInt(1) << BigInt(19);\n/* permits connection attributes */\nmodule.exports.CONNECT_ATTRS = BigInt(1) << BigInt(20);\n/* Enable authentication response packet to be larger than 255 bytes. */\nmodule.exports.PLUGIN_AUTH_LENENC_CLIENT_DATA = BigInt(1) << BigInt(21);\n/* Don't close the connection for a connection with expired password. */\nmodule.exports.CAN_HANDLE_EXPIRED_PASSWORDS = BigInt(1) << BigInt(22);\n/* Capable of handling server state change information. Its a hint to the\n  server to include the state change information in Ok packet. */\nmodule.exports.SESSION_TRACK = BigInt(1) << BigInt(23);\n/* Client no longer needs EOF packet */\nmodule.exports.DEPRECATE_EOF = BigInt(1) << BigInt(24);\nmodule.exports.SSL_VERIFY_SERVER_CERT = BigInt(1) << BigInt(30);\n\n/* MariaDB extended capabilities */\n\n/* Permit bulk insert*/\nmodule.exports.MARIADB_CLIENT_STMT_BULK_OPERATIONS = BigInt(1) << BigInt(34);\n\n/* Clients supporting extended metadata */\nmodule.exports.MARIADB_CLIENT_EXTENDED_TYPE_INFO = BigInt(1) << BigInt(35);\nmodule.exports.MARIADB_CLIENT_CACHE_METADATA = BigInt(1) << BigInt(36);\n", "/**\n * Session change type.\n * see : https://mariadb.com/kb/en/library/ok_packet/#session-change-type\n * @type {number}\n */\n\nmodule.exports.SESSION_TRACK_SYSTEM_VARIABLES = 0;\nmodule.exports.SESSION_TRACK_SCHEMA = 1;\nmodule.exports.SESSION_TRACK_STATE_CHANGE = 2;\nmodule.exports.SESSION_TRACK_GTIDS = 3;\nmodule.exports.SESSION_TRACK_TRANSACTION_CHARACTERISTICS = 4;\nmodule.exports.SESSION_TRACK_TRANSACTION_STATE = 5;\n", "'use strict';\n\n/**\n * Ok_Packet\n * see https://mariadb.com/kb/en/ok_packet/\n */\nclass OkPacket {\n  constructor(affectedRows, insertId, warningStatus) {\n    this.affectedRows = affectedRows;\n    this.insertId = insertId;\n    this.warningStatus = warningStatus;\n  }\n}\n\nmodule.exports = OkPacket;\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst Errors = require('../misc/errors');\nconst ServerStatus = require('../const/server-status');\nconst StateChange = require('../const/state-change');\nconst Collations = require('../const/collations');\nconst OkPacket = require('./class/ok-packet');\n\n/**\n * Default command interface.\n */\nclass Command extends EventEmitter {\n  constructor(resolve, reject) {\n    super();\n    this.sequenceNo = -1;\n    this.compressSequenceNo = -1;\n    this.resolve = resolve;\n    this.reject = reject;\n    this.sending = false;\n  }\n\n  displaySql() {\n    return null;\n  }\n\n  /**\n   * Throw an an unexpected error.\n   * server exchange will still be read to keep connection in a good state, but promise will be rejected.\n   *\n   * @param msg message\n   * @param fatal is error fatal for connection\n   * @param info current server state information\n   * @param sqlState error sqlState\n   * @param errno error number\n   */\n  throwUnexpectedError(msg, fatal, info, sqlState, errno) {\n    const err = Errors.createError(msg, errno, info, sqlState, this.displaySql(), fatal, this.stack, false);\n    if (this.reject) {\n      process.nextTick(this.reject, err);\n      this.resolve = null;\n      this.reject = null;\n    }\n    return err;\n  }\n\n  /**\n   * Create and throw new Error from error information\n   * only first called throwing an error or successfully end will be executed.\n   *\n   * @param msg message\n   * @param fatal is error fatal for connection\n   * @param info current server state information\n   * @param sqlState error sqlState\n   * @param errno error number\n   */\n  throwNewError(msg, fatal, info, sqlState, errno) {\n    this.onPacketReceive = null;\n    const err = this.throwUnexpectedError(msg, fatal, info, sqlState, errno);\n    this.emit('end');\n    return err;\n  }\n\n  /**\n   * Throw Error\n   *  only first called throwing an error or successfully end will be executed.\n   *\n   * @param err error to be thrown\n   * @param info current server state information\n   */\n  throwError(err, info) {\n    this.onPacketReceive = null;\n    if (this.reject) {\n      if (this.stack) {\n        err = Errors.createError(\n          err.text ? err.text : err.message,\n          err.errno,\n          info,\n          err.sqlState,\n          err.sql,\n          err.fatal,\n          this.stack,\n          false\n        );\n      }\n      this.resolve = null;\n      process.nextTick(this.reject, err);\n      this.reject = null;\n    }\n    this.emit('end', err);\n  }\n\n  /**\n   * Successfully end command.\n   * only first called throwing an error or successfully end will be executed.\n   *\n   * @param val return value.\n   */\n  successEnd(val) {\n    this.onPacketReceive = null;\n    if (this.resolve) {\n      this.reject = null;\n      process.nextTick(this.resolve, val);\n      this.resolve = null;\n    }\n    this.emit('end');\n  }\n\n  parseOkPacket(packet, out, opts, info) {\n    packet.skip(1); //skip header\n\n    const affectedRows = packet.readUnsignedLength();\n    let insertId = packet.readSignedLengthBigInt();\n    if (insertId != null && (opts.supportBigNumbers || opts.insertIdAsNumber)) {\n      if (opts.supportBigNumbers && (opts.bigNumberStrings || !Number.isSafeInteger(Number(insertId)))) {\n        insertId = insertId.toString();\n      } else insertId = Number(insertId);\n    }\n    info.status = packet.readUInt16();\n\n    const okPacket = new OkPacket(affectedRows, insertId, packet.readUInt16());\n\n    if (info.status & ServerStatus.SESSION_STATE_CHANGED) {\n      packet.skipLengthCodedNumber();\n      while (packet.remaining()) {\n        const subPacket = packet.subPacketLengthEncoded();\n        while (subPacket.remaining()) {\n          const type = subPacket.readUInt8();\n          switch (type) {\n            case StateChange.SESSION_TRACK_SYSTEM_VARIABLES:\n              const subSubPacket = subPacket.subPacketLengthEncoded();\n              const variable = subSubPacket.readStringLengthEncoded();\n              const value = subSubPacket.readStringLengthEncoded();\n\n              switch (variable) {\n                case 'character_set_client':\n                  info.collation = Collations.fromCharset(value);\n                  if (info.collation === undefined) {\n                    this.throwError(new Error(\"unknown charset : '\" + value + \"'\"), info);\n                    return;\n                  }\n                  opts.emit('collation', info.collation);\n                  break;\n\n                default:\n                //variable not used by driver\n              }\n              break;\n\n            case StateChange.SESSION_TRACK_SCHEMA:\n              const subSubPacket2 = subPacket.subPacketLengthEncoded();\n              info.database = subSubPacket2.readStringLengthEncoded();\n              break;\n          }\n        }\n      }\n    }\n\n    return okPacket;\n  }\n}\n\nmodule.exports = Command;\n", "'use strict';\n\nconst Capabilities = require('../../const/capabilities');\nconst Collations = require('../../const/collations');\nconst ConnectionInformation = require('../../misc/connection-information');\n\n/**\n * Parser server initial handshake.\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/#initial-handshake-packet\n */\nclass InitialHandshake {\n  constructor(packet, info) {\n    //protocolVersion\n    packet.skip(1);\n    info.serverVersion = {};\n    info.serverVersion.raw = packet.readStringNullEnded();\n    info.threadId = packet.readUInt32();\n\n    let seed1 = packet.readBuffer(8);\n    packet.skip(1); //reserved byte\n\n    let serverCapabilities = BigInt(packet.readUInt16());\n    info.collation = Collations.fromIndex(packet.readUInt8());\n    info.status = packet.readUInt16();\n    serverCapabilities += BigInt(packet.readUInt16()) << BigInt(16);\n\n    let saltLength = 0;\n    if (serverCapabilities & Capabilities.PLUGIN_AUTH) {\n      saltLength = Math.max(12, packet.readUInt8() - 9);\n    } else {\n      packet.skip(1);\n    }\n    if (serverCapabilities & Capabilities.MYSQL) {\n      packet.skip(10);\n    } else {\n      packet.skip(6);\n      serverCapabilities += BigInt(packet.readUInt32()) << BigInt(32);\n    }\n\n    if (serverCapabilities & Capabilities.SECURE_CONNECTION) {\n      let seed2 = packet.readBuffer(saltLength);\n      info.seed = Buffer.concat([seed1, seed2]);\n    } else {\n      info.seed = seed1;\n    }\n    packet.skip(1);\n    info.serverCapabilities = serverCapabilities;\n\n    /**\n     * check for MariaDB 10.x replication hack , remove fake prefix if needed\n     * MDEV-4088: in 10.0+, the real version string maybe prefixed with \"5.5.5-\",\n     * to workaround bugs in Oracle MySQL replication\n     **/\n\n    if (info.serverVersion.raw.startsWith('5.5.5-')) {\n      info.serverVersion.mariaDb = true;\n      info.serverVersion.raw = info.serverVersion.raw.substring('5.5.5-'.length);\n    } else {\n      //Support for MDEV-7780 faking server version\n      info.serverVersion.mariaDb =\n        info.serverVersion.raw.includes('MariaDB') || (serverCapabilities & Capabilities.MYSQL) === BigInt(0);\n    }\n\n    if (serverCapabilities & Capabilities.PLUGIN_AUTH) {\n      this.pluginName = packet.readStringNullEnded();\n    } else {\n      this.pluginName = '';\n    }\n    ConnectionInformation.parseVersionString(info);\n  }\n}\n\nmodule.exports = InitialHandshake;\n", "'use strict';\n\nconst Command = require('../../command');\n\n/**\n * Base authentication plugin\n */\nclass PluginAuth extends Command {\n  constructor(resolve, reject, multiAuthResolver) {\n    super(resolve, reject);\n    this.multiAuthResolver = multiAuthResolver;\n  }\n\n  successSend(packet, out, opts, info) {\n    this.multiAuthResolver(packet, out, opts, info);\n  }\n}\n\nmodule.exports = PluginAuth;\n", "export default {};\n", "\nconst polyfill = require('crypto')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "'use strict';\n\nconst PluginAuth = require('./plugin-auth');\nconst Crypto = require('crypto');\n\n/**\n * Standard authentication plugin\n */\nclass NativePasswordAuth extends PluginAuth {\n  constructor(packSeq, compressPackSeq, pluginData, resolve, reject, multiAuthResolver) {\n    super(resolve, reject, multiAuthResolver);\n    this.pluginData = pluginData;\n    this.sequenceNo = packSeq;\n    this.compressSequenceNo = compressPackSeq;\n  }\n\n  start(out, opts, info) {\n    //seed is ended with a null byte value.\n    const data = this.pluginData.slice(0, 20);\n    let authToken = NativePasswordAuth.encryptPassword(opts.password, data, 'sha1');\n\n    out.startPacket(this);\n    if (authToken.length > 0) {\n      out.writeBuffer(authToken, 0, authToken.length);\n      out.flushPacket();\n    } else {\n      out.writeEmptyPacket(true);\n    }\n    this.emit('send_end');\n    this.onPacketReceive = this.successSend;\n  }\n\n  static encryptPassword(password, seed, algorithm) {\n    if (!password) return Buffer.alloc(0);\n\n    let hash = Crypto.createHash(algorithm);\n    let stage1 = hash.update(password, 'utf8').digest();\n    hash = Crypto.createHash(algorithm);\n\n    let stage2 = hash.update(stage1).digest();\n    hash = Crypto.createHash(algorithm);\n\n    hash.update(seed);\n    hash.update(stage2);\n\n    let digest = hash.digest();\n    let returnBytes = Buffer.allocUnsafe(digest.length);\n    for (let i = 0; i < digest.length; i++) {\n      returnBytes[i] = stage1[i] ^ digest[i];\n    }\n    return returnBytes;\n  }\n}\n\nmodule.exports = NativePasswordAuth;\n", "'use strict';\n\nconst PluginAuth = require('./plugin-auth');\nconst Crypto = require('crypto');\n\n/**\n * Standard authentication plugin\n */\nclass Ed25519PasswordAuth extends PluginAuth {\n  constructor(packSeq, compressPackSeq, pluginData, resolve, reject, multiAuthResolver) {\n    super(resolve, reject, multiAuthResolver);\n    this.pluginData = pluginData;\n    this.sequenceNo = packSeq;\n  }\n\n  start(out, opts, info) {\n    //seed is ended with a null byte value.\n    const data = this.pluginData;\n\n    const sign = Ed25519PasswordAuth.encryptPassword(opts.password, data);\n    out.startPacket(this);\n    out.writeBuffer(sign, 0, sign.length);\n    out.flushPacket();\n    this.emit('send_end');\n    this.onPacketReceive = this.successSend;\n  }\n\n  static encryptPassword(password, seed) {\n    if (!password) return Buffer.alloc(0);\n\n    let i, j;\n    let p = [gf(), gf(), gf(), gf()];\n    const signedMsg = Buffer.alloc(96);\n    const bytePwd = Buffer.from(password);\n\n    let hash = Crypto.createHash('sha512');\n    const d = hash.update(bytePwd).digest();\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n\n    for (i = 0; i < 32; i++) signedMsg[64 + i] = seed[i];\n    for (i = 0; i < 32; i++) signedMsg[32 + i] = d[32 + i];\n\n    hash = Crypto.createHash('sha512');\n    const r = hash.update(signedMsg.slice(32, 96)).digest();\n\n    reduce(r);\n    scalarbase(p, r);\n    pack(signedMsg, p);\n\n    p = [gf(), gf(), gf(), gf()];\n\n    scalarbase(p, d);\n    const tt = Buffer.alloc(32);\n    pack(tt, p);\n\n    for (i = 32; i < 64; i++) signedMsg[i] = tt[i - 32];\n\n    hash = Crypto.createHash('sha512');\n    const h = hash.update(signedMsg).digest();\n\n    reduce(h);\n\n    const x = new Float64Array(64);\n    for (i = 0; i < 64; i++) x[i] = 0;\n    for (i = 0; i < 32; i++) x[i] = r[i];\n    for (i = 0; i < 32; i++) {\n      for (j = 0; j < 32; j++) {\n        x[i + j] += h[i] * d[j];\n      }\n    }\n\n    modL(signedMsg.subarray(32), x);\n\n    return signedMsg.slice(0, 64);\n  }\n}\n\n/*******************************************************\n *\n * This plugin uses the following public domain tweetnacl-js code by Dmitry Chestnykh\n * (from https://github.com/dchest/tweetnacl-js/blob/master/nacl-fast.js).\n * tweetnacl cannot be used directly (secret key mandatory size is 32 in nacl + implementation differ :\n * second scalarbase use hash of secret key, not secret key).\n *\n *******************************************************/\n\nconst gf = function (init) {\n  const r = new Float64Array(16);\n  if (init) for (let i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\nconst gf0 = gf(),\n  gf1 = gf([1]),\n  D2 = gf([\n    0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df,\n    0xd9dc, 0x2406\n  ]),\n  X = gf([\n    0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e,\n    0x36d3, 0x2169\n  ]),\n  Y = gf([\n    0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n    0x6666, 0x6666\n  ]);\n\nconst L = new Float64Array([\n  0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x10\n]);\n\nfunction reduce(r) {\n  const x = new Float64Array(64);\n  let i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\nfunction modL(r, x) {\n  let carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction scalarbase(p, s) {\n  const q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction set25519(r, a) {\n  for (let i = 0; i < 16; i++) r[i] = a[i] | 0;\n}\n\nfunction M(o, a, b) {\n  let v,\n    c,\n    t0 = 0,\n    t1 = 0,\n    t2 = 0,\n    t3 = 0,\n    t4 = 0,\n    t5 = 0,\n    t6 = 0,\n    t7 = 0,\n    t8 = 0,\n    t9 = 0,\n    t10 = 0,\n    t11 = 0,\n    t12 = 0,\n    t13 = 0,\n    t14 = 0,\n    t15 = 0,\n    t16 = 0,\n    t17 = 0,\n    t18 = 0,\n    t19 = 0,\n    t20 = 0,\n    t21 = 0,\n    t22 = 0,\n    t23 = 0,\n    t24 = 0,\n    t25 = 0,\n    t26 = 0,\n    t27 = 0,\n    t28 = 0,\n    t29 = 0,\n    t30 = 0;\n  const b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0 += 38 * t16;\n  t1 += 38 * t17;\n  t2 += 38 * t18;\n  t3 += 38 * t19;\n  t4 += 38 * t20;\n  t5 += 38 * t21;\n  t6 += 38 * t22;\n  t7 += 38 * t23;\n  t8 += 38 * t24;\n  t9 += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v = t0 + c + 65535;\n  c = Math.floor(v / 65536);\n  t0 = v - c * 65536;\n  v = t1 + c + 65535;\n  c = Math.floor(v / 65536);\n  t1 = v - c * 65536;\n  v = t2 + c + 65535;\n  c = Math.floor(v / 65536);\n  t2 = v - c * 65536;\n  v = t3 + c + 65535;\n  c = Math.floor(v / 65536);\n  t3 = v - c * 65536;\n  v = t4 + c + 65535;\n  c = Math.floor(v / 65536);\n  t4 = v - c * 65536;\n  v = t5 + c + 65535;\n  c = Math.floor(v / 65536);\n  t5 = v - c * 65536;\n  v = t6 + c + 65535;\n  c = Math.floor(v / 65536);\n  t6 = v - c * 65536;\n  v = t7 + c + 65535;\n  c = Math.floor(v / 65536);\n  t7 = v - c * 65536;\n  v = t8 + c + 65535;\n  c = Math.floor(v / 65536);\n  t8 = v - c * 65536;\n  v = t9 + c + 65535;\n  c = Math.floor(v / 65536);\n  t9 = v - c * 65536;\n  v = t10 + c + 65535;\n  c = Math.floor(v / 65536);\n  t10 = v - c * 65536;\n  v = t11 + c + 65535;\n  c = Math.floor(v / 65536);\n  t11 = v - c * 65536;\n  v = t12 + c + 65535;\n  c = Math.floor(v / 65536);\n  t12 = v - c * 65536;\n  v = t13 + c + 65535;\n  c = Math.floor(v / 65536);\n  t13 = v - c * 65536;\n  v = t14 + c + 65535;\n  c = Math.floor(v / 65536);\n  t14 = v - c * 65536;\n  v = t15 + c + 65535;\n  c = Math.floor(v / 65536);\n  t15 = v - c * 65536;\n  t0 += c - 1 + 37 * (c - 1);\n\n  // second car\n  c = 1;\n  v = t0 + c + 65535;\n  c = Math.floor(v / 65536);\n  t0 = v - c * 65536;\n  v = t1 + c + 65535;\n  c = Math.floor(v / 65536);\n  t1 = v - c * 65536;\n  v = t2 + c + 65535;\n  c = Math.floor(v / 65536);\n  t2 = v - c * 65536;\n  v = t3 + c + 65535;\n  c = Math.floor(v / 65536);\n  t3 = v - c * 65536;\n  v = t4 + c + 65535;\n  c = Math.floor(v / 65536);\n  t4 = v - c * 65536;\n  v = t5 + c + 65535;\n  c = Math.floor(v / 65536);\n  t5 = v - c * 65536;\n  v = t6 + c + 65535;\n  c = Math.floor(v / 65536);\n  t6 = v - c * 65536;\n  v = t7 + c + 65535;\n  c = Math.floor(v / 65536);\n  t7 = v - c * 65536;\n  v = t8 + c + 65535;\n  c = Math.floor(v / 65536);\n  t8 = v - c * 65536;\n  v = t9 + c + 65535;\n  c = Math.floor(v / 65536);\n  t9 = v - c * 65536;\n  v = t10 + c + 65535;\n  c = Math.floor(v / 65536);\n  t10 = v - c * 65536;\n  v = t11 + c + 65535;\n  c = Math.floor(v / 65536);\n  t11 = v - c * 65536;\n  v = t12 + c + 65535;\n  c = Math.floor(v / 65536);\n  t12 = v - c * 65536;\n  v = t13 + c + 65535;\n  c = Math.floor(v / 65536);\n  t13 = v - c * 65536;\n  v = t14 + c + 65535;\n  c = Math.floor(v / 65536);\n  t14 = v - c * 65536;\n  v = t15 + c + 65535;\n  c = Math.floor(v / 65536);\n  t15 = v - c * 65536;\n  t0 += c - 1 + 37 * (c - 1);\n\n  o[0] = t0;\n  o[1] = t1;\n  o[2] = t2;\n  o[3] = t3;\n  o[4] = t4;\n  o[5] = t5;\n  o[6] = t6;\n  o[7] = t7;\n  o[8] = t8;\n  o[9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction scalarmult(p, q, s) {\n  let b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i / 8) | 0] >> (i & 7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction pack(r, p) {\n  const tx = gf(),\n    ty = gf(),\n    zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction inv25519(o, i) {\n  const c = gf();\n  let a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if (a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction par25519(a) {\n  const d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\nfunction car25519(o) {\n  let i,\n    v,\n    c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction pack25519(o, n) {\n  let i, j, b;\n  const m = gf(),\n    t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n      m[i - 1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n    b = (m[15] >> 16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction cswap(p, q, b) {\n  for (let i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction A(o, a, b) {\n  for (let i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (let i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction add(p, q) {\n  const a = gf(),\n    b = gf(),\n    c = gf(),\n    d = gf(),\n    e = gf(),\n    f = gf(),\n    g = gf(),\n    h = gf(),\n    t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction sel25519(p, q, b) {\n  const c = ~(b - 1);\n  let t;\n  for (let i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nmodule.exports = Ed25519PasswordAuth;\n", "/*\nThe MIT License (MIT)\n\nCopyright (c) 2016 CoderPuppy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\nvar _endianness;\nexport function endianness() {\n  if (typeof _endianness === 'undefined') {\n    var a = new ArrayBuffer(2);\n    var b = new Uint8Array(a);\n    var c = new Uint16Array(a);\n    b[0] = 1;\n    b[1] = 2;\n    if (c[0] === 258) {\n      _endianness = 'BE';\n    } else if (c[0] === 513){\n      _endianness = 'LE';\n    } else {\n      throw new Error('unable to figure out endianess');\n    }\n  }\n  return _endianness;\n}\n\nexport function hostname() {\n  if (typeof global.location !== 'undefined') {\n    return global.location.hostname\n  } else return '';\n}\n\nexport function loadavg() {\n  return [];\n}\n\nexport function uptime() {\n  return 0;\n}\n\nexport function freemem() {\n  return Number.MAX_VALUE;\n}\n\nexport function totalmem() {\n  return Number.MAX_VALUE;\n}\n\nexport function cpus() {\n  return [];\n}\n\nexport function type() {\n  return 'Browser';\n}\n\nexport function release () {\n  if (typeof global.navigator !== 'undefined') {\n    return global.navigator.appVersion;\n  }\n  return '';\n}\n\nexport function networkInterfaces(){}\nexport function getNetworkInterfaces(){}\n\nexport function arch() {\n  return 'javascript';\n}\n\nexport function platform() {\n  return 'browser';\n}\n\nexport function tmpDir() {\n  return '/tmp';\n}\nexport var tmpdir = tmpDir;\n\nexport var EOL = '\\n';\nexport default {\n  EOL: EOL,\n  tmpdir: tmpdir,\n  tmpDir: tmpDir,\n  networkInterfaces:networkInterfaces,\n  getNetworkInterfaces: getNetworkInterfaces,\n  release: release,\n  type: type,\n  cpus: cpus,\n  totalmem: totalmem,\n  freemem: freemem,\n  uptime: uptime,\n  loadavg: loadavg,\n  hostname: hostname,\n  endianness: endianness,\n}\n", "\nconst polyfill = require('os')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "'use strict';\n\nconst Capabilities = require('../../const/capabilities');\nconst Iconv = require('iconv-lite');\nconst NativePasswordAuth = require('./auth/native-password-auth');\nconst Ed25519PasswordAuth = require('./auth/ed25519-password-auth');\nconst driverVersion = require('../../../package.json').version;\nconst os = require('os');\n\n/**\n * Send Handshake response packet\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/#handshake-response-packet\n *\n * @param cmd         current handshake command\n * @param out         output writer\n * @param opts        connection options\n * @param pluginName  plugin name\n * @param info        connection information\n */\nmodule.exports.send = function send(cmd, out, opts, pluginName, info) {\n  out.startPacket(cmd);\n  info.defaultPluginName = pluginName;\n  const pwd = Array.isArray(opts.password) ? opts.password[0] : opts.password;\n  let authToken;\n  let authPlugin;\n  switch (pluginName) {\n    case 'client_ed25519':\n      authToken = Ed25519PasswordAuth.encryptPassword(pwd, info.seed);\n      authPlugin = 'client_ed25519';\n      break;\n\n    case 'mysql_clear_password':\n      authToken = Buffer.from(pwd);\n      authPlugin = 'mysql_clear_password';\n      break;\n\n    default:\n      authToken = NativePasswordAuth.encryptPassword(pwd, info.seed, 'sha1');\n      authPlugin = 'mysql_native_password';\n      break;\n  }\n  out.writeInt32(Number(info.clientCapabilities & BigInt(0xffffffff)));\n  out.writeInt32(1024 * 1024 * 1024); // max packet size\n  out.writeInt8(info.collation.index);\n\n  for (let i = 0; i < 19; i++) {\n    out.writeInt8(0);\n  }\n\n  out.writeInt32(Number(info.clientCapabilities >> BigInt(32)));\n\n  //null encoded user\n  out.writeString(opts.user || '');\n  out.writeInt8(0);\n\n  if (info.serverCapabilities & Capabilities.PLUGIN_AUTH_LENENC_CLIENT_DATA) {\n    out.writeLengthCoded(authToken.length);\n    out.writeBuffer(authToken, 0, authToken.length);\n  } else if (info.serverCapabilities & Capabilities.SECURE_CONNECTION) {\n    out.writeInt8(authToken.length);\n    out.writeBuffer(authToken, 0, authToken.length);\n  } else {\n    out.writeBuffer(authToken, 0, authToken.length);\n    out.writeInt8(0);\n  }\n\n  if (info.clientCapabilities & Capabilities.CONNECT_WITH_DB) {\n    out.writeString(opts.database);\n    out.writeInt8(0);\n    info.database = opts.database;\n  }\n\n  if (info.clientCapabilities & Capabilities.PLUGIN_AUTH) {\n    out.writeString(authPlugin);\n    out.writeInt8(0);\n  }\n\n  if (info.clientCapabilities & Capabilities.CONNECT_ATTRS) {\n    out.writeInt8(0xfc);\n    let initPos = out.pos; //save position, assuming connection attributes length will be less than 2 bytes length\n    out.writeInt16(0);\n    const encoding = info.collation.charset;\n\n    writeParam(out, '_client_name', encoding);\n    writeParam(out, 'MariaDB connector/Node', encoding);\n\n    writeParam(out, '_client_version', encoding);\n    writeParam(out, driverVersion, encoding);\n\n    const address = cmd.getSocket().address().address;\n    if (address) {\n      writeParam(out, '_server_host', encoding);\n      writeParam(out, address, encoding);\n    }\n\n    writeParam(out, '_os', encoding);\n    writeParam(out, process.platform, encoding);\n\n    writeParam(out, '_client_host', encoding);\n    writeParam(out, os.hostname(), encoding);\n\n    writeParam(out, '_node_version', encoding);\n    writeParam(out, process.versions.node, encoding);\n\n    if (opts.connectAttributes !== true) {\n      let attrNames = Object.keys(opts.connectAttributes);\n      for (let k = 0; k < attrNames.length; ++k) {\n        writeParam(out, attrNames[k], encoding);\n        writeParam(out, opts.connectAttributes[attrNames[k]], encoding);\n      }\n    }\n\n    //write end size\n    out.writeInt16AtPos(initPos);\n  }\n\n  out.flushPacket();\n};\n\nfunction writeParam(out, val, encoding) {\n  let param = Buffer.isEncoding(encoding) ? Buffer.from(val, encoding) : Iconv.encode(val, encoding);\n  out.writeLengthCoded(param.length);\n  out.writeBuffer(param, 0, param.length);\n}\n", "'use strict';\nconst Capabilities = require('../../const/capabilities');\n\n/**\n * Send SSL Request packet.\n * see : https://mariadb.com/kb/en/library/1-connecting-connecting/#sslrequest-packet\n *\n * @param cmd     current command\n * @param out     output writer\n * @param info    client information\n * @param opts    connection options\n */\nmodule.exports.send = function sendSSLRequest(cmd, out, info, opts) {\n  out.startPacket(cmd);\n  out.writeInt32(Number(info.clientCapabilities & BigInt(0xffffffff)));\n  out.writeInt32(1024 * 1024 * 1024); // max packet size\n  out.writeInt8(info.collation.index);\n  for (let i = 0; i < 19; i++) {\n    out.writeInt8(0);\n  }\n\n  if (info.serverCapabilities & Capabilities.MYSQL) {\n    out.writeInt32(0);\n  } else {\n    out.writeInt32(Number(info.clientCapabilities >> BigInt(32)));\n  }\n\n  out.flushPacket();\n};\n", "// noinspection JSBitwiseOperatorUsage\n\n'use strict';\n\nconst Capabilities = require('../../const/capabilities');\n\n/**\n * Initialize client capabilities according to options and server capabilities\n *\n * @param opts                options\n * @param info                information\n */\nmodule.exports.init = function (opts, info) {\n  let capabilities =\n    Capabilities.IGNORE_SPACE |\n    Capabilities.PROTOCOL_41 |\n    Capabilities.TRANSACTIONS |\n    Capabilities.SECURE_CONNECTION |\n    Capabilities.MULTI_RESULTS |\n    Capabilities.PS_MULTI_RESULTS |\n    Capabilities.SESSION_TRACK |\n    Capabilities.PLUGIN_AUTH_LENENC_CLIENT_DATA;\n\n  if (!(info.serverCapabilities & Capabilities.MYSQL)) {\n    capabilities |= Capabilities.MARIADB_CLIENT_EXTENDED_TYPE_INFO;\n  }\n\n  if (info.serverCapabilities & Capabilities.PLUGIN_AUTH) {\n    capabilities |= Capabilities.PLUGIN_AUTH;\n  }\n\n  if (opts.connectAttributes && info.serverCapabilities & Capabilities.CONNECT_ATTRS) {\n    capabilities |= Capabilities.CONNECT_ATTRS;\n  }\n\n  if (opts.foundRows) {\n    capabilities |= Capabilities.FOUND_ROWS;\n  }\n\n  if (opts.permitLocalInfile) {\n    capabilities |= Capabilities.LOCAL_FILES;\n  }\n\n  if (opts.multipleStatements) {\n    capabilities |= Capabilities.MULTI_STATEMENTS;\n  }\n\n  info.eofDeprecated = (info.serverCapabilities & Capabilities.DEPRECATE_EOF) > 0;\n  if (info.eofDeprecated) {\n    capabilities |= Capabilities.DEPRECATE_EOF;\n  }\n\n  if (opts.database && info.serverCapabilities & Capabilities.CONNECT_WITH_DB) {\n    capabilities |= Capabilities.CONNECT_WITH_DB;\n  }\n\n  info.serverPermitSkipMeta = (info.serverCapabilities & Capabilities.MARIADB_CLIENT_CACHE_METADATA) > 0;\n  if (info.serverPermitSkipMeta) {\n    capabilities |= Capabilities.MARIADB_CLIENT_CACHE_METADATA;\n  }\n\n  // use compression only if requested by client and supported by server\n  if (opts.compress) {\n    if (info.serverCapabilities & Capabilities.COMPRESS) {\n      capabilities |= Capabilities.COMPRESS;\n    } else {\n      opts.compress = false;\n    }\n  }\n\n  if (opts.bulk) {\n    if (info.serverCapabilities & Capabilities.MARIADB_CLIENT_STMT_BULK_OPERATIONS) {\n      capabilities |= Capabilities.MARIADB_CLIENT_STMT_BULK_OPERATIONS;\n    }\n  }\n\n  if (opts.permitConnectionWhenExpired) {\n    capabilities |= Capabilities.CAN_HANDLE_EXPIRED_PASSWORDS;\n  }\n  info.clientCapabilities = capabilities;\n};\n", "\nconst polyfill = require('process')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "const PluginAuth = require('./plugin-auth');\n\n/**\n * Send password in clear.\n * (used only when SSL is active)\n */\nclass ClearPasswordAuth extends PluginAuth {\n  constructor(packSeq, compressPackSeq, pluginData, resolve, reject, multiAuthResolver) {\n    super(resolve, reject, multiAuthResolver);\n    this.sequenceNo = packSeq;\n  }\n\n  start(out, opts, info) {\n    out.startPacket(this);\n    if (opts.password) out.writeString(opts.password);\n    out.writeInt8(0);\n    out.flushPacket();\n    this.emit('send_end');\n    this.onPacketReceive = this.successSend;\n  }\n}\n\nmodule.exports = ClearPasswordAuth;\n", "const PluginAuth = require('./plugin-auth');\n\n/**\n * Use PAM authentication\n */\nclass PamPasswordAuth extends PluginAuth {\n  constructor(packSeq, compressPackSeq, pluginData, resolve, reject, multiAuthResolver) {\n    super(resolve, reject, multiAuthResolver);\n    this.pluginData = pluginData;\n    this.sequenceNo = packSeq;\n    this.counter = 0;\n  }\n\n  start(out, opts, info) {\n    this.exchange(this.pluginData, out, opts, info);\n    this.onPacketReceive = this.response;\n  }\n\n  exchange(buffer, out, opts, info) {\n    //conversation is :\n    // - first byte is information tell if question is a password (4) or clear text (2).\n    // - other bytes are the question to user\n\n    out.startPacket(this);\n\n    let pwd;\n    if (Array.isArray(opts.password)) {\n      pwd = opts.password[this.counter];\n      this.counter++;\n    } else {\n      pwd = opts.password;\n    }\n\n    if (pwd) out.writeString(pwd);\n    out.writeInt8(0);\n    out.flushPacket();\n  }\n\n  response(packet, out, opts, info) {\n    const marker = packet.peek();\n    switch (marker) {\n      //*********************************************************************************************************\n      //* OK_Packet and Err_Packet ending packet\n      //*********************************************************************************************************\n      case 0x00:\n      case 0xff:\n        this.emit('send_end');\n        return this.successSend(packet, out, opts, info);\n\n      default:\n        let promptData = packet.readBuffer();\n        this.exchange(promptData, out, opts, info);\n        this.onPacketReceive = this.response;\n    }\n  }\n}\n\nmodule.exports = PamPasswordAuth;\n", "export default {};\n", "\nconst polyfill = require('fs')\n\nif (polyfill && polyfill.default) {\n    module.exports = polyfill.default\n    for (let k in polyfill) {\n        module.exports[k] = polyfill[k]\n    }\n} else if (polyfill)  {\n    module.exports = polyfill\n}\n\n\n", "const PluginAuth = require('./plugin-auth');\nconst fs = require('fs');\nconst crypto = require('crypto');\nconst Errors = require('../../../misc/errors');\n\n/**\n * Use Sha256 authentication\n */\nclass Sha256PasswordAuth extends PluginAuth {\n  constructor(packSeq, compressPackSeq, pluginData, resolve, reject, multiAuthResolver) {\n    super(resolve, reject, multiAuthResolver);\n    this.pluginData = pluginData;\n    this.sequenceNo = packSeq;\n    this.counter = 0;\n    this.initialState = true;\n  }\n\n  start(out, opts, info) {\n    this.exchange(this.pluginData, out, opts, info);\n    this.onPacketReceive = this.response;\n  }\n\n  exchange(buffer, out, opts, info) {\n    if (this.initialState) {\n      if (!opts.password) {\n        out.startPacket(this);\n        out.writeEmptyPacket(true);\n        return;\n      } else if (opts.ssl) {\n        // using SSL, so sending password in clear\n        out.startPacket(this);\n        if (opts.password) {\n          out.writeString(opts.password);\n        }\n        out.writeInt8(0);\n        out.flushPacket();\n        return;\n      } else {\n        // retrieve public key from configuration or from server\n        if (opts.rsaPublicKey) {\n          try {\n            let key = opts.rsaPublicKey;\n            if (!key.includes('-----BEGIN')) {\n              // rsaPublicKey contain path\n              key = fs.readFileSync(key, 'utf8');\n            }\n            this.publicKey = Sha256PasswordAuth.retrievePublicKey(key);\n          } catch (err) {\n            return this.throwError(err, info);\n          }\n        } else {\n          if (!opts.allowPublicKeyRetrieval) {\n            return this.throwError(\n              Errors.createFatalError(\n                'RSA public key is not available client side. Either set option `rsaPublicKey` to indicate' +\n                  ' public key path, or allow public key retrieval with option `allowPublicKeyRetrieval`',\n                Errors.ER_CANNOT_RETRIEVE_RSA_KEY,\n                info\n              ),\n              info\n            );\n          }\n          this.initialState = false;\n\n          // ask public Key Retrieval\n          out.startPacket(this);\n          out.writeInt8(0x01);\n          out.flushPacket();\n          return;\n        }\n      }\n\n      // send Sha256Password Packet\n      Sha256PasswordAuth.sendSha256PwdPacket(this, this.pluginData, this.publicKey, opts.password, out);\n    } else {\n      // has request public key\n      this.publicKey = Sha256PasswordAuth.retrievePublicKey(buffer.toString('utf8', 1));\n      Sha256PasswordAuth.sendSha256PwdPacket(this, this.pluginData, this.publicKey, opts.password, out);\n    }\n  }\n\n  static retrievePublicKey(key) {\n    return key.replace('(-+BEGIN PUBLIC KEY-+\\\\r?\\\\n|\\\\n?-+END PUBLIC KEY-+\\\\r?\\\\n?)', '');\n  }\n\n  static sendSha256PwdPacket(cmd, pluginData, publicKey, password, out) {\n    const truncatedSeed = pluginData.slice(0, pluginData.length - 1);\n    out.startPacket(cmd);\n    const enc = Sha256PasswordAuth.encrypt(truncatedSeed, password, publicKey);\n    out.writeBuffer(enc, 0, enc.length);\n    out.flushPacket();\n  }\n\n  // encrypt password with public key\n  static encrypt(seed, password, publicKey) {\n    const nullFinishedPwd = Buffer.from(password + '\\0');\n    const xorBytes = Buffer.allocUnsafe(nullFinishedPwd.length);\n    const seedLength = seed.length;\n    for (let i = 0; i < xorBytes.length; i++) {\n      xorBytes[i] = nullFinishedPwd[i] ^ seed[i % seedLength];\n    }\n    return crypto.publicEncrypt({ key: publicKey, padding: crypto.constants.RSA_PKCS1_OAEP_PADDING }, xorBytes);\n  }\n\n  response(packet, out, opts, info) {\n    const marker = packet.peek();\n    switch (marker) {\n      //*********************************************************************************************************\n      //* OK_Packet and Err_Packet ending packet\n      //*********************************************************************************************************\n      case 0x00:\n      case 0xff:\n        this.emit('send_end');\n        return this.successSend(packet, out, opts, info);\n\n      default:\n        let promptData = packet.readBufferRemaining();\n        this.exchange(promptData, out, opts, info);\n        this.onPacketReceive = this.response;\n    }\n  }\n}\n\nmodule.exports = Sha256PasswordAuth;\n", "const PluginAuth = require('./plugin-auth');\nconst fs = require('fs');\nconst crypto = require('crypto');\nconst Errors = require('../../../misc/errors');\nconst NativePasswordAuth = require('./native-password-auth');\nconst Sha256PasswordAuth = require('./sha256-password-auth');\n\nconst State = {\n  INIT: 'INIT',\n  FAST_AUTH_RESULT: 'FAST_AUTH_RESULT',\n  REQUEST_SERVER_KEY: 'REQUEST_SERVER_KEY',\n  SEND_AUTH: 'SEND_AUTH'\n};\n\n/**\n * Use caching Sha2 password authentication\n */\nclass CachingSha2PasswordAuth extends PluginAuth {\n  constructor(packSeq, compressPackSeq, pluginData, resolve, reject, multiAuthResolver) {\n    super(resolve, reject, multiAuthResolver);\n    this.pluginData = pluginData;\n    this.sequenceNo = packSeq;\n    this.counter = 0;\n    this.state = State.INIT;\n  }\n\n  start(out, opts, info) {\n    this.exchange(this.pluginData, out, opts, info);\n    this.onPacketReceive = this.response;\n  }\n\n  exchange(packet, out, opts, info) {\n    switch (this.state) {\n      case State.INIT:\n        const truncatedSeed = this.pluginData.slice(0, this.pluginData.length - 1);\n        const encPwd = NativePasswordAuth.encryptPassword(opts.password, truncatedSeed, 'sha256');\n        out.startPacket(this);\n        if (encPwd.length > 0) {\n          out.writeBuffer(encPwd, 0, encPwd.length);\n          out.flushPacket();\n        } else {\n          out.writeEmptyPacket(true);\n        }\n        this.state = State.FAST_AUTH_RESULT;\n        return;\n\n      case State.FAST_AUTH_RESULT:\n        // length encoded numeric : 0x01 0x03/0x04\n        const fastAuthResult = packet[1];\n        switch (fastAuthResult) {\n          case 0x03:\n            // success authentication\n            this.emit('send_end');\n            return this.successSend(packet, out, opts, info);\n\n          case 0x04:\n            if (opts.ssl) {\n              // using SSL, so sending password in clear\n              out.startPacket(this);\n              out.writeString(opts.password);\n              out.writeInt8(0);\n              out.flushPacket();\n              return;\n            }\n\n            // retrieve public key from configuration or from server\n            if (opts.cachingRsaPublicKey) {\n              try {\n                let key = opts.cachingRsaPublicKey;\n                if (!key.includes('-----BEGIN')) {\n                  // rsaPublicKey contain path\n                  key = fs.readFileSync(key, 'utf8');\n                }\n                this.publicKey = Sha256PasswordAuth.retrievePublicKey(key);\n              } catch (err) {\n                return this.throwError(err, info);\n              }\n              // send Sha256Password Packet\n              Sha256PasswordAuth.sendSha256PwdPacket(this, this.pluginData, this.publicKey, opts.password, out);\n            } else {\n              if (!opts.allowPublicKeyRetrieval) {\n                return this.throwError(\n                  Errors.createFatalError(\n                    'RSA public key is not available client side. Either set option `cachingRsaPublicKey` to indicate' +\n                      ' public key path, or allow public key retrieval with option `allowPublicKeyRetrieval`',\n                    Errors.ER_CANNOT_RETRIEVE_RSA_KEY,\n                    info\n                  ),\n                  info\n                );\n              }\n              this.state = State.REQUEST_SERVER_KEY;\n              // ask caching public Key Retrieval\n              out.startPacket(this);\n              out.writeInt8(0x02);\n              out.flushPacket();\n            }\n            return;\n        }\n\n      case State.REQUEST_SERVER_KEY:\n        this.publicKey = Sha256PasswordAuth.retrievePublicKey(packet.toString(undefined, 1));\n        this.state = State.SEND_AUTH;\n        Sha256PasswordAuth.sendSha256PwdPacket(this, this.pluginData, this.publicKey, opts.password, out);\n        return;\n    }\n  }\n\n  static sendSha256PwdPacket(cmd, pluginData, publicKey, password, out) {\n    const truncatedSeed = pluginData.slice(0, pluginData.length - 1);\n    out.startPacket(cmd);\n    const enc = Sha256PasswordAuth.encrypt(truncatedSeed, password, publicKey);\n    out.writeBuffer(enc, 0, enc.length);\n    out.flushPacket();\n  }\n\n  response(packet, out, opts, info) {\n    const marker = packet.peek();\n    switch (marker) {\n      //*********************************************************************************************************\n      //* OK_Packet and Err_Packet ending packet\n      //*********************************************************************************************************\n      case 0x00:\n      case 0xff:\n        this.emit('send_end');\n        return this.successSend(packet, out, opts, info);\n\n      default:\n        let promptData = packet.readBufferRemaining();\n        this.exchange(promptData, out, opts, info);\n        this.onPacketReceive = this.response;\n    }\n  }\n}\n\nmodule.exports = CachingSha2PasswordAuth;\n", "'use strict';\n\nconst Command = require('../command');\nconst InitialHandshake = require('./initial-handshake');\nconst ClientHandshakeResponse = require('./client-handshake-response');\nconst SslRequest = require('./ssl-request');\nconst ClientCapabilities = require('./client-capabilities');\nconst Errors = require('../../misc/errors');\nconst Capabilities = require('../../const/capabilities');\nconst Collations = require('../../const/collations');\nconst process = require('process');\n\n/**\n * Handle handshake.\n * see https://mariadb.com/kb/en/library/1-connecting-connecting/\n */\nclass Handshake extends Command {\n  constructor(resolve, reject, _createSecureContext, _addCommand, getSocket) {\n    super(resolve, reject);\n    this._createSecureContext = _createSecureContext;\n    this._addCommand = _addCommand;\n    this.getSocket = getSocket;\n    this.onPacketReceive = this.parseHandshakeInit;\n    this.plugin = this;\n  }\n\n  ensureOptionCompatibility(opts, info) {\n    if (opts.multipleStatements && (info.serverCapabilities & Capabilities.MULTI_STATEMENTS) === 0) {\n      return this.throwNewError(\n        \"Option `multipleStatements` enable, but server doesn'permits multi-statment\",\n        true,\n        info,\n        '08S01',\n        Errors.ER_CLIENT_OPTION_INCOMPATIBILITY\n      );\n    }\n\n    if (opts.permitLocalInfile && (info.serverCapabilities & Capabilities.LOCAL_FILES) === 0) {\n      return this.throwNewError(\n        \"Option `permitLocalInfile` enable, but server doesn'permits using local file\",\n        true,\n        info,\n        '08S01',\n        Errors.ER_CLIENT_OPTION_INCOMPATIBILITY\n      );\n    }\n  }\n\n  parseHandshakeInit(packet, out, opts, info) {\n    if (packet.peek() === 0xff) {\n      //in case that some host is not permit to connect server\n      const authErr = packet.readError(info);\n      authErr.fatal = true;\n      return this.throwError(authErr, info);\n    }\n\n    let handshake = new InitialHandshake(packet, info);\n    this.ensureOptionCompatibility(opts, info);\n\n    // handle default collation.\n    if (opts.collation) {\n      // collation has been set using charset.\n      // If server use same charset, use server collation.\n      if (!opts.charset || info.collation.charset !== opts.collation.charset) {\n        info.collation = opts.collation;\n      }\n    } else {\n      // if not utf8mb4 and no configuration, force to use UTF8MB4_UNICODE_CI\n      if (info.collation.charset !== 'utf8' || info.collation.maxLength === 3) {\n        info.collation = Collations.fromIndex(224);\n      }\n    }\n\n    ClientCapabilities.init(opts, info);\n\n    if (opts.ssl) {\n      if (info.serverCapabilities & Capabilities.SSL) {\n        info.clientCapabilities |= Capabilities.SSL;\n        SslRequest.send(this, out, info, opts);\n        this._createSecureContext(\n          function () {\n            ClientHandshakeResponse.send(this, out, opts, handshake.pluginName, info);\n          }.bind(this)\n        );\n      } else {\n        return this.throwNewError(\n          'Trying to connect with ssl, but ssl not enabled in the server',\n          true,\n          info,\n          '08S01',\n          Errors.ER_SERVER_SSL_DISABLED\n        );\n      }\n    } else {\n      ClientHandshakeResponse.send(this, out, opts, handshake.pluginName, info);\n    }\n    this.onPacketReceive = this.handshakeResult;\n  }\n\n  /**\n   * Fast-path handshake results :\n   *  - if plugin was the one expected by server, server will send OK_Packet / ERR_Packet.\n   *  - if not, server send an AuthSwitchRequest packet, indicating the specific PLUGIN to use with this user.\n   *    dispatching to plugin handler then.\n   *\n   * @param packet    current packet\n   * @param out       output buffer\n   * @param opts      options\n   * @param info      connection info\n   * @returns {*}     return null if authentication succeed, depending on plugin conversation if not finished\n   */\n  handshakeResult(packet, out, opts, info) {\n    const marker = packet.peek();\n    switch (marker) {\n      //*********************************************************************************************************\n      //* AuthSwitchRequest packet\n      //*********************************************************************************************************\n      case 0xfe:\n        this.plugin.onPacketReceive = null;\n        this.plugin.emit('send_end');\n        this.plugin.emit('end');\n        this.dispatchAuthSwitchRequest(packet, out, opts, info);\n        return;\n\n      //*********************************************************************************************************\n      //* OK_Packet - authentication succeeded\n      //*********************************************************************************************************\n      case 0x00:\n        this.plugin.onPacketReceive = null;\n        packet.skip(1); //skip header\n        packet.skipLengthCodedNumber(); //skip affected rows\n        packet.skipLengthCodedNumber(); //skip last insert id\n        info.status = packet.readUInt16();\n        this.plugin.emit('send_end');\n        return this.plugin.successEnd();\n\n      //*********************************************************************************************************\n      //* ERR_Packet\n      //*********************************************************************************************************\n      case 0xff:\n        this.plugin.onPacketReceive = null;\n        const authErr = packet.readError(info, this.displaySql());\n        authErr.fatal = true;\n        return this.plugin.throwError(authErr, info);\n\n      //*********************************************************************************************************\n      //* unexpected\n      //*********************************************************************************************************\n      default:\n        this.throwNewError(\n          `Unexpected type of packet during handshake phase : ${marker}`,\n          true,\n          info,\n          '42000',\n          Errors.ER_AUTHENTICATION_BAD_PACKET\n        );\n    }\n  }\n\n  /**\n   * Handle authentication switch request : dispatch to plugin handler.\n   *\n   * @param packet  packet\n   * @param out     output writer\n   * @param opts    options\n   * @param info    connection information\n   */\n  dispatchAuthSwitchRequest(packet, out, opts, info) {\n    let pluginName, pluginData;\n    if (info.clientCapabilities & Capabilities.PLUGIN_AUTH) {\n      packet.skip(1); //header\n      if (packet.remaining()) {\n        //AuthSwitchRequest packet.\n        pluginName = packet.readStringNullEnded();\n        pluginData = packet.readBufferRemaining();\n      } else {\n        //OldAuthSwitchRequest\n        pluginName = 'mysql_old_password';\n        pluginData = info.seed.slice(0, 8);\n      }\n    } else {\n      pluginName = packet.readStringNullEnded('cesu8');\n      pluginData = packet.readBufferRemaining();\n    }\n    if (opts.restrictedAuth && !opts.restrictedAuth.includes(pluginName)) {\n      this.throwNewError(\n        `Unsupported authentication plugin ${pluginName}. Authorized plugin: ${opts.restrictedAuth.toString()}`,\n        true,\n        info,\n        '42000',\n        Errors.ER_NOT_SUPPORTED_AUTH_PLUGIN\n      );\n      return;\n    }\n    try {\n      this.plugin = Handshake.pluginHandler(\n        pluginName,\n        this.plugin.sequenceNo,\n        this.plugin.compressSequenceNo,\n        pluginData,\n        info,\n        opts,\n        out,\n        this.resolve,\n        this.reject,\n        this.handshakeResult.bind(this)\n      );\n    } catch (err) {\n      this.reject(err);\n      return;\n    }\n\n    if (!this.plugin) {\n      this.reject(\n        Errors.createFatalError(\n          \"Client does not support authentication protocol '\" + pluginName + \"' requested by server. \",\n          Errors.ER_AUTHENTICATION_PLUGIN_NOT_SUPPORTED,\n          info,\n          '08004'\n        )\n      );\n    } else {\n      this._addCommand(this.plugin);\n    }\n  }\n\n  static pluginHandler(\n    pluginName,\n    packSeq,\n    compressPackSeq,\n    pluginData,\n    info,\n    opts,\n    out,\n    authResolve,\n    authReject,\n    multiAuthResolver\n  ) {\n    let pluginAuth;\n    switch (pluginName) {\n      case 'mysql_native_password':\n        pluginAuth = require('./auth/native-password-auth.js');\n        break;\n\n      case 'mysql_clear_password':\n        pluginAuth = require('./auth/clear-password-auth.js');\n        break;\n\n      case 'client_ed25519':\n        pluginAuth = require('./auth/ed25519-password-auth.js');\n        break;\n\n      case 'dialog':\n        pluginAuth = require('./auth/pam-password-auth.js');\n        break;\n\n      case 'sha256_password':\n        if (!Handshake.ensureNodeVersion(11, 6, 0)) {\n          throw Errors.createFatalError(\n            'sha256_password authentication plugin require node 11.6+',\n            Errors.ER_MINIMUM_NODE_VERSION_REQUIRED,\n            info,\n            '08004'\n          );\n        }\n        pluginAuth = require('./auth/sha256-password-auth.js');\n        break;\n\n      case 'caching_sha2_password':\n        if (!Handshake.ensureNodeVersion(11, 6, 0)) {\n          throw Errors.createFatalError(\n            'caching_sha2_password authentication plugin require node 11.6+',\n            Errors.ER_MINIMUM_NODE_VERSION_REQUIRED,\n            info,\n            '08004'\n          );\n        }\n        pluginAuth = require('./auth/caching-sha2-password-auth.js');\n        break;\n\n      //TODO \"auth_gssapi_client\"\n\n      default:\n        return null;\n    }\n    return new pluginAuth(packSeq, compressPackSeq, pluginData, authResolve, authReject, multiAuthResolver);\n  }\n\n  static ensureNodeVersion(major, minor, patch) {\n    const ver = process.versions.node.split('.');\n    return (\n      ver[0] > major ||\n      (ver[0] === major && ver[1] > minor) ||\n      (ver[0] === major && ver[1] === minor && ver[2] >= patch)\n    );\n  }\n}\n\nmodule.exports = Handshake;\n", "'use strict';\n\nconst Command = require('./command');\n\n/**\n * Quit (close connection)\n * see https://mariadb.com/kb/en/library/com_quit/\n */\nclass Quit extends Command {\n  constructor(resolve, reject) {\n    super(resolve, reject);\n  }\n\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query(`QUIT`);\n    this.onPacketReceive = this.skipResults;\n    out.startPacket(this);\n    out.writeInt8(0x01);\n    out.flush();\n    this.emit('send_end');\n    this.successEnd();\n  }\n\n  skipResults(packet, out, opts, info) {\n    //deliberately empty, if server send answer\n  }\n}\n\nmodule.exports = Quit;\n", "'use strict';\n\nconst Command = require('./command');\nconst Errors = require('../misc/errors');\n\n/**\n * send a COM_PING: permits sending a packet containing one byte to check that the connection is active.\n * see https://mariadb.com/kb/en/library/com_ping/\n */\nclass Ping extends Command {\n  constructor(resolve, reject) {\n    super(resolve, reject);\n  }\n\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query('PING');\n    this.onPacketReceive = this.readPingResponsePacket;\n    out.startPacket(this);\n    out.writeInt8(0x0e);\n    out.flush();\n    this.emit('send_end');\n  }\n\n  /**\n   * Read ping response packet.\n   * packet can be :\n   * - an ERR_Packet\n   * - a OK_Packet\n   *\n   * @param packet  query response\n   * @param out     output writer\n   * @param opts    connection options\n   * @param info    connection info\n   */\n  readPingResponsePacket(packet, out, opts, info) {\n    if (packet.peek() !== 0x00) {\n      return this.throwNewError('unexpected packet', false, info, '42000', Errors.ER_PING_BAD_PACKET);\n    }\n    packet.skip(1); //skip header\n    packet.skipLengthCodedNumber(); //affected rows\n    packet.skipLengthCodedNumber(); //insert ids\n    info.status = packet.readUInt16();\n    this.successEnd(null);\n  }\n}\n\nmodule.exports = Ping;\n", "'use strict';\n\nconst Command = require('./command');\nconst Errors = require('../misc/errors');\n\n/**\n * send a COM_RESET_CONNECTION: permits to reset a connection without re-authentication.\n * see https://mariadb.com/kb/en/library/com_reset_connection/\n */\nclass Reset extends Command {\n  constructor(resolve, reject) {\n    super(resolve, reject);\n  }\n\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query(`RESET`);\n    this.onPacketReceive = this.readResetResponsePacket;\n    out.startPacket(this);\n    out.writeInt8(0x1f);\n    out.flush();\n    this.emit('send_end');\n  }\n\n  /**\n   * Read response packet.\n   * packet can be :\n   * - an ERR_Packet\n   * - a OK_Packet\n   *\n   * @param packet  query response\n   * @param out     output writer\n   * @param opts    connection options\n   * @param info    connection info\n   */\n  readResetResponsePacket(packet, out, opts, info) {\n    if (packet.peek() !== 0x00) {\n      return this.throwNewError('unexpected packet', false, info, '42000', Errors.ER_RESET_BAD_PACKET);\n    }\n\n    packet.skip(1); //skip header\n    packet.skipLengthCodedNumber(); //affected rows\n    packet.skipLengthCodedNumber(); //insert ids\n\n    info.status = packet.readUInt16();\n    this.successEnd();\n  }\n}\n\nmodule.exports = Reset;\n", "/**\n * Field types\n * see https://mariadb.com/kb/en/library/resultset/#field-types\n */\n\nmodule.exports.DECIMAL = 0;\nmodule.exports.TINY = 1;\nmodule.exports.SHORT = 2;\nmodule.exports.INT = 3;\nmodule.exports.FLOAT = 4;\nmodule.exports.DOUBLE = 5;\nmodule.exports.NULL = 6;\nmodule.exports.TIMESTAMP = 7;\nmodule.exports.BIGINT = 8;\nmodule.exports.INT24 = 9;\nmodule.exports.DATE = 10;\nmodule.exports.TIME = 11;\nmodule.exports.DATETIME = 12;\nmodule.exports.YEAR = 13;\nmodule.exports.NEWDATE = 14;\nmodule.exports.VARCHAR = 15;\nmodule.exports.BIT = 16;\nmodule.exports.TIMESTAMP2 = 17;\nmodule.exports.DATETIME2 = 18;\nmodule.exports.TIME2 = 19;\nmodule.exports.JSON = 245; //only for MySQL\nmodule.exports.NEWDECIMAL = 246;\nmodule.exports.ENUM = 247;\nmodule.exports.SET = 248;\nmodule.exports.TINY_BLOB = 249;\nmodule.exports.MEDIUM_BLOB = 250;\nmodule.exports.LONG_BLOB = 251;\nmodule.exports.BLOB = 252;\nmodule.exports.VAR_STRING = 253;\nmodule.exports.STRING = 254;\nmodule.exports.GEOMETRY = 255;\n\nconst typeNames = [];\ntypeNames[0] = 'DECIMAL';\ntypeNames[1] = 'TINY';\ntypeNames[2] = 'SHORT';\ntypeNames[3] = 'INT';\ntypeNames[4] = 'FLOAT';\ntypeNames[5] = 'DOUBLE';\ntypeNames[6] = 'NULL';\ntypeNames[7] = 'TIMESTAMP';\ntypeNames[8] = 'BIGINT';\ntypeNames[9] = 'INT24';\ntypeNames[10] = 'DATE';\ntypeNames[11] = 'TIME';\ntypeNames[12] = 'DATETIME';\ntypeNames[13] = 'YEAR';\ntypeNames[14] = 'NEWDATE';\ntypeNames[15] = 'VARCHAR';\ntypeNames[16] = 'BIT';\ntypeNames[17] = 'TIMESTAMP2';\ntypeNames[18] = 'DATETIME2';\ntypeNames[19] = 'TIME2';\ntypeNames[245] = 'JSON';\ntypeNames[246] = 'NEWDECIMAL';\ntypeNames[247] = 'ENUM';\ntypeNames[248] = 'SET';\ntypeNames[249] = 'TINY_BLOB';\ntypeNames[250] = 'MEDIUM_BLOB';\ntypeNames[251] = 'LONG_BLOB';\ntypeNames[252] = 'BLOB';\ntypeNames[253] = 'VAR_STRING';\ntypeNames[254] = 'STRING';\ntypeNames[255] = 'GEOMETRY';\n\nmodule.exports.TYPES = typeNames;\n", "/**\n * Column definition packet \"Field detail\" flag value\n * see : https://mariadb.com/kb/en/library/resultset/#field-detail-flag\n */\n\n//\tfield cannot be null\nmodule.exports.NOT_NULL = 1;\n//\tfield is a primary key\nmodule.exports.PRIMARY_KEY = 2;\n//field is unique\nmodule.exports.UNIQUE_KEY = 4;\n//field is in a multiple key\nmodule.exports.MULTIPLE_KEY = 8;\n//is this field a Blob\nmodule.exports.BLOB = 1 << 4;\n//\tis this field unsigned\nmodule.exports.UNSIGNED = 1 << 5;\n//is this field a zerofill\nmodule.exports.ZEROFILL_FLAG = 1 << 6;\n//whether this field has a binary collation\nmodule.exports.BINARY_COLLATION = 1 << 7;\n//Field is an enumeration\nmodule.exports.ENUM = 1 << 8;\n//field auto-increment\nmodule.exports.AUTO_INCREMENT = 1 << 9;\n//field is a timestamp value\nmodule.exports.TIMESTAMP = 1 << 10;\n//field is a SET\nmodule.exports.SET = 1 << 11;\n//field doesn't have default value\nmodule.exports.NO_DEFAULT_VALUE_FLAG = 1 << 12;\n//field is set to NOW on UPDATE\nmodule.exports.ON_UPDATE_NOW_FLAG = 1 << 13;\n//field is num\nmodule.exports.NUM_FLAG = 1 << 14;\n", "'use strict';\n\nconst Collations = require('../const/collations.js');\nconst FieldType = require('../const/field-type');\nconst FieldDetails = require('../const/field-detail');\nconst Capabilities = require('../const/capabilities');\n\n// noinspection JSBitwiseOperatorUsage\n/**\n * Column definition\n * see https://mariadb.com/kb/en/library/resultset/#column-definition-packet\n */\nclass ColumnDef {\n  constructor(packet, info) {\n    this._stringParser = new StringParser(packet);\n    if (info.serverCapabilities & Capabilities.MARIADB_CLIENT_EXTENDED_TYPE_INFO) {\n      const subPacket = packet.subPacketLengthEncoded();\n      while (subPacket.remaining()) {\n        switch (subPacket.readUInt8()) {\n          case 0:\n            this.dataTypeName = subPacket.readAsciiStringLengthEncoded();\n            break;\n\n          case 1:\n            this.dataTypeFormat = subPacket.readAsciiStringLengthEncoded();\n            break;\n\n          default:\n            // skip data\n            const len = subPacket.readUnsignedLength();\n            if (len) {\n              subPacket.skip(len);\n            }\n            break;\n        }\n      }\n    }\n\n    packet.skip(1); // length of fixed fields\n    this.collation = Collations.fromIndex(packet.readUInt16());\n    this.columnLength = packet.readUInt32();\n    this.columnType = packet.readUInt8();\n    this.flags = packet.readUInt16();\n    this.scale = packet.readUInt8();\n    this.type = FieldType.TYPES[this.columnType];\n  }\n\n  __parser(binary, opts) {\n    // set reader function read(packet, index, nullBitmap, opts)\n    // this permit for multi-row result-set to avoid resolving type parsing each data.\n    if (binary) {\n      switch (this.columnType) {\n        case FieldType.TINY:\n          if (this.signed()) {\n            return (packet, index, nullBitmap, opts) => (isNullBitmap(index, nullBitmap) ? null : packet.readInt8());\n          } else {\n            return (packet, index, nullBitmap, opts) => (isNullBitmap(index, nullBitmap) ? null : packet.readUInt8());\n          }\n\n        case FieldType.YEAR:\n        case FieldType.SHORT:\n          if (this.signed()) {\n            return (packet, index, nullBitmap, opts) => (isNullBitmap(index, nullBitmap) ? null : packet.readInt16());\n          } else {\n            return (packet, index, nullBitmap, opts) => (isNullBitmap(index, nullBitmap) ? null : packet.readUInt16());\n          }\n\n        case FieldType.INT24:\n          if (this.signed()) {\n            return (packet, index, nullBitmap, opts) => {\n              if (isNullBitmap(index, nullBitmap)) {\n                return null;\n              }\n              const result = packet.readInt24();\n              packet.skip(1); // MEDIUMINT is encoded on 4 bytes in exchanges !\n              return result;\n            };\n          } else {\n            return (packet, index, nullBitmap, opts) => {\n              if (isNullBitmap(index, nullBitmap)) {\n                return null;\n              }\n              const result = packet.readUInt24();\n              packet.skip(1); // MEDIUMINT is encoded on 4 bytes in exchanges !\n              return result;\n            };\n          }\n\n        case FieldType.INT:\n          if (this.signed()) {\n            return (packet, index, nullBitmap, opts) => (isNullBitmap(index, nullBitmap) ? null : packet.readInt32());\n          } else {\n            return (packet, index, nullBitmap, opts) => (isNullBitmap(index, nullBitmap) ? null : packet.readUInt32());\n          }\n\n        case FieldType.FLOAT:\n          return (packet, index, nullBitmap, opts) => (isNullBitmap(index, nullBitmap) ? null : packet.readFloat());\n\n        case FieldType.DOUBLE:\n          return (packet, index, nullBitmap, opts) => (isNullBitmap(index, nullBitmap) ? null : packet.readDouble());\n\n        case FieldType.BIGINT:\n          return (packet, index, nullBitmap, opts) => {\n            if (isNullBitmap(index, nullBitmap)) return null;\n            const val = this.signed() ? packet.readBigInt64() : packet.readBigUInt64();\n            if (val != null && (opts.bigIntAsNumber || opts.supportBigNumbers)) {\n              if (opts.supportBigNumbers && (opts.bigNumberStrings || !Number.isSafeInteger(Number(val)))) {\n                return val.toString();\n              }\n              return Number(val);\n            }\n            return val;\n          };\n\n        case FieldType.DATE:\n          return (packet, index, nullBitmap, opts) =>\n            isNullBitmap(index, nullBitmap) ? null : packet.readBinaryDate(opts);\n\n        case FieldType.DATETIME:\n        case FieldType.TIMESTAMP:\n          return (packet, index, nullBitmap, opts) =>\n            isNullBitmap(index, nullBitmap) ? null : packet.readBinaryDateTime(opts, this);\n\n        case FieldType.TIME:\n          return (packet, index, nullBitmap, opts) =>\n            isNullBitmap(index, nullBitmap) ? null : packet.readBinaryTime();\n\n        case FieldType.DECIMAL:\n        case FieldType.NEWDECIMAL:\n          return (packet, index, nullBitmap, opts) => {\n            if (isNullBitmap(index, nullBitmap)) return null;\n            const valDec = packet.readDecimalLengthEncoded();\n            if (valDec != null && (opts.decimalAsNumber || opts.supportBigNumbers)) {\n              if (opts.supportBigNumbers && (opts.bigNumberStrings || !Number.isSafeInteger(Number(valDec)))) {\n                return valDec.toString();\n              }\n              return Number(valDec);\n            }\n            return valDec;\n          };\n\n        case FieldType.GEOMETRY:\n          let defaultVal = this.__getDefaultGeomVal();\n          return (packet, index, nullBitmap, opts) => {\n            if (isNullBitmap(index, nullBitmap)) {\n              return defaultVal;\n            }\n            return packet.readGeometry(defaultVal);\n          };\n\n        case FieldType.JSON:\n          //for mysql only => parse string as JSON object\n          return (packet, index, nullBitmap, opts) =>\n            isNullBitmap(index, nullBitmap) ? null : JSON.parse(packet.readStringLengthEncoded());\n\n        case FieldType.BIT:\n          if (this.columnLength === 1 && opts.bitOneIsBoolean) {\n            return (packet, index, nullBitmap, opts) =>\n              isNullBitmap(index, nullBitmap) ? null : packet.readBufferLengthEncoded()[0] === 1;\n          }\n          return (packet, index, nullBitmap, opts) =>\n            isNullBitmap(index, nullBitmap) ? null : packet.readBufferLengthEncoded();\n\n        default:\n          if (this.dataTypeFormat && this.dataTypeFormat === 'json' && opts.autoJsonMap) {\n            return (packet, index, nullBitmap, opts) =>\n              isNullBitmap(index, nullBitmap) ? null : JSON.parse(packet.readStringLengthEncoded());\n          }\n\n          if (this.collation.index === 63) {\n            return (packet, index, nullBitmap, opts) =>\n              isNullBitmap(index, nullBitmap) ? null : packet.readBufferLengthEncoded();\n          }\n\n          if (this.isSet()) {\n            return (packet, index, nullBitmap, opts) => {\n              if (isNullBitmap(index, nullBitmap)) return null;\n              const string = packet.readStringLengthEncoded();\n              return string == null ? null : string === '' ? [] : string.split(',');\n            };\n          }\n          return (packet, index, nullBitmap, opts) =>\n            isNullBitmap(index, nullBitmap) ? null : packet.readStringLengthEncoded();\n      }\n    } else {\n      switch (this.columnType) {\n        case FieldType.TINY:\n        case FieldType.SHORT:\n        case FieldType.INT:\n        case FieldType.INT24:\n        case FieldType.YEAR:\n          return (packet, index, nullBitmap, opts) => packet.readIntLengthEncoded();\n\n        case FieldType.FLOAT:\n        case FieldType.DOUBLE:\n          return (packet, index, nullBitmap, opts) => packet.readFloatLengthCoded();\n\n        case FieldType.BIGINT:\n          return (packet, index, nullBitmap, opts) => {\n            const val = packet.readBigIntLengthEncoded();\n            if (val != null && (opts.bigIntAsNumber || opts.supportBigNumbers)) {\n              if (opts.supportBigNumbers && (opts.bigNumberStrings || !Number.isSafeInteger(Number(val)))) {\n                return val.toString();\n              }\n              return Number(val);\n            }\n            return val;\n          };\n\n        case FieldType.DECIMAL:\n        case FieldType.NEWDECIMAL:\n          return (packet, index, nullBitmap, opts) => {\n            const valDec = packet.readDecimalLengthEncoded();\n            if (valDec != null && (opts.decimalAsNumber || opts.supportBigNumbers)) {\n              if (opts.supportBigNumbers && (opts.bigNumberStrings || !Number.isSafeInteger(Number(valDec)))) {\n                return valDec.toString();\n              }\n              return Number(valDec);\n            }\n            return valDec;\n          };\n\n        case FieldType.DATE:\n          return (packet, index, nullBitmap, opts) => {\n            if (opts.dateStrings) {\n              return packet.readAsciiStringLengthEncoded();\n            }\n            return packet.readDate();\n          };\n\n        case FieldType.DATETIME:\n        case FieldType.TIMESTAMP:\n          return (packet, index, nullBitmap, opts) => {\n            if (opts.dateStrings) {\n              return packet.readAsciiStringLengthEncoded();\n            }\n            return packet.readDateTime(opts);\n          };\n\n        case FieldType.TIME:\n          return (packet, index, nullBitmap, opts) => packet.readAsciiStringLengthEncoded();\n\n        case FieldType.GEOMETRY:\n          let defaultVal = this.__getDefaultGeomVal();\n          return (packet, index, nullBitmap, opts) => packet.readGeometry(defaultVal);\n\n        case FieldType.JSON:\n          //for mysql only => parse string as JSON object\n          return (packet, index, nullBitmap, opts) => JSON.parse(packet.readStringLengthEncoded());\n\n        case FieldType.BIT:\n          if (this.columnLength === 1 && opts.bitOneIsBoolean) {\n            return (packet, index, nullBitmap, opts) => {\n              const val = packet.readBufferLengthEncoded();\n              return val == null ? null : val[0] === 1;\n            };\n          }\n          return (packet, index, nullBitmap, opts) => packet.readBufferLengthEncoded();\n\n        default:\n          if (this.dataTypeFormat && this.dataTypeFormat === 'json' && opts.autoJsonMap) {\n            return (packet, index, nullBitmap, opts) => JSON.parse(packet.readStringLengthEncoded());\n          }\n\n          if (this.collation.index === 63) {\n            return (packet, index, nullBitmap, opts) => packet.readBufferLengthEncoded();\n          }\n\n          if (this.isSet()) {\n            return (packet, index, nullBitmap, opts) => {\n              const string = packet.readStringLengthEncoded();\n              return string == null ? null : string === '' ? [] : string.split(',');\n            };\n          }\n          return (packet, index, nullBitmap, opts) => packet.readStringLengthEncoded();\n      }\n    }\n  }\n\n  __getDefaultGeomVal() {\n    if (this.dataTypeName) {\n      switch (this.dataTypeName) {\n        case 'point':\n          return { type: 'Point' };\n        case 'linestring':\n          return { type: 'LineString' };\n        case 'polygon':\n          return { type: 'Polygon' };\n        case 'multipoint':\n          return { type: 'MultiPoint' };\n        case 'multilinestring':\n          return { type: 'MultiLineString' };\n        case 'multipolygon':\n          return { type: 'MultiPolygon' };\n        default:\n          return { type: this.dataTypeName };\n      }\n    }\n    return null;\n  }\n  db() {\n    return this._stringParser.packet.readString(this._stringParser.dbOffset, this._stringParser.dbLength);\n  }\n\n  schema() {\n    return this._stringParser.packet.readString(this._stringParser.dbOffset, this._stringParser.dbLength);\n  }\n\n  table() {\n    return this._stringParser.packet.readString(this._stringParser.tableOffset, this._stringParser.tableLength);\n  }\n\n  orgTable() {\n    return this._stringParser.packet.readString(this._stringParser.orgTableOffset, this._stringParser.orgTableLength);\n  }\n\n  name() {\n    return this._stringParser.packet.readString(this._stringParser.nameOffset, this._stringParser.nameLength);\n  }\n\n  orgName() {\n    return this._stringParser.packet.readString(this._stringParser.orgNameOffset, this._stringParser.orgNameLength);\n  }\n\n  signed() {\n    return (this.flags & FieldDetails.UNSIGNED) === 0;\n  }\n\n  isSet() {\n    return (this.flags & FieldDetails.SET) !== 0;\n  }\n}\n\nconst isNullBitmap = (index, nullBitmap) => {\n  return (nullBitmap[Math.floor((index + 2) / 8)] & (1 << (index + 2) % 8)) > 0;\n};\n\n/**\n * String parser.\n * This object permits to avoid listing all private information to metadata object.\n */\nclass StringParser {\n  constructor(packet) {\n    packet.skip(4); // skip 'def'\n\n    this.dbLength = packet.readUnsignedLength();\n    this.dbOffset = packet.pos;\n    packet.skip(this.dbLength);\n\n    this.tableLength = packet.readUnsignedLength();\n    this.tableOffset = packet.pos;\n    packet.skip(this.tableLength);\n\n    this.orgTableLength = packet.readUnsignedLength();\n    this.orgTableOffset = packet.pos;\n    packet.skip(this.orgTableLength);\n\n    this.nameLength = packet.readUnsignedLength();\n    this.nameOffset = packet.pos;\n    packet.skip(this.nameLength);\n\n    this.orgNameLength = packet.readUnsignedLength();\n    this.orgNameOffset = packet.pos;\n    packet.skip(this.orgNameLength);\n    this.packet = packet;\n  }\n}\n\nmodule.exports = ColumnDef;\n", "const Errors = require('../misc/errors');\n\nconst State = {\n  Normal: 1 /* inside  query */,\n  String: 2 /* inside string */,\n  SlashStarComment: 3 /* inside slash-star comment */,\n  Escape: 4 /* found backslash */,\n  EOLComment: 5 /* # comment, or // comment, or -- comment */,\n  Backtick: 6 /* found backtick */,\n  Placeholder: 7 /* found placeholder */\n};\n\n/**\n * Split query according to parameters (question mark).\n * Question mark in comment are not taken in account\n *\n * @returns {Array} query separated by parameters\n */\nmodule.exports.splitQuery = function (sql) {\n  let partList = [];\n  let state = State.Normal;\n  let lastChar = '\\0';\n  let singleQuotes = false;\n  let lastParameterPosition = 0;\n  let idx = 0;\n  let car = sql.charAt(idx++);\n\n  while (car !== '') {\n    if (state === State.Escape && !((car === \"'\" && singleQuotes) || (car === '\"' && !singleQuotes))) {\n      state = State.String;\n      car = sql.charAt(idx++);\n      continue;\n    }\n\n    switch (car) {\n      case '*':\n        if (state === State.Normal && lastChar === '/') state = State.SlashStarComment;\n        break;\n\n      case '/':\n        if (state === State.SlashStarComment && lastChar === '*') state = State.Normal;\n        break;\n\n      case '#':\n        if (state === State.Normal) state = State.EOLComment;\n        break;\n\n      case '-':\n        if (state === State.Normal && lastChar === '-') {\n          state = State.EOLComment;\n        }\n        break;\n\n      case '\\n':\n        if (state === State.EOLComment) {\n          state = State.Normal;\n        }\n        break;\n\n      case '\"':\n        if (state === State.Normal) {\n          state = State.String;\n          singleQuotes = false;\n        } else if (state === State.String && !singleQuotes) {\n          state = State.Normal;\n        } else if (state === State.Escape && !singleQuotes) {\n          state = State.String;\n        }\n        break;\n\n      case \"'\":\n        if (state === State.Normal) {\n          state = State.String;\n          singleQuotes = true;\n        } else if (state === State.String && singleQuotes) {\n          state = State.Normal;\n        } else if (state === State.Escape && singleQuotes) {\n          state = State.String;\n        }\n        break;\n\n      case '\\\\':\n        if (state === State.String) state = State.Escape;\n        break;\n\n      case '?':\n        if (state === State.Normal) {\n          partList.push(sql.substring(lastParameterPosition, idx - 1));\n          lastParameterPosition = idx;\n        }\n        break;\n      case '`':\n        if (state === State.Backtick) {\n          state = State.Normal;\n        } else if (state === State.Normal) {\n          state = State.Backtick;\n        }\n        break;\n    }\n    lastChar = car;\n\n    car = sql.charAt(idx++);\n  }\n  if (lastParameterPosition === 0) {\n    partList.push(sql);\n  } else {\n    partList.push(sql.substring(lastParameterPosition));\n  }\n\n  return partList;\n};\n\n/**\n * Split query according to parameters using placeholder.\n *\n * @param sql             sql with placeholders\n * @param info            connection information\n * @param initialValues   placeholder object\n * @param displaySql      display sql function\n * @returns {{parts: Array, values: Array}}\n */\nmodule.exports.splitQueryPlaceholder = function (sql, info, initialValues, displaySql) {\n  let partList = [];\n  let values = [];\n  let state = State.Normal;\n  let lastChar = '\\0';\n\n  let singleQuotes = false;\n  let lastParameterPosition = 0;\n\n  let idx = 0;\n  let car = sql.charAt(idx++);\n  let placeholderName;\n\n  while (car !== '') {\n    if (state === State.Escape && !((car === \"'\" && singleQuotes) || (car === '\"' && !singleQuotes))) {\n      state = State.String;\n      car = sql.charAt(idx++);\n      continue;\n    }\n\n    switch (car) {\n      case '*':\n        if (state === State.Normal && lastChar === '/') state = State.SlashStarComment;\n        break;\n\n      case '/':\n        if (state === State.SlashStarComment && lastChar === '*') state = State.Normal;\n        break;\n\n      case '#':\n        if (state === State.Normal) state = State.EOLComment;\n        break;\n\n      case '-':\n        if (state === State.Normal && lastChar === '-') {\n          state = State.EOLComment;\n        }\n        break;\n\n      case '\\n':\n        if (state === State.EOLComment) {\n          state = State.Normal;\n        }\n        break;\n\n      case '\"':\n        if (state === State.Normal) {\n          state = State.String;\n          singleQuotes = false;\n        } else if (state === State.String && !singleQuotes) {\n          state = State.Normal;\n        } else if (state === State.Escape && !singleQuotes) {\n          state = State.String;\n        }\n        break;\n\n      case \"'\":\n        if (state === State.Normal) {\n          state = State.String;\n          singleQuotes = true;\n        } else if (state === State.String && singleQuotes) {\n          state = State.Normal;\n          singleQuotes = false;\n        } else if (state === State.Escape && singleQuotes) {\n          state = State.String;\n        }\n        break;\n\n      case '\\\\':\n        if (state === State.String) state = State.Escape;\n        break;\n\n      case ':':\n        if (state === State.Normal) {\n          partList.push(sql.substring(lastParameterPosition, idx - 1));\n          placeholderName = '';\n          while (\n            ((car = sql.charAt(idx++)) !== '' && car >= '0' && car <= '9') ||\n            (car >= 'A' && car <= 'Z') ||\n            (car >= 'a' && car <= 'z') ||\n            car === '-' ||\n            car === '_'\n          ) {\n            placeholderName += car;\n          }\n          idx--;\n          const val = initialValues[placeholderName];\n          if (val === undefined) {\n            throw Errors.createError(\n              `Placeholder '${placeholderName}' is not defined`,\n              Errors.ER_PLACEHOLDER_UNDEFINED,\n              info,\n              'HY000',\n              displaySql.call()\n            );\n          }\n          values.push(val);\n          lastParameterPosition = idx;\n        }\n        break;\n      case '`':\n        if (state === State.Backtick) {\n          state = State.Normal;\n        } else if (state === State.Normal) {\n          state = State.Backtick;\n        }\n    }\n    lastChar = car;\n\n    car = sql.charAt(idx++);\n  }\n  if (lastParameterPosition === 0) {\n    partList.push(sql);\n  } else {\n    partList.push(sql.substring(lastParameterPosition));\n  }\n\n  return { parts: partList, values: values };\n};\n\nmodule.exports.searchPlaceholder = function (sql) {\n  let sqlPlaceHolder = '';\n  let placeHolderIndex = [];\n  let state = State.Normal;\n  let lastChar = '\\0';\n\n  let singleQuotes = false;\n  let lastParameterPosition = 0;\n\n  let idx = 0;\n  let car = sql.charAt(idx++);\n  let placeholderName;\n\n  while (car !== '') {\n    if (state === State.Escape && !((car === \"'\" && singleQuotes) || (car === '\"' && !singleQuotes))) {\n      state = State.String;\n      lastChar = car;\n      car = sql.charAt(idx++);\n      continue;\n    }\n\n    switch (car) {\n      case '*':\n        if (state === State.Normal && lastChar == '/') state = State.SlashStarComment;\n        break;\n\n      case '/':\n        if (state === State.SlashStarComment && lastChar == '*') state = State.Normal;\n        break;\n\n      case '#':\n        if (state === State.Normal) state = State.EOLComment;\n        break;\n\n      case '-':\n        if (state === State.Normal && lastChar == '-') {\n          state = State.EOLComment;\n        }\n        break;\n\n      case '\\n':\n        if (state === State.EOLComment) {\n          state = State.Normal;\n        }\n        break;\n\n      case '\"':\n        if (state === State.Normal) {\n          state = State.String;\n          singleQuotes = false;\n        } else if (state === State.String && !singleQuotes) {\n          state = State.Normal;\n        } else if (state === State.Escape && !singleQuotes) {\n          state = State.String;\n        }\n        break;\n\n      case \"'\":\n        if (state === State.Normal) {\n          state = State.String;\n          singleQuotes = true;\n        } else if (state === State.String && singleQuotes) {\n          state = State.Normal;\n          singleQuotes = false;\n        } else if (state === State.Escape && singleQuotes) {\n          state = State.String;\n        }\n        break;\n\n      case '\\\\':\n        if (state === State.String) state = State.Escape;\n        break;\n\n      case ':':\n        if (state === State.Normal) {\n          sqlPlaceHolder += sql.substring(lastParameterPosition, idx - 1) + '?';\n          placeholderName = '';\n          while (\n            ((car = sql.charAt(idx++)) !== '' && car >= '0' && car <= '9') ||\n            (car >= 'A' && car <= 'Z') ||\n            (car >= 'a' && car <= 'z') ||\n            car === '-' ||\n            car === '_'\n          ) {\n            placeholderName += car;\n          }\n          idx--;\n          placeHolderIndex.push(placeholderName);\n          lastParameterPosition = idx;\n        }\n        break;\n      case '`':\n        if (state === State.Backtick) {\n          state = State.Normal;\n        } else if (state === State.Normal) {\n          state = State.Backtick;\n        }\n    }\n    lastChar = car;\n\n    car = sql.charAt(idx++);\n  }\n  if (lastParameterPosition === 0) {\n    sqlPlaceHolder = sql;\n  } else {\n    sqlPlaceHolder += sql.substring(lastParameterPosition);\n  }\n\n  return { sql: sqlPlaceHolder, placeHolderIndex: placeHolderIndex };\n};\n\n/**\n * Ensure that filename requested by server corresponds to query\n * protocol : https://mariadb.com/kb/en/library/local_infile-packet/\n *\n * @param sql         query\n * @param parameters  parameters if any\n * @param fileName    server requested file\n * @returns {boolean} is filename corresponding to query\n */\nmodule.exports.validateFileName = function (sql, parameters, fileName) {\n  // in case of windows, file name in query are escaped\n  // so for example LOAD DATA LOCAL INFILE 'C:\\\\Temp\\\\myFile.txt' ...\n  // but server return 'C:\\Temp\\myFile.txt'\n  // so with regex escaped, must test LOAD DATA LOCAL INFILE 'C:\\\\\\\\Temp\\\\\\\\myFile.txt'\n  let queryValidator = new RegExp(\n    \"^(\\\\s*\\\\/\\\\*([^\\\\*]|\\\\*[^\\\\/])*\\\\*\\\\/)*\\\\s*LOAD\\\\s+DATA\\\\s+((LOW_PRIORITY|CONCURRENT)\\\\s+)?LOCAL\\\\s+INFILE\\\\s+'\" +\n      fileName.replace(/\\\\/g, '\\\\\\\\\\\\\\\\').replace('.', '\\\\.') +\n      \"'\",\n    'i'\n  );\n  if (queryValidator.test(sql)) return true;\n\n  if (parameters != null) {\n    queryValidator = new RegExp(\n      '^(\\\\s*\\\\/\\\\*([^\\\\*]|\\\\*[^\\\\/])*\\\\*\\\\/)*\\\\s*LOAD\\\\s+DATA\\\\s+((LOW_PRIORITY|CONCURRENT)\\\\s+)?LOCAL\\\\s+INFILE\\\\s+\\\\?',\n      'i'\n    );\n    if (queryValidator.test(sql) && parameters.length > 0) {\n      if (Array.isArray(parameters)) {\n        return parameters[0].toLowerCase() === fileName.toLowerCase();\n      }\n      return parameters.toLowerCase() === fileName.toLowerCase();\n    }\n  }\n  return false;\n};\n", "'use strict';\n\nclass BinaryDecoder {\n  static newRow(packet, columns) {\n    packet.skip(1); // skip 0x00 header.\n    return packet.readBuffer(Math.floor((columns.length + 9) / 8));\n  }\n\n  static castWrapper(column, packet, index, nullBitmap, opts) {\n    column.string = () => (isNullBitmap(index, nullBitmap) ? null : packet.readStringLengthEncoded());\n    column.buffer = () => (isNullBitmap(index, nullBitmap) ? null : packet.readBufferLengthEncoded());\n    column.float = () => (isNullBitmap(index, nullBitmap) ? null : packet.readFloat());\n    column.tiny = () =>\n      isNullBitmap(index, nullBitmap) ? null : column.signed() ? packet.readInt8() : packet.readUInt8();\n    column.short = () =>\n      isNullBitmap(index, nullBitmap) ? null : column.signed() ? packet.readInt16() : packet.readUInt16();\n    column.int = () => (isNullBitmap(index, nullBitmap) ? null : packet.readInt32());\n    column.long = () => (isNullBitmap(index, nullBitmap) ? null : packet.readBigInt64());\n    column.decimal = () => (isNullBitmap(index, nullBitmap) ? null : packet.readDecimalLengthEncoded());\n    column.date = () => (isNullBitmap(index, nullBitmap) ? null : packet.readBinaryDate(opts));\n    column.datetime = () => (isNullBitmap(index, nullBitmap) ? null : packet.readBinaryDateTime(opts));\n\n    column.geometry = () => {\n      let defaultVal = null;\n      if (column.dataTypeName) {\n        switch (column.dataTypeName) {\n          case 'point':\n            defaultVal = { type: 'Point' };\n            break;\n          case 'linestring':\n            defaultVal = { type: 'LineString' };\n            break;\n          case 'polygon':\n            defaultVal = { type: 'Polygon' };\n            break;\n          case 'multipoint':\n            defaultVal = { type: 'MultiPoint' };\n            break;\n          case 'multilinestring':\n            defaultVal = { type: 'MultiLineString' };\n            break;\n          case 'multipolygon':\n            defaultVal = { type: 'MultiPolygon' };\n            break;\n          default:\n            defaultVal = { type: column.dataTypeName };\n            break;\n        }\n      }\n\n      if (isNullBitmap(index, nullBitmap)) {\n        return defaultVal;\n      }\n      return column.readGeometry(defaultVal);\n    };\n  }\n}\nconst isNullBitmap = (index, nullBitmap) => {\n  return (nullBitmap[Math.floor((index + 2) / 8)] & (1 << (index + 2) % 8)) > 0;\n};\nmodule.exports = BinaryDecoder;\n", "'use strict';\n\nclass TextDecoder {\n  static castWrapper(column, packet, index, nullBitmap, opts) {\n    column.string = () => packet.readStringLengthEncoded();\n    column.buffer = () => packet.readBufferLengthEncoded();\n    column.float = () => packet.readFloatLengthCoded();\n    column.tiny = () => packet.readIntLengthEncoded();\n    column.short = () => packet.readIntLengthEncoded();\n    column.int = () => packet.readIntLengthEncoded();\n    column.long = () => packet.readBigIntLengthEncoded();\n    column.decimal = () => packet.readDecimalLengthEncoded();\n    column.date = () => packet.readDate(opts);\n    column.datetime = () => packet.readDateTime(opts);\n\n    column.geometry = () => {\n      let defaultVal = null;\n      if (column.dataTypeName) {\n        switch (column.dataTypeName) {\n          case 'point':\n            defaultVal = { type: 'Point' };\n            break;\n          case 'linestring':\n            defaultVal = { type: 'LineString' };\n            break;\n          case 'polygon':\n            defaultVal = { type: 'Polygon' };\n            break;\n          case 'multipoint':\n            defaultVal = { type: 'MultiPoint' };\n            break;\n          case 'multilinestring':\n            defaultVal = { type: 'MultiLineString' };\n            break;\n          case 'multipolygon':\n            defaultVal = { type: 'MultiPolygon' };\n            break;\n          default:\n            defaultVal = { type: column.dataTypeName };\n            break;\n        }\n      }\n\n      if (isNullBitmap(index, nullBitmap)) {\n        return defaultVal;\n      }\n      return column.readGeometry(defaultVal);\n    };\n  }\n}\n\nmodule.exports = TextDecoder;\n", "'use strict';\n\nconst Command = require('./command');\nconst ServerStatus = require('../const/server-status');\nconst ColumnDefinition = require('./column-definition');\nconst Errors = require('../misc/errors');\nconst fs = require('fs');\nconst Parse = require('../misc/parse');\nconst BinaryDecoder = require('./decoder/binary-decoder');\nconst TextDecoder = require('./decoder/text-decoder');\n\n/**\n * handle COM_QUERY / COM_STMT_EXECUTE results\n * see : https://mariadb.com/kb/en/library/4-server-response-packets/\n */\nclass Parser extends Command {\n  constructor(resolve, reject, cmdOpts, connOpts, sql, values) {\n    super(resolve, reject);\n    this._responseIndex = 0;\n    this._rows = [];\n    this.opts = cmdOpts ? Object.assign({}, connOpts, cmdOpts) : connOpts;\n    this.sql = sql;\n    this.initialValues = values;\n    this.canSkipMeta = false;\n  }\n\n  /**\n   * Read Query response packet.\n   * packet can be :\n   * - a result-set\n   * - an ERR_Packet\n   * - a OK_Packet\n   * - LOCAL_INFILE Packet\n   *\n   * @param packet  query response\n   * @param out     output writer\n   * @param opts    connection options\n   * @param info    connection info\n   */\n  readResponsePacket(packet, out, opts, info) {\n    switch (packet.peek()) {\n      //*********************************************************************************************************\n      //* OK response\n      //*********************************************************************************************************\n      case 0x00:\n        return this.readOKPacket(packet, out, opts, info);\n\n      //*********************************************************************************************************\n      //* ERROR response\n      //*********************************************************************************************************\n      case 0xff:\n        const err = packet.readError(info, this.displaySql(), this.stack);\n        //force in transaction status, since query will have created a transaction if autocommit is off\n        //goal is to avoid unnecessary COMMIT/ROLLBACK.\n        info.status |= ServerStatus.STATUS_IN_TRANS;\n        return this.throwError(err, info);\n\n      //*********************************************************************************************************\n      //* LOCAL INFILE response\n      //*********************************************************************************************************\n      case 0xfb:\n        return this.readLocalInfile(packet, out, opts, info);\n\n      //*********************************************************************************************************\n      //* Parser\n      //*********************************************************************************************************\n      default:\n        return this.readResultSet(packet, info);\n    }\n  }\n\n  /**\n   * Read result-set packets :\n   * see https://mariadb.com/kb/en/library/resultset/\n   *\n   * @param packet    Column count packet\n   * @param info      current connection information\n   * @returns {Parser.readColumn} next packet handler\n   */\n  readResultSet(packet, info) {\n    this._columnCount = packet.readUnsignedLength();\n\n    this._rows.push([]);\n    if (this.canSkipMeta && info.serverPermitSkipMeta && packet.readUInt8() === 0) {\n      // command support skipping meta\n      // server permits it\n      // and tells that no columns follows, using prepare results\n      this._columns = this.prepare.columns;\n      this.setParser();\n      return (this.onPacketReceive = info.eofDeprecated ? this.readResultSetRow : this.readIntermediateEOF);\n    }\n\n    this._columns = [];\n    this.onPacketReceive = this.readColumn;\n  }\n\n  /**\n   * Read OK_Packet.\n   * see https://mariadb.com/kb/en/library/ok_packet/\n   *\n   * @param packet    OK_Packet\n   * @param opts      connection options\n   * @param info      connection information\n   * @param out       output writer\n   * @returns {*}     null or {Resultset.readResponsePacket} in case of multi-result-set\n   */\n  readOKPacket(packet, out, opts, info) {\n    const okPacket = this.parseOkPacket(packet, out, this.opts, info);\n    this._rows.push(okPacket);\n\n    if (info.status & ServerStatus.MORE_RESULTS_EXISTS) {\n      this._responseIndex++;\n      return (this.onPacketReceive = this.readResponsePacket);\n    }\n    this.success(this._responseIndex === 0 ? this._rows[0] : this._rows);\n  }\n\n  /**\n   * Read COM_STMT_PREPARE response Packet.\n   * see https://mariadb.com/kb/en/library/com_stmt_prepare/#com_stmt_prepare-response\n   *\n   * @param packet    COM_STMT_PREPARE_OK packet\n   * @param opts      connection options\n   * @param info      connection information\n   * @param out       output writer\n   * @returns {*}     null or {Resultset.readResponsePacket} in case of multi-result-set\n   */\n  readPrepareResultPacket(packet, out, opts, info) {\n    switch (packet.peek()) {\n      //*********************************************************************************************************\n      //* OK response\n      //*********************************************************************************************************\n      case 0x00:\n        packet.skip(1); //skip header\n        this.statementId = packet.readInt32();\n        this.columnNo = packet.readUInt16();\n        this.parameterNo = packet.readUInt16();\n        this._parameterPrepare = [];\n        this._columnsPrepare = [];\n        if (this.parameterNo > 0) return (this.onPacketReceive = this.readPrepareParameterPacket);\n        if (this.columnNo > 0) return (this.onPacketReceive = this.readPrepareColumnsPacket);\n        return this.successPrepare(info, opts);\n\n      //*********************************************************************************************************\n      //* ERROR response\n      //*********************************************************************************************************\n      case 0xff:\n        const err = packet.readError(info, this.displaySql(), this.stack);\n        //force in transaction status, since query will have created a transaction if autocommit is off\n        //goal is to avoid unnecessary COMMIT/ROLLBACK.\n        info.status |= ServerStatus.STATUS_IN_TRANS;\n        this.onPacketReceive = this.readResponsePacket;\n        return this.throwError(err, info);\n\n      //*********************************************************************************************************\n      //* Unexpected response\n      //*********************************************************************************************************\n      default:\n        info.status |= ServerStatus.STATUS_IN_TRANS;\n        this.onPacketReceive = this.readResponsePacket;\n        return this.throwError(Errors.ER_UNEXPECTED_PACKET, info);\n    }\n  }\n\n  readPrepareColumnsPacket(packet, out, opts, info) {\n    this.columnNo--;\n    this._columnsPrepare.push(new ColumnDefinition(packet.clone(), info));\n    if (this.columnNo === 0) {\n      if (info.eofDeprecated) {\n        return this.successPrepare(info, opts);\n      }\n      return (this.onPacketReceive = this.skipEofPacket);\n    }\n  }\n\n  skipEofPacket(packet, out, opts, info) {\n    if (this.columnNo > 0) return (this.onPacketReceive = this.readPrepareColumnsPacket);\n    return this.successPrepare(info, opts);\n  }\n\n  readPrepareParameterPacket(packet, out, opts, info) {\n    this.parameterNo--;\n    this._parameterPrepare.push(new ColumnDefinition(packet.clone(), info));\n    if (this.parameterNo === 0) {\n      if (info.eofDeprecated) {\n        if (this.columnNo > 0) return (this.onPacketReceive = this.readPrepareColumnsPacket);\n        return this.successPrepare(info, opts);\n      }\n      return (this.onPacketReceive = this.skipEofPacket);\n    }\n  }\n\n  success(val) {\n    this.successEnd(val);\n    this._columns = null;\n    this._rows = null;\n  }\n\n  /**\n   * Read column information metadata\n   * see https://mariadb.com/kb/en/library/resultset/#column-definition-packet\n   *\n   * @param packet    column definition packet\n   * @param out       output writer\n   * @param opts      connection options\n   * @param info      connection information\n   * @returns {*}\n   */\n  readColumn(packet, out, opts, info) {\n    this._columns.push(new ColumnDefinition(packet.clone(), info));\n\n    // last column\n    if (this._columns.length === this._columnCount) {\n      this.setParser();\n      if (this.canSkipMeta && info.serverPermitSkipMeta && this.prepare != null) {\n        // server can skip meta, but have force sending it.\n        // metadata have changed, updating prepare result accordingly\n        this.prepare.columns = this._columns;\n      }\n      this.emit('fields', this._columns);\n\n      return (this.onPacketReceive = info.eofDeprecated ? this.readResultSetRow : this.readIntermediateEOF);\n    }\n  }\n\n  setParser() {\n    this._parseFonction = new Array(this._columnCount);\n    if (this.opts.typeCast) {\n      for (let i = 0; i < this._columnCount; i++) {\n        this._parseFonction[i] = this.readCastValue.bind(this, this._columns[i]);\n      }\n    } else {\n      for (let i = 0; i < this._columnCount; i++) {\n        this._parseFonction[i] = this._columns[i].__parser(this.binary, this.opts);\n      }\n    }\n\n    if (this.opts.rowsAsArray) {\n      this.parseRow = this.parseRowAsArray;\n    } else {\n      this.tableHeader = new Array(this._columnCount);\n      this.parseRow = this.binary ? this.parseRowStdBinary : this.parseRowStdText;\n      if (this.opts.nestTables) {\n        if (typeof this.opts.nestTables === 'string') {\n          for (let i = 0; i < this._columnCount; i++) {\n            this.tableHeader[i] = this._columns[i].table() + this.opts.nestTables + this._columns[i].name();\n          }\n          this.checkDuplicates();\n        } else if (this.opts.nestTables === true) {\n          this.parseRow = this.parseRowNested;\n          for (let i = 0; i < this._columnCount; i++) {\n            this.tableHeader[i] = [this._columns[i].table(), this._columns[i].name()];\n          }\n          this.checkNestTablesDuplicates();\n        }\n      } else {\n        for (let i = 0; i < this._columnCount; i++) {\n          this.tableHeader[i] = this._columns[i].name();\n        }\n        this.checkDuplicates();\n      }\n    }\n  }\n\n  checkDuplicates() {\n    if (this.opts.checkDuplicate) {\n      for (let i = 0; i < this._columnCount; i++) {\n        if (this.tableHeader.indexOf(this.tableHeader[i], i + 1) > 0) {\n          const dupes = this.tableHeader.reduce(\n            (acc, v, i, arr) => (arr.indexOf(v) !== i && acc.indexOf(v) === -1 ? acc.concat(v) : acc),\n            []\n          );\n          this.throwUnexpectedError(\n            `Error in results, duplicate field name \\`${dupes[0]}\\`.\\n(see option \\`checkDuplicate\\`)`,\n            false,\n            null,\n            '42000',\n            Errors.ER_DUPLICATE_FIELD\n          );\n        }\n      }\n    }\n  }\n\n  checkNestTablesDuplicates() {\n    if (this.opts.checkDuplicate) {\n      for (let i = 0; i < this._columnCount; i++) {\n        for (let j = 0; j < i; j++) {\n          if (this.tableHeader[j][0] === this.tableHeader[i][0] && this.tableHeader[j][1] === this.tableHeader[i][1]) {\n            this.throwUnexpectedError(\n              `Error in results, duplicate field name \\`${this.tableHeader[i][0]}\\`.\\`${this.tableHeader[i][1]}\\`\\n(see option \\`checkDuplicate\\`)`,\n              false,\n              null,\n              '42000',\n              Errors.ER_DUPLICATE_FIELD\n            );\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Read intermediate EOF.\n   * _only for server before MariaDB 10.2 / MySQL 5.7 that doesn't have CLIENT_DEPRECATE_EOF capability_\n   * see https://mariadb.com/kb/en/library/eof_packet/\n   *\n   * @param packet    EOF Packet\n   * @param out       output writer\n   * @param opts      connection options\n   * @param info      connection information\n   * @returns {*}\n   */\n  readIntermediateEOF(packet, out, opts, info) {\n    if (packet.peek() !== 0xfe) {\n      return this.throwNewError('Error in protocol, expected EOF packet', true, info, '42000', Errors.ER_EOF_EXPECTED);\n    }\n\n    //before MySQL 5.7.5, last EOF doesn't contain the good flag SERVER_MORE_RESULTS_EXISTS\n    //for OUT parameters. It must be checked here\n    //(5.7.5 does have the CLIENT_DEPRECATE_EOF capability, so this packet in not even send)\n    packet.skip(3);\n    info.status = packet.readUInt16();\n    this.isOutParameter = info.status & ServerStatus.PS_OUT_PARAMS;\n    this.onPacketReceive = this.readResultSetRow;\n  }\n\n  handleNewRows(row) {\n    this._rows[this._responseIndex].push(row);\n  }\n\n  /**\n   * Check if packet is result-set end = EOF of OK_Packet with EOF header according to CLIENT_DEPRECATE_EOF capability\n   * or a result-set row\n   *\n   * @param packet    current packet\n   * @param out       output writer\n   * @param opts      connection options\n   * @param info      connection information\n   * @returns {*}\n   */\n  readResultSetRow(packet, out, opts, info) {\n    if (packet.peek() >= 0xfe) {\n      if (packet.peek() === 0xff) {\n        //force in transaction status, since query will have created a transaction if autocommit is off\n        //goal is to avoid unnecessary COMMIT/ROLLBACK.\n        info.status |= ServerStatus.STATUS_IN_TRANS;\n        return this.throwError(packet.readError(info, this.displaySql(), this.stack), info);\n      }\n\n      if ((!info.eofDeprecated && packet.length() < 13) || (info.eofDeprecated && packet.length() < 0xffffff)) {\n        if (!info.eofDeprecated) {\n          packet.skip(3);\n          info.status = packet.readUInt16();\n        } else {\n          packet.skip(1); //skip header\n          packet.skipLengthCodedNumber(); //skip update count\n          packet.skipLengthCodedNumber(); //skip insert id\n          info.status = packet.readUInt16();\n        }\n\n        if (opts.metaAsArray) {\n          //return promise object as array :\n          // example for SELECT 1 =>\n          // [\n          //   [ {\"1\": 1} ],      //rows\n          //   [ColumnDefinition] //meta\n          // ]\n          if (!this._meta) {\n            this._meta = new Array(this._responseIndex);\n          }\n\n          this._meta[this._responseIndex] = this._columns;\n\n          if (info.status & ServerStatus.MORE_RESULTS_EXISTS || this.isOutParameter) {\n            this._responseIndex++;\n            return (this.onPacketReceive = this.readResponsePacket);\n          }\n          this.success(this._responseIndex === 0 ? [this._rows[0], this._meta[0]] : [this._rows, this._meta]);\n        } else {\n          //return promise object as rows that have meta property :\n          // example for SELECT 1 =>\n          // [\n          //   {\"1\": 1},\n          //   meta: [ColumnDefinition]\n          // ]\n          this._rows[this._responseIndex].meta = this._columns;\n          if (info.status & ServerStatus.MORE_RESULTS_EXISTS || this.isOutParameter) {\n            this._responseIndex++;\n            return (this.onPacketReceive = this.readResponsePacket);\n          }\n          this.success(this._responseIndex === 0 ? this._rows[0] : this._rows);\n        }\n\n        return;\n      }\n    }\n\n    this.handleNewRows(this.parseRow(this._columns, packet));\n  }\n\n  /**\n   * Display current SQL with parameters (truncated if too big)\n   *\n   * @returns {string}\n   */\n  displaySql() {\n    if (this.opts && this.initialValues) {\n      if (this.sql.length > this.opts.debugLen) {\n        return this.sql.substring(0, this.opts.debugLen) + '...';\n      }\n\n      let sqlMsg = this.sql + ' - parameters:';\n      return this.logParameters(sqlMsg, this.initialValues);\n    }\n    return this.sql + ' - parameters:[]';\n  }\n\n  logParameters(sqlMsg, values) {\n    if (this.opts.namedPlaceholders) {\n      sqlMsg += '{';\n      let first = true;\n      for (let key in values) {\n        if (first) {\n          first = false;\n        } else {\n          sqlMsg += ',';\n        }\n        sqlMsg += \"'\" + key + \"':\";\n        let param = values[key];\n        sqlMsg = Parser.logParam(sqlMsg, param);\n        if (sqlMsg.length > this.opts.debugLen) {\n          sqlMsg = sqlMsg.substr(0, this.opts.debugLen) + '...';\n          break;\n        }\n      }\n      sqlMsg += '}';\n    } else {\n      sqlMsg += '[';\n      if (Array.isArray(values)) {\n        for (let i = 0; i < values.length; i++) {\n          if (i !== 0) sqlMsg += ',';\n          let param = values[i];\n          sqlMsg = Parser.logParam(sqlMsg, param);\n          if (sqlMsg.length > this.opts.debugLen) {\n            sqlMsg = sqlMsg.substr(0, this.opts.debugLen) + '...';\n            break;\n          }\n        }\n      } else {\n        sqlMsg = Parser.logParam(sqlMsg, values);\n        if (sqlMsg.length > this.opts.debugLen) {\n          sqlMsg = sqlMsg.substr(0, this.opts.debugLen) + '...';\n        }\n      }\n      sqlMsg += ']';\n    }\n    return sqlMsg;\n  }\n\n  parseRowAsArray(columns, packet) {\n    const row = new Array(this._columnCount);\n    const nullBitMap = this.binary ? BinaryDecoder.newRow(packet, columns) : null;\n    for (let i = 0; i < this._columnCount; i++) {\n      row[i] = this._parseFonction[i].call(null, packet, i, nullBitMap, this.opts);\n    }\n    return row;\n  }\n\n  parseRowNested(columns, packet) {\n    const row = {};\n    const nullBitMap = this.binary ? BinaryDecoder.newRow(packet, columns) : null;\n    for (let i = 0; i < this._columnCount; i++) {\n      if (!row[this.tableHeader[i][0]]) row[this.tableHeader[i][0]] = {};\n      row[this.tableHeader[i][0]][this.tableHeader[i][1]] = this._parseFonction[i].call(\n        null,\n        packet,\n        i,\n        nullBitMap,\n        this.opts\n      );\n    }\n    return row;\n  }\n\n  parseRowStdText(columns, packet) {\n    const row = {};\n    for (let i = 0; i < this._columnCount; i++) {\n      row[this.tableHeader[i]] = this._parseFonction[i].call(null, packet, i, null, this.opts);\n    }\n    return row;\n  }\n\n  parseRowStdBinary(columns, packet) {\n    const row = {};\n    const nullBitMap = BinaryDecoder.newRow(packet, columns);\n    for (let i = 0; i < this._columnCount; i++) {\n      row[this.tableHeader[i]] = this._parseFonction[i].call(null, packet, i, nullBitMap, this.opts);\n    }\n    return row;\n  }\n\n  readCastValue(column, packet, index, nullBitmap, opts) {\n    if (this.binary) {\n      BinaryDecoder.castWrapper(column, packet, index, nullBitmap, opts);\n    } else {\n      TextDecoder.castWrapper(column, packet, index, nullBitmap, opts);\n    }\n    return opts.typeCast(column, column.__parser(this.binary, opts).bind(column, packet, index, nullBitmap, opts));\n  }\n\n  readLocalInfile(packet, out, opts, info) {\n    packet.skip(1); //skip header\n    out.startPacket(this);\n\n    const fileName = packet.readStringRemaining();\n\n    if (!Parse.validateFileName(this.sql, this.initialValues, fileName)) {\n      out.writeEmptyPacket();\n      const error = Errors.createError(\n        \"LOCAL INFILE wrong filename. '\" +\n          fileName +\n          \"' doesn't correspond to query \" +\n          this.sql +\n          '. Query cancelled. Check for malicious server / proxy',\n        Errors.ER_LOCAL_INFILE_WRONG_FILENAME,\n        info,\n        'HY000',\n        this.sql\n      );\n\n      process.nextTick(this.reject, error);\n      this.reject = null;\n      this.resolve = null;\n      return (this.onPacketReceive = this.readResponsePacket);\n    }\n\n    // this.sequenceNo = 2;\n    // this.compressSequenceNo = 2;\n    const stream = fs.createReadStream(fileName);\n    stream.on('error', (err) => {\n      out.writeEmptyPacket();\n      const error = Errors.createError(\n        `LOCAL INFILE command failed: ${err.message}`,\n        Errors.ER_LOCAL_INFILE_NOT_READABLE,\n        info,\n        '22000',\n        this.sql\n      );\n      process.nextTick(this.reject, error);\n      this.reject = null;\n      this.resolve = null;\n    });\n    stream.on('data', (chunk) => {\n      out.writeBuffer(chunk, 0, chunk.length);\n    });\n    stream.on('end', () => {\n      if (!out.isEmpty()) {\n        out.flushBuffer(false);\n      }\n      out.writeEmptyPacket();\n    });\n    this.onPacketReceive = this.readResponsePacket;\n  }\n\n  static logParam(sqlMsg, param) {\n    if (param === undefined || param === null) {\n      sqlMsg += param === undefined ? 'undefined' : 'null';\n    } else {\n      switch (param.constructor.name) {\n        case 'Buffer':\n          sqlMsg += '0x' + param.toString('hex', 0, Math.min(1024, param.length)) + '';\n          break;\n\n        case 'String':\n          sqlMsg += \"'\" + param + \"'\";\n          break;\n\n        case 'Date':\n          sqlMsg += getStringDate(param);\n          break;\n\n        case 'Object':\n          sqlMsg += JSON.stringify(param);\n          break;\n\n        default:\n          sqlMsg += param.toString();\n      }\n    }\n    return sqlMsg;\n  }\n}\n\nfunction getStringDate(param) {\n  return (\n    \"'\" +\n    ('00' + (param.getMonth() + 1)).slice(-2) +\n    '/' +\n    ('00' + param.getDate()).slice(-2) +\n    '/' +\n    param.getFullYear() +\n    ' ' +\n    ('00' + param.getHours()).slice(-2) +\n    ':' +\n    ('00' + param.getMinutes()).slice(-2) +\n    ':' +\n    ('00' + param.getSeconds()).slice(-2) +\n    '.' +\n    ('000' + param.getMilliseconds()).slice(-3) +\n    \"'\"\n  );\n}\n\nmodule.exports = Parser;\n", "'use strict';\n\nconst Parser = require('./parser');\nconst Errors = require('../misc/errors');\nconst Parse = require('../misc/parse');\nconst TextEncoder = require('./encoder/text-encoder');\n\nconst QUOTE = 0x27;\n\n/**\n * Protocol COM_QUERY\n * see : https://mariadb.com/kb/en/library/com_query/\n */\nclass Query extends Parser {\n  constructor(resolve, reject, options, connOpts, sql, values) {\n    super(resolve, reject, options, connOpts, sql, values);\n    this.encoder = new TextEncoder(this.opts);\n    this.binary = false;\n  }\n\n  /**\n   * Send COM_QUERY\n   *\n   * @param out   output writer\n   * @param opts  connection options\n   * @param info  connection information\n   */\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query(`QUERY: ${opts.logger.logParam ? this.displaySql() : this.sql}`);\n    this.onPacketReceive = this.readResponsePacket;\n    if (this.initialValues === undefined) {\n      //shortcut if no parameters\n      out.startPacket(this);\n      out.writeInt8(0x03);\n      if (!this.handleTimeout(out, info)) return;\n      out.writeString(this.sql);\n      out.flush();\n      this.emit('send_end');\n      return;\n    }\n\n    if (this.opts.namedPlaceholders) {\n      try {\n        const parsed = Parse.splitQueryPlaceholder(this.sql, info, this.initialValues, this.displaySql.bind(this));\n        this.queryParts = parsed.parts;\n        this.values = parsed.values;\n      } catch (err) {\n        this.emit('send_end');\n        return this.throwError(err, info);\n      }\n    } else {\n      this.queryParts = Parse.splitQuery(this.sql);\n      this.values = Array.isArray(this.initialValues) ? this.initialValues : [this.initialValues];\n      if (!this.validateParameters(info)) return;\n    }\n\n    out.startPacket(this);\n    out.writeInt8(0x03);\n    if (!this.handleTimeout(out, info)) return;\n    out.writeString(this.queryParts[0]);\n\n    //********************************************\n    // send params\n    //********************************************\n    const len = this.queryParts.length;\n    for (let i = 1; i < len; i++) {\n      const value = this.values[i - 1];\n\n      if (\n        value !== null &&\n        typeof value === 'object' &&\n        typeof value.pipe === 'function' &&\n        typeof value.read === 'function'\n      ) {\n        this.sending = true;\n        //********************************************\n        // param is stream,\n        // now all params will be written by event\n        //********************************************\n        this.registerStreamSendEvent(out, info);\n        this.currentParam = i;\n        out.writeInt8(QUOTE); //'\n\n        value.on('data', function (chunk) {\n          out.writeBufferEscape(chunk);\n        });\n\n        value.on(\n          'end',\n          function () {\n            out.writeInt8(QUOTE); //'\n            out.writeString(this.queryParts[this.currentParam++]);\n            this.paramWritten();\n          }.bind(this)\n        );\n\n        return;\n      } else {\n        //********************************************\n        // param isn't stream. directly write in buffer\n        //********************************************\n        this.encoder.writeParam(out, value, this.opts, info);\n        out.writeString(this.queryParts[i]);\n      }\n    }\n    out.flush();\n    this.emit('send_end');\n  }\n\n  /**\n   * If timeout is set, prepend query with SET STATEMENT max_statement_time=xx FOR, or throw an error\n   * @param out buffer\n   * @param info server information\n   * @returns {boolean} false if an error has been thrown\n   */\n  handleTimeout(out, info) {\n    if (this.opts.timeout) {\n      if (info.isMariaDB()) {\n        if (info.hasMinVersion(10, 1, 2)) {\n          out.writeString(`SET STATEMENT max_statement_time=${this.opts.timeout / 1000} FOR `);\n          return true;\n        } else {\n          const err = Errors.createError(\n            `Cannot use timeout for MariaDB server before 10.1.2. timeout value: ${this.opts.timeout}`,\n            Errors.ER_TIMEOUT_NOT_SUPPORTED,\n            info,\n            'HY000',\n            this.sql\n          );\n          this.emit('send_end');\n          this.throwError(err, info);\n          return false;\n        }\n      } else {\n        //not available for MySQL\n        // max_execution time exist, but only for select, and as hint\n        const err = Errors.createError(\n          `Cannot use timeout for MySQL server. timeout value: ${this.opts.timeout}`,\n          Errors.ER_TIMEOUT_NOT_SUPPORTED,\n          info,\n          'HY000',\n          this.sql\n        );\n        this.emit('send_end');\n        this.throwError(err, info);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Validate that parameters exists and are defined.\n   *\n   * @param info        connection info\n   * @returns {boolean} return false if any error occur.\n   */\n  validateParameters(info) {\n    //validate parameter size.\n    if (this.queryParts.length - 1 > this.values.length) {\n      this.emit('send_end');\n      this.throwNewError(\n        `Parameter at position ${this.values.length + 1} is not set`,\n        false,\n        info,\n        'HY000',\n        Errors.ER_MISSING_PARAMETER\n      );\n      return false;\n    }\n\n    //validate parameter is defined.\n    for (let i = 0; i < this.queryParts.length - 1; i++) {\n      if (this.values[i] === undefined) {\n        this.emit('send_end');\n        this.throwNewError(\n          `Parameter at position ${i + 1} is undefined\\n${this.displaySql()}`,\n          false,\n          info,\n          'HY000',\n          Errors.ER_PARAMETER_UNDEFINED\n        );\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Define params events.\n   * Each parameter indicate that he is written to socket,\n   * emitting event so next stream parameter can be written.\n   */\n  registerStreamSendEvent(out, info) {\n    // note : Implementation use recursive calls, but stack won't never get near v8 max call stack size\n    //since event launched for stream parameter only\n    this.paramWritten = function () {\n      while (true) {\n        if (this.currentParam === this.queryParts.length) {\n          //********************************************\n          // all parameters are written.\n          // flush packet\n          //********************************************\n          out.flush();\n          this.sending = false;\n          this.emit('send_end');\n          return;\n        } else {\n          const value = this.values[this.currentParam - 1];\n\n          if (value === null) {\n            out.writeStringAscii('NULL');\n            out.writeString(this.queryParts[this.currentParam++]);\n            continue;\n          }\n\n          if (typeof value === 'object' && typeof value.pipe === 'function' && typeof value.read === 'function') {\n            //********************************************\n            // param is stream,\n            //********************************************\n            out.writeInt8(QUOTE);\n            value.once(\n              'end',\n              function () {\n                out.writeInt8(QUOTE);\n                out.writeString(this.queryParts[this.currentParam++]);\n                this.paramWritten();\n              }.bind(this)\n            );\n            value.on('data', function (chunk) {\n              out.writeBufferEscape(chunk);\n            });\n            return;\n          }\n\n          //********************************************\n          // param isn't stream. directly write in buffer\n          //********************************************\n          this.encoder.writeParam(out, value, this.opts, info);\n          out.writeString(this.queryParts[this.currentParam++]);\n        }\n      }\n    }.bind(this);\n  }\n}\n\nmodule.exports = Query;\n", "'use strict';\n\nconst moment = require('moment-timezone');\n\nclass BinaryEncoder {\n  constructor(opts) {\n    this.writeBinaryDate = opts.tz\n      ? opts.tz === 'Etc/UTC'\n        ? BinaryEncoder.writeBinaryUtcDate\n        : BinaryEncoder.writeBinaryTimezoneDate\n      : BinaryEncoder.writeBinaryLocalDate;\n  }\n\n  /**\n   * Write (and escape) current parameter value to output writer\n   *\n   * @param out     output writer\n   * @param value   current parameter\n   * @param opts    connection options\n   * @param info    connection information\n   */\n\n  /**\n   * Write (and escape) current parameter value to output writer\n   *\n   * @param out     output writer\n   * @param value   current parameter\n   * @param opts    connection options\n   * @param info    connection information\n   */\n  writeParam(out, value, opts, info) {\n    switch (typeof value) {\n      case 'boolean':\n        out.writeInt8(value ? 0x01 : 0x00);\n        break;\n      case 'bigint':\n        if (value >= 2n ** 63n) {\n          out.writeLengthEncodedString(value.toString());\n        } else {\n          out.writeBigInt(value);\n        }\n        break;\n\n      case 'number':\n        // additional verification, to permit query without type,\n        // like 'SELECT ?' returning same type of value\n        if (Number.isSafeInteger(value) && value >= -2147483648 && value < 2147483647) {\n          out.writeInt32(value);\n          break;\n        }\n        out.writeDouble(value);\n        break;\n      case 'string':\n        out.writeLengthEncodedString(value);\n        break;\n      case 'object':\n        if (Object.prototype.toString.call(value) === '[object Date]') {\n          this.writeBinaryDate(value, opts, out);\n        } else if (Buffer.isBuffer(value)) {\n          out.writeLengthEncodedBuffer(value);\n        } else if (typeof value.toSqlString === 'function') {\n          out.writeLengthEncodedString(String(value.toSqlString()));\n        } else {\n          if (\n            value.type != null &&\n            [\n              'Point',\n              'LineString',\n              'Polygon',\n              'MultiPoint',\n              'MultiLineString',\n              'MultiPolygon',\n              'GeometryCollection'\n            ].includes(value.type)\n          ) {\n            const geoBuff = BinaryEncoder.getBufferFromGeometryValue(value);\n            const completeBuf = Buffer.concat([\n              Buffer.from([0, 0, 0, 0]), // SRID\n              geoBuff // WKB\n            ]);\n            out.writeLengthEncodedBuffer(completeBuf);\n          } else {\n            out.writeLengthEncodedString(JSON.stringify(value));\n          }\n        }\n        break;\n      default:\n        out.writeLengthEncodedBuffer(value);\n    }\n  }\n\n  static writeBinaryLocalDate(date, opts, out) {\n    const year = date.getFullYear();\n    const mon = date.getMonth() + 1;\n    const day = date.getDate();\n    const hour = date.getHours();\n    const min = date.getMinutes();\n    const sec = date.getSeconds();\n    const ms = date.getMilliseconds();\n    return out.writeBinaryDate(year, mon, day, hour, min, sec, ms);\n  }\n\n  static writeBinaryUtcDate(date, opts, out) {\n    const year = date.getUTCFullYear();\n    const mon = date.getUTCMonth() + 1;\n    const day = date.getUTCDate();\n    const hour = date.getUTCHours();\n    const min = date.getUTCMinutes();\n    const sec = date.getUTCSeconds();\n    const ms = date.getUTCMilliseconds();\n    return out.writeBinaryDate(year, mon, day, hour, min, sec, ms);\n  }\n\n  static writeBinaryTimezoneDate(date, opts, out) {\n    const dateZoned = new Date(moment.tz(date, opts.localTz).tz(opts.tz).format('YYYY-MM-DD HH:mm:ss.SSSSSS'));\n    BinaryEncoder.writeBinaryLocalDate(dateZoned, opts, out);\n  }\n\n  static getBufferFromGeometryValue(value, headerType) {\n    let geoBuff;\n    let pos;\n    let type;\n    if (!headerType) {\n      switch (value.type) {\n        case 'Point':\n          geoBuff = Buffer.allocUnsafe(21);\n          geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n          geoBuff.writeInt32LE(1, 1); //wkbPoint\n          if (\n            value.coordinates &&\n            Array.isArray(value.coordinates) &&\n            value.coordinates.length >= 2 &&\n            !isNaN(value.coordinates[0]) &&\n            !isNaN(value.coordinates[1])\n          ) {\n            geoBuff.writeDoubleLE(value.coordinates[0], 5); //X\n            geoBuff.writeDoubleLE(value.coordinates[1], 13); //Y\n            return geoBuff;\n          } else {\n            return null;\n          }\n\n        case 'LineString':\n          if (value.coordinates && Array.isArray(value.coordinates)) {\n            const pointNumber = value.coordinates.length;\n            geoBuff = Buffer.allocUnsafe(9 + 16 * pointNumber);\n            geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n            geoBuff.writeInt32LE(2, 1); //wkbLineString\n            geoBuff.writeInt32LE(pointNumber, 5);\n            for (let i = 0; i < pointNumber; i++) {\n              if (\n                value.coordinates[i] &&\n                Array.isArray(value.coordinates[i]) &&\n                value.coordinates[i].length >= 2 &&\n                !isNaN(value.coordinates[i][0]) &&\n                !isNaN(value.coordinates[i][1])\n              ) {\n                geoBuff.writeDoubleLE(value.coordinates[i][0], 9 + 16 * i); //X\n                geoBuff.writeDoubleLE(value.coordinates[i][1], 17 + 16 * i); //Y\n              } else {\n                return null;\n              }\n            }\n            return geoBuff;\n          } else {\n            return null;\n          }\n\n        case 'Polygon':\n          if (value.coordinates && Array.isArray(value.coordinates)) {\n            const numRings = value.coordinates.length;\n            let size = 0;\n            for (let i = 0; i < numRings; i++) {\n              size += 4 + 16 * value.coordinates[i].length;\n            }\n            geoBuff = Buffer.allocUnsafe(9 + size);\n            geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n            geoBuff.writeInt32LE(3, 1); //wkbPolygon\n            geoBuff.writeInt32LE(numRings, 5);\n            pos = 9;\n            for (let i = 0; i < numRings; i++) {\n              const lineString = value.coordinates[i];\n              if (lineString && Array.isArray(lineString)) {\n                geoBuff.writeInt32LE(lineString.length, pos);\n                pos += 4;\n                for (let j = 0; j < lineString.length; j++) {\n                  if (\n                    lineString[j] &&\n                    Array.isArray(lineString[j]) &&\n                    lineString[j].length >= 2 &&\n                    !isNaN(lineString[j][0]) &&\n                    !isNaN(lineString[j][1])\n                  ) {\n                    geoBuff.writeDoubleLE(lineString[j][0], pos); //X\n                    geoBuff.writeDoubleLE(lineString[j][1], pos + 8); //Y\n                    pos += 16;\n                  } else {\n                    return null;\n                  }\n                }\n              }\n            }\n            return geoBuff;\n          } else {\n            return null;\n          }\n\n        case 'MultiPoint':\n          type = 'MultiPoint';\n          geoBuff = Buffer.allocUnsafe(9);\n          geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n          geoBuff.writeInt32LE(4, 1); //wkbMultiPoint\n          break;\n\n        case 'MultiLineString':\n          type = 'MultiLineString';\n          geoBuff = Buffer.allocUnsafe(9);\n          geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n          geoBuff.writeInt32LE(5, 1); //wkbMultiLineString\n          break;\n\n        case 'MultiPolygon':\n          type = 'MultiPolygon';\n          geoBuff = Buffer.allocUnsafe(9);\n          geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n          geoBuff.writeInt32LE(6, 1); //wkbMultiPolygon\n          break;\n\n        case 'GeometryCollection':\n          geoBuff = Buffer.allocUnsafe(9);\n          geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n          geoBuff.writeInt32LE(7, 1); //wkbGeometryCollection\n\n          if (value.geometries && Array.isArray(value.geometries)) {\n            const coordinateLength = value.geometries.length;\n            const subArrays = [geoBuff];\n            for (let i = 0; i < coordinateLength; i++) {\n              const tmpBuf = this.getBufferFromGeometryValue(value.geometries[i]);\n              if (tmpBuf == null) break;\n              subArrays.push(tmpBuf);\n            }\n            geoBuff.writeInt32LE(subArrays.length - 1, 5);\n            return Buffer.concat(subArrays);\n          } else {\n            geoBuff.writeInt32LE(0, 5);\n            return geoBuff;\n          }\n        default:\n          return null;\n      }\n      if (value.coordinates && Array.isArray(value.coordinates)) {\n        const coordinateLength = value.coordinates.length;\n        const subArrays = [geoBuff];\n        for (let i = 0; i < coordinateLength; i++) {\n          const tmpBuf = this.getBufferFromGeometryValue(value.coordinates[i], type);\n          if (tmpBuf == null) break;\n          subArrays.push(tmpBuf);\n        }\n        geoBuff.writeInt32LE(subArrays.length - 1, 5);\n        return Buffer.concat(subArrays);\n      } else {\n        geoBuff.writeInt32LE(0, 5);\n        return geoBuff;\n      }\n    } else {\n      switch (headerType) {\n        case 'MultiPoint':\n          if (value && Array.isArray(value) && value.length >= 2 && !isNaN(value[0]) && !isNaN(value[1])) {\n            geoBuff = Buffer.allocUnsafe(21);\n            geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n            geoBuff.writeInt32LE(1, 1); //wkbPoint\n            geoBuff.writeDoubleLE(value[0], 5); //X\n            geoBuff.writeDoubleLE(value[1], 13); //Y\n            return geoBuff;\n          }\n          return null;\n\n        case 'MultiLineString':\n          if (value && Array.isArray(value)) {\n            const pointNumber = value.length;\n            geoBuff = Buffer.allocUnsafe(9 + 16 * pointNumber);\n            geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n            geoBuff.writeInt32LE(2, 1); //wkbLineString\n            geoBuff.writeInt32LE(pointNumber, 5);\n            for (let i = 0; i < pointNumber; i++) {\n              if (\n                value[i] &&\n                Array.isArray(value[i]) &&\n                value[i].length >= 2 &&\n                !isNaN(value[i][0]) &&\n                !isNaN(value[i][1])\n              ) {\n                geoBuff.writeDoubleLE(value[i][0], 9 + 16 * i); //X\n                geoBuff.writeDoubleLE(value[i][1], 17 + 16 * i); //Y\n              } else {\n                return null;\n              }\n            }\n            return geoBuff;\n          }\n          return null;\n\n        case 'MultiPolygon':\n          if (value && Array.isArray(value)) {\n            const numRings = value.length;\n            let size = 0;\n            for (let i = 0; i < numRings; i++) {\n              size += 4 + 16 * value[i].length;\n            }\n            geoBuff = Buffer.allocUnsafe(9 + size);\n            geoBuff.writeInt8(0x01, 0); //LITTLE ENDIAN\n            geoBuff.writeInt32LE(3, 1); //wkbPolygon\n            geoBuff.writeInt32LE(numRings, 5);\n            pos = 9;\n            for (let i = 0; i < numRings; i++) {\n              const lineString = value[i];\n              if (lineString && Array.isArray(lineString)) {\n                geoBuff.writeInt32LE(lineString.length, pos);\n                pos += 4;\n                for (let j = 0; j < lineString.length; j++) {\n                  if (\n                    lineString[j] &&\n                    Array.isArray(lineString[j]) &&\n                    lineString[j].length >= 2 &&\n                    !isNaN(lineString[j][0]) &&\n                    !isNaN(lineString[j][1])\n                  ) {\n                    geoBuff.writeDoubleLE(lineString[j][0], pos); //X\n                    geoBuff.writeDoubleLE(lineString[j][1], pos + 8); //Y\n                    pos += 16;\n                  } else {\n                    return null;\n                  }\n                }\n              }\n            }\n            return geoBuff;\n          }\n          return null;\n      }\n      return null;\n    }\n  }\n}\n\nmodule.exports = BinaryEncoder;\n", "'use strict';\n\n/**\n * Prepare result\n * see https://mariadb.com/kb/en/com_stmt_prepare/#com_stmt_prepare_ok\n */\nclass PrepareResultPacket {\n  #connExecutePromise;\n  constructor(statementId, parameters, columns, database, sql, placeHolderIndex, executePromise, emitter) {\n    this.id = statementId;\n    this.parameters = parameters;\n    this.columns = columns;\n    this.database = database;\n    this.query = sql;\n    this.closed = false;\n    this._placeHolderIndex = placeHolderIndex;\n    this.#connExecutePromise = executePromise;\n    this.emitter = emitter;\n  }\n\n  execute(values, opts, cb) {\n    let _opts = opts,\n      _cb = cb;\n\n    if (typeof _opts === 'function') {\n      _cb = _opts;\n      _opts = undefined;\n    }\n\n    const promise = new Promise((resolve, reject) => this.#connExecutePromise(values, opts, this, resolve, reject));\n    if (!_cb) {\n      return promise;\n    } else {\n      promise\n        .then((res) => {\n          if (_cb) _cb(null, res, null);\n        })\n        .catch(_cb || function (err) {});\n      return;\n    }\n  }\n\n  close() {\n    if (!this.closed) {\n      this.closed = true;\n      this.emitter.emit('close_prepare', this);\n    }\n  }\n}\n\nmodule.exports = PrepareResultPacket;\n", "'use strict';\n\nconst PrepareResultPacket = require('./prepare-result-packet');\n\n/**\n * Prepare result\n * see https://mariadb.com/kb/en/com_stmt_prepare/#com_stmt_prepare_ok\n */\nclass CachedPrepareResultPacket extends PrepareResultPacket {\n  constructor(statementId, parameters, columns, database, sql, placeHolderIndex, executePromise, emitter, isCallback) {\n    super(statementId, parameters, columns, database, sql, placeHolderIndex, executePromise, emitter, isCallback);\n    this.cached = true;\n    this.use = 1;\n  }\n\n  incrementUse() {\n    this.use += 1;\n  }\n\n  unCache() {\n    this.cached = false;\n    if (this.use <= 0) {\n      super.close();\n    }\n  }\n\n  close() {\n    this.use -= 1;\n    if (this.use <= 0 && !this.cached) {\n      super.close();\n    }\n  }\n}\n\nmodule.exports = CachedPrepareResultPacket;\n", "'use strict';\nconst Parser = require('./parser');\nconst Parse = require('../misc/parse');\nconst BinaryEncoder = require('./encoder/binary-encoder');\nconst CachedPrepareResultPacket = require('./class/cached-prepare-result-packet');\nconst PrepareResult = require('./class/prepare-result-packet');\n\n/**\n * send a COM_STMT_PREPARE: permits sending a prepare packet\n * see https://mariadb.com/kb/en/com_stmt_prepare/\n */\nclass Prepare extends Parser {\n  constructor(resolve, reject, opts, connOpts, sql, executePromise, emitter) {\n    super(resolve, reject, opts, connOpts, sql, null);\n    this.encoder = new BinaryEncoder(this.opts);\n    this.binary = true;\n    this.executePromise = executePromise;\n    this.emitter = emitter;\n  }\n\n  /**\n   * Send COM_STMT_PREPARE\n   *\n   * @param out   output writer\n   * @param opts  connection options\n   * @param info  connection information\n   */\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query(`PREPARE: ${this.sql}`);\n    this.onPacketReceive = this.readPrepareResultPacket;\n    // check in cache if enabled\n    if (info._prepareCache) {\n      const key = info.database + '|' + this.sql;\n      const cachedItem = info._prepareCache.get(key);\n      if (cachedItem) {\n        cachedItem.incrementUse();\n        this.emit('send_end');\n        return this.successEnd(cachedItem);\n      }\n    }\n\n    if (this.opts.namedPlaceholders) {\n      const res = Parse.searchPlaceholder(this.sql);\n      this.sql = res.sql;\n      this.placeHolderIndex = res.placeHolderIndex;\n    }\n\n    out.startPacket(this);\n    out.writeInt8(0x16);\n    out.writeString(this.sql);\n    out.flush();\n    this.emit('send_end');\n  }\n\n  successPrepare(info, opts) {\n    let prepare;\n    if (info._prepareCache) {\n      const key = info.database + '|' + this.sql;\n      prepare = new CachedPrepareResultPacket(\n        this.statementId,\n        this._parameterPrepare,\n        this._columnsPrepare,\n        info.database,\n        this.sql,\n        this.placeHolderIndex,\n        this.executePromise,\n        this.emitter\n      );\n      info._prepareCache.set(key, prepare);\n    } else {\n      prepare = new PrepareResult(\n        this.statementId,\n        this._parameterPrepare,\n        this._columnsPrepare,\n        info.database,\n        this.sql,\n        this.placeHolderIndex,\n        this.executePromise,\n        this.emitter\n      );\n    }\n    this._columnsPrepare = null;\n    this._parameterPrepare = null;\n    return this.success(prepare);\n  }\n\n  /**\n   * Display current SQL with parameters (truncated if too big)\n   *\n   * @returns {string}\n   */\n  displaySql() {\n    if (this.opts) {\n      if (this.sql.length > this.opts.debugLen) {\n        return this.sql.substring(0, this.opts.debugLen) + '...';\n      }\n    }\n    return this.sql;\n  }\n}\n\nmodule.exports = Prepare;\n", "'use strict';\n\nconst Parser = require('./parser');\nconst Errors = require('../misc/errors');\nconst BinaryEncoder = require('./encoder/binary-encoder');\nconst BinaryDecoder = require('./decoder/binary-decoder');\nconst FieldType = require('../const/field-type');\n\n/**\n * Protocol COM_STMT_EXECUTE\n * see : https://mariadb.com/kb/en/com_stmt_execute/\n */\nclass Execute extends Parser {\n  constructor(resolve, reject, options, connOpts, prepare, values) {\n    super(resolve, reject, options, connOpts, prepare.query, values);\n    this.encoder = new BinaryEncoder(this.opts);\n    this.binary = true;\n    this.prepare = prepare;\n    this.canSkipMeta = true;\n  }\n\n  /**\n   * Send COM_QUERY\n   *\n   * @param out   output writer\n   * @param opts  connection options\n   * @param info  connection information\n   */\n  start(out, opts, info) {\n    this.onPacketReceive = this.readResponsePacket;\n    this.values = [];\n\n    if (this.opts.namedPlaceholders && this.prepare._placeHolderIndex) {\n      // using named placeholders, so change values accordingly\n      this.values = new Array(this.prepare.parameters.length);\n      if (this.initialValues) {\n        for (let i = 0; i < this.prepare._placeHolderIndex.length; i++) {\n          this.values[i] = this.initialValues[this.prepare._placeHolderIndex[i]];\n        }\n      }\n    } else {\n      if (this.initialValues)\n        this.values = Array.isArray(this.initialValues) ? this.initialValues : [this.initialValues];\n    }\n\n    if (!this.validateParameters(info)) return;\n\n    // send long data using COM_STMT_SEND_LONG_DATA\n    this.longDataStep = false; // send long data\n    for (let i = 0; i < this.prepare.parameters.length; i++) {\n      const value = this.values[i];\n      if (\n        value !== null &&\n        ((typeof value === 'object' && typeof value.pipe === 'function' && typeof value.read === 'function') ||\n          Buffer.isBuffer(value))\n      ) {\n        if (opts.logger.query)\n          opts.logger.query(\n            `EXECUTE: (${this.prepare.id}) sql: ${opts.logger.logParam ? this.displaySql() : this.sql}`\n          );\n        if (!this.longDataStep) {\n          this.longDataStep = true;\n          this.registerStreamSendEvent(out, info);\n          this.currentParam = i;\n        }\n        this.sendComStmtLongData(out, info, value);\n        return;\n      }\n    }\n\n    if (!this.longDataStep) {\n      // no stream parameter, so can send directly\n      if (opts.logger.query)\n        opts.logger.query(`EXECUTE: (${this.prepare.id}) sql: ${opts.logger.logParam ? this.displaySql() : this.sql}`);\n      this.sendComStmtExecute(out, info);\n    }\n  }\n\n  /**\n   * Validate that parameters exists and are defined.\n   *\n   * @param info        connection info\n   * @returns {boolean} return false if any error occur.\n   */\n  validateParameters(info) {\n    //validate parameter size.\n    if (this.prepare.parameters.length > this.values.length) {\n      this.emit('send_end');\n      this.throwNewError(\n        `Parameter at position ${this.values.length} is not set\\\\nsql: ${this.displaySql()}`,\n        false,\n        info,\n        'HY000',\n        Errors.ER_MISSING_PARAMETER\n      );\n      return false;\n    }\n\n    //validate parameter is defined.\n    for (let i = 0; i < this.prepare.parameters.length; i++) {\n      if (this.values[i] === undefined) {\n        this.emit('send_end');\n        let errMsg = `Parameter at position ${i} is undefined`;\n        if (this.opts.namedPlaceholders && this.prepare._placeHolderIndex) {\n          errMsg = `Parameter named ${this.prepare._placeHolderIndex[i]} is not set`;\n        }\n\n        this.throwNewError(errMsg + '\\nsql: ' + this.displaySql(), false, info, 'HY000', Errors.ER_PARAMETER_UNDEFINED);\n        return false;\n      }\n\n      // special check for GEOJSON that can be null even if object is not\n      if (\n        this.values[i] &&\n        this.values[i].type != null &&\n        [\n          'Point',\n          'LineString',\n          'Polygon',\n          'MultiPoint',\n          'MultiLineString',\n          'MultiPolygon',\n          'GeometryCollection'\n        ].includes(this.values[i].type)\n      ) {\n        const geoBuff = BinaryEncoder.getBufferFromGeometryValue(this.values[i]);\n        if (geoBuff == null) {\n          this.values[i] = null;\n        } else {\n          this.values[i] = Buffer.concat([\n            Buffer.from([0, 0, 0, 0]), // SRID\n            geoBuff // WKB\n          ]);\n        }\n      }\n    }\n    return true;\n  }\n\n  sendComStmtLongData(out, info, value) {\n    out.startPacket(this);\n    out.writeInt8(0x18);\n    out.writeInt32(this.prepare.id);\n    out.writeInt16(this.currentParam);\n\n    if (Buffer.isBuffer(value)) {\n      out.writeBuffer(value, 0, value.length);\n      out.flush();\n      this.currentParam++;\n      return this.paramWritten();\n    }\n    this.sending = true;\n\n    // streaming\n    value.on('data', function (chunk) {\n      out.writeBuffer(chunk, 0, chunk.length);\n    });\n\n    value.on(\n      'end',\n      function () {\n        out.flush();\n        this.currentParam++;\n        this.paramWritten();\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Send a COM_STMT_EXECUTE\n   * @param out\n   * @param info\n   */\n  sendComStmtExecute(out, info) {\n    const parameterCount = this.prepare.parameters.length;\n\n    let nullCount = Math.floor((parameterCount + 7) / 8);\n    const nullBitsBuffer = Buffer.alloc(nullCount);\n    for (let i = 0; i < parameterCount; i++) {\n      if (this.values[i] === null) {\n        nullBitsBuffer[Math.floor(i / 8)] |= 1 << i % 8;\n      }\n    }\n\n    out.startPacket(this);\n    out.writeInt8(0x17); // COM_STMT_EXECUTE\n    out.writeInt32(this.prepare.id); // Statement id\n    out.writeInt8(0); // no cursor flag\n    out.writeInt32(1); // 1 command\n    out.writeBuffer(nullBitsBuffer, 0, nullCount); // null buffer\n    out.writeInt8(1); // always send type to server\n\n    // send types\n    for (let i = 0; i < parameterCount; i++) {\n      const val = this.values[i];\n      if (val != null) {\n        switch (typeof val) {\n          case 'boolean':\n            out.writeInt8(FieldType.TINY);\n            break;\n          case 'bigint':\n            if (val >= 2n ** 63n) {\n              out.writeInt8(FieldType.NEWDECIMAL);\n            } else {\n              out.writeInt8(FieldType.BIGINT);\n            }\n            break;\n          case 'number':\n            // additional verification, to permit query without type,\n            // like 'SELECT ?' returning same type of value\n            if (Number.isSafeInteger(val) && val >= -2147483648 && val < 2147483647) {\n              out.writeInt8(FieldType.INT);\n              break;\n            }\n            out.writeInt8(FieldType.DOUBLE);\n            break;\n          case 'string':\n            out.writeInt8(FieldType.VAR_STRING);\n            break;\n          case 'object':\n            if (Object.prototype.toString.call(val) === '[object Date]') {\n              out.writeInt8(FieldType.TIMESTAMP);\n            } else if (Buffer.isBuffer(val)) {\n              out.writeInt8(FieldType.BLOB);\n            } else if (typeof val.toSqlString === 'function') {\n              out.writeInt8(FieldType.VAR_STRING);\n            } else if (typeof val.pipe === 'function' && typeof val.read === 'function') {\n              out.writeInt8(FieldType.BLOB);\n            } else {\n              out.writeInt8(FieldType.VAR_STRING);\n            }\n            break;\n          default:\n            out.writeInt8(FieldType.BLOB);\n            break;\n        }\n      } else {\n        out.writeInt8(FieldType.VAR_STRING);\n      }\n      out.writeInt8(0);\n    }\n\n    //********************************************\n    // send not null / not streaming values\n    //********************************************\n    for (let i = 0; i < parameterCount; i++) {\n      const value = this.values[i];\n      if (\n        value !== null &&\n        !(typeof value === 'object' && typeof value.pipe === 'function' && typeof value.read === 'function') &&\n        !Buffer.isBuffer(value)\n      ) {\n        this.encoder.writeParam(out, value, this.opts, info);\n      }\n    }\n    out.flush();\n    this.sending = false;\n    this.emit('send_end');\n  }\n\n  /**\n   * Define params events.\n   * Each parameter indicate that he is written to socket,\n   * emitting event so next stream parameter can be written.\n   */\n  registerStreamSendEvent(out, info) {\n    // note : Implementation use recursive calls, but stack won't never get near v8 max call stack size\n    //since event launched for stream parameter only\n    this.paramWritten = function () {\n      if (this.longDataStep) {\n        for (; this.currentParam < this.prepare.parameters.length; this.currentParam++) {\n          const value = this.values[this.currentParam];\n          if (\n            (value !== null &&\n              typeof value === 'object' &&\n              typeof value.pipe === 'function' &&\n              typeof value.read === 'function') ||\n            Buffer.isBuffer(value)\n          ) {\n            this.sendComStmtLongData(out, info, value);\n            return;\n          }\n        }\n        this.longDataStep = false; // all streams have been send\n      }\n\n      if (!this.longDataStep) {\n        this.sendComStmtExecute(out, info);\n      }\n    }.bind(this);\n  }\n}\n\nmodule.exports = Execute;\n", "'use strict';\n\nconst Command = require('./command');\n\n/**\n * Close prepared statement\n * see https://mariadb.com/kb/en/3-binary-protocol-prepared-statements-com_stmt_close/\n */\nclass ClosePrepare extends Command {\n  constructor(resolve, reject, prepare) {\n    super(resolve, reject);\n    this.prepare = prepare;\n  }\n\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query(`CLOSE PREPARE: (${this.prepare.id}) ${this.prepare.query}`);\n    out.startPacket(this);\n    out.writeInt8(0x19);\n    out.writeInt32(this.prepare.id);\n    out.flush();\n    this.onPacketReceive = null;\n    this.emit('send_end');\n    this.emit('end');\n  }\n}\n\nmodule.exports = ClosePrepare;\n", "'use strict';\n\nconst Parser = require('./parser');\nconst Errors = require('../misc/errors');\nconst BinaryEncoder = require('./encoder/binary-encoder');\nconst FieldType = require('../const/field-type');\nconst OkPacket = require('./class/ok-packet');\n\n/**\n * Protocol COM_STMT_BULK_EXECUTE\n * see : https://mariadb.com/kb/en/library/com_stmt_bulk_execute/\n */\nclass BatchBulk extends Parser {\n  constructor(resolve, reject, options, connOpts, prepare, values) {\n    super(resolve, reject, options, connOpts, prepare.query, values);\n    this.encoder = new BinaryEncoder(this.opts);\n    this.binary = true;\n    this.prepare = prepare;\n    this.canSkipMeta = true;\n  }\n\n  /**\n   * Send COM_STMT_BULK_EXECUTE\n   *\n   * @param out   output writer\n   * @param opts  connection options\n   * @param info  connection information\n   */\n  start(out, opts, info) {\n    this.info = info;\n    this.values = this.initialValues;\n\n    if (this.opts.timeout) {\n      const err = Errors.createError(\n        'Cannot use timeout for Batch statement',\n        Errors.ER_TIMEOUT_NOT_SUPPORTED,\n        info,\n        'HY000',\n        this.sql\n      );\n      this.emit('send_end');\n      this.throwError(err, info);\n      return;\n    }\n    this.onPacketReceive = this.readResponsePacket;\n    this.values = [];\n\n    if (this.opts.namedPlaceholders && this.prepare._placeHolderIndex) {\n      // using named placeholders, so change values accordingly\n      this.values = [];\n      if (this.initialValues) {\n        for (let r = 0; r < this.initialValues.length; r++) {\n          let val = this.initialValues[r];\n          this.values[r] = new Array(this.prepare.parameters.length);\n          for (let i = 0; i < this.prepare._placeHolderIndex.length; i++) {\n            this.values[r][i] = val[this.prepare._placeHolderIndex[i]];\n          }\n        }\n      }\n    } else {\n      if (this.initialValues)\n        this.values = Array.isArray(this.initialValues) ? this.initialValues : [this.initialValues];\n    }\n\n    if (!this.validateParameters(info)) return;\n\n    this.sendComStmtBulkExecute(out, opts, info);\n  }\n\n  /**\n   * Set header type\n   * @param value current value\n   * @param parameterCount parameter number\n   * @returns {*[]} header type array\n   */\n  parameterHeaderFromValue(value, parameterCount) {\n    const parameterHeaderType = [];\n\n    // set header type\n    for (let i = 0; i < parameterCount; i++) {\n      const val = value[i];\n      if (val != null) {\n        switch (typeof val) {\n          case 'boolean':\n            parameterHeaderType[i] = FieldType.TINY;\n            break;\n          case 'bigint':\n            if (val >= 2n ** 63n) {\n              parameterHeaderType[i] = FieldType.NEWDECIMAL;\n            } else {\n              parameterHeaderType[i] = FieldType.BIGINT;\n            }\n            break;\n          case 'number':\n            // additional verification, to permit query without type,\n            // like 'SELECT ?' returning same type of value\n            if (Number.isSafeInteger(val) && val >= -2147483648 && val < 2147483647) {\n              parameterHeaderType[i] = FieldType.INT;\n              break;\n            }\n            parameterHeaderType[i] = FieldType.DOUBLE;\n            break;\n          case 'string':\n            parameterHeaderType[i] = FieldType.VAR_STRING;\n            break;\n          case 'object':\n            if (Object.prototype.toString.call(val) === '[object Date]') {\n              parameterHeaderType[i] = FieldType.TIMESTAMP;\n            } else if (Buffer.isBuffer(val)) {\n              parameterHeaderType[i] = FieldType.BLOB;\n            } else if (typeof val.toSqlString === 'function') {\n              parameterHeaderType[i] = FieldType.VAR_STRING;\n            } else {\n              if (\n                val.type != null &&\n                [\n                  'Point',\n                  'LineString',\n                  'Polygon',\n                  'MultiPoint',\n                  'MultiLineString',\n                  'MultiPolygon',\n                  'GeometryCollection'\n                ].includes(val.type)\n              ) {\n                parameterHeaderType[i] = FieldType.BLOB;\n              } else {\n                parameterHeaderType[i] = FieldType.VAR_STRING;\n              }\n            }\n            break;\n          default:\n            parameterHeaderType[i] = FieldType.BLOB;\n            break;\n        }\n      } else {\n        parameterHeaderType[i] = FieldType.VAR_STRING;\n      }\n    }\n    return parameterHeaderType;\n  }\n\n  /**\n   * Check current value has same header than set in initial BULK header\n   *\n   * @param parameterHeaderType current header\n   * @param value current value\n   * @param parameterCount number of parameter\n   * @returns {boolean} true if identical\n   */\n  checkSameHeader(parameterHeaderType, value, parameterCount) {\n    // set header type\n    for (let i = 0; i < parameterCount; i++) {\n      const val = value[i];\n      if (val != null) {\n        switch (typeof val) {\n          case 'boolean':\n            if (parameterHeaderType[i] !== FieldType.TINY) return false;\n            break;\n          case 'bigint':\n            if (val >= 2n ** 63n) {\n              if (parameterHeaderType[i] !== FieldType.VAR_STRING) return false;\n            } else {\n              if (parameterHeaderType[i] !== FieldType.BIGINT) return false;\n            }\n            break;\n          case 'number':\n            // additional verification, to permit query without type,\n            // like 'SELECT ?' returning same type of value\n            if (Number.isSafeInteger(val) && val >= -2147483648 && val < 2147483647) {\n              if (parameterHeaderType[i] !== FieldType.INT) return false;\n              break;\n            }\n            if (parameterHeaderType[i] !== FieldType.DOUBLE) return false;\n            break;\n          case 'string':\n            if (parameterHeaderType[i] !== FieldType.VAR_STRING) return false;\n            break;\n          case 'object':\n            if (Object.prototype.toString.call(val) === '[object Date]') {\n              if (parameterHeaderType[i] !== FieldType.TIMESTAMP) return false;\n            } else if (Buffer.isBuffer(val)) {\n              if (parameterHeaderType[i] !== FieldType.BLOB) return false;\n            } else if (typeof val.toSqlString === 'function') {\n              if (parameterHeaderType[i] !== FieldType.VAR_STRING) return false;\n            } else {\n              if (\n                val.type != null &&\n                [\n                  'Point',\n                  'LineString',\n                  'Polygon',\n                  'MultiPoint',\n                  'MultiLineString',\n                  'MultiPolygon',\n                  'GeometryCollection'\n                ].includes(val.type)\n              ) {\n                if (parameterHeaderType[i] !== FieldType.BLOB) return false;\n              } else {\n                if (parameterHeaderType[i] !== FieldType.VAR_STRING) return false;\n              }\n            }\n            break;\n          default:\n            if (parameterHeaderType[i] !== FieldType.BLOB) return false;\n            break;\n        }\n      } else {\n        if (parameterHeaderType[i] !== FieldType.VAR_STRING) return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Send a COM_STMT_BULK_EXECUTE\n   * @param out output packet writer\n   * @param opts options\n   * @param info information\n   */\n  sendComStmtBulkExecute(out, opts, info) {\n    if (opts.logger.query)\n      opts.logger.query(`BULK: (${this.prepare.id}) sql: ${opts.logger.logParam ? this.displaySql() : this.sql}`);\n    const parameterCount = this.prepare.parameters.length;\n    this.rowIdx = 0;\n    this.vals = this.values[this.rowIdx++];\n    let parameterHeaderType = this.parameterHeaderFromValue(this.vals, parameterCount);\n    let lastCmdData = null;\n    this.bulkPacketNo = 0;\n    this.sending = true;\n\n    /**\n     * Implementation After writing bunch of parameter to buffer is marked. then : - when writing\n     * next bunch of parameter, if buffer grow more than max_allowed_packet, send buffer up to mark,\n     * then create a new packet with current bunch of data - if bunch of parameter data type changes\n     * send buffer up to mark, then create a new packet with new data type.\n     *\n     * <p>Problem remains if a bunch of parameter is bigger than max_allowed_packet\n     */\n    main_loop: while (true) {\n      this.bulkPacketNo++;\n      out.startPacket(this);\n      out.writeInt8(0xfa); // COM_STMT_BULK_EXECUTE\n      out.writeInt32(this.prepare.id); // Statement id\n      out.writeInt16(128); // always SEND_TYPES_TO_SERVER\n\n      for (let i = 0; i < parameterCount; i++) {\n        out.writeInt16(parameterHeaderType[i]);\n      }\n\n      if (lastCmdData != null) {\n        const err = out.checkMaxAllowedLength(lastCmdData.length, info);\n        if (err) {\n          this.throwError(err, info);\n          return;\n        }\n        out.writeBuffer(lastCmdData, 0, lastCmdData.length);\n        out.mark();\n        lastCmdData = null;\n        if (!this.rowIdx >= this.values.length) {\n          break;\n        }\n        this.vals = this.values[this.rowIdx++];\n      }\n\n      parameter_loop: while (true) {\n        for (let i = 0; i < parameterCount; i++) {\n          let param = this.vals[i];\n          if (param !== null) {\n            // special check for GEOJSON that can be null even if object is not\n            if (\n              param.type != null &&\n              [\n                'Point',\n                'LineString',\n                'Polygon',\n                'MultiPoint',\n                'MultiLineString',\n                'MultiPolygon',\n                'GeometryCollection'\n              ].includes(param.type)\n            ) {\n              const geoBuff = BinaryEncoder.getBufferFromGeometryValue(param);\n              if (geoBuff == null) {\n                out.writeInt8(0x01); // value is null\n              } else {\n                out.writeInt8(0x00); // value follow\n                param = Buffer.concat([\n                  Buffer.from([0, 0, 0, 0]), // SRID\n                  geoBuff // WKB\n                ]);\n                this.encoder.writeParam(out, param, this.opts, info);\n              }\n            } else {\n              out.writeInt8(0x00); // value follow\n              this.encoder.writeParam(out, param, this.opts, info);\n            }\n          } else {\n            out.writeInt8(0x01); // value is null\n          }\n        }\n        // if > max_allowed_packet, need to flush before mark\n        //TODO\n\n        if (!out.bufIsDataAfterMark() && !out.isMarked() && out.hasFlushed()) {\n          // parameter were too big to fit in a MySQL packet\n          // need to finish the packet separately\n          out.flush();\n          if (!this.rowIdx >= this.values.length) {\n            break main_loop;\n          }\n          this.vals = this.values[this.rowIdx++];\n\n          // reset header type\n          parameterHeaderType = this.parameterHeaderFromValue(this.vals, parameterCount);\n          break parameter_loop;\n        }\n\n        if (out.isMarked() && out.bufIsAfterMaxPacketLength()) {\n          // buffer > max_allowed_packet, so flush until mark, and create new packet.\n          out.flushBufferStopAtMark();\n          out.mark();\n          lastCmdData = out.resetMark();\n          break;\n        }\n\n        out.mark();\n\n        if (out.bufIsDataAfterMark()) {\n          // flush has been done\n          lastCmdData = out.resetMark();\n          break;\n        }\n\n        if (this.rowIdx >= this.values.length) {\n          break main_loop;\n        }\n\n        this.vals = this.values[this.rowIdx++];\n\n        // ensure type has not changed\n        if (!this.checkSameHeader(parameterHeaderType, this.vals, parameterCount)) {\n          out.flush();\n          // reset header type\n          parameterHeaderType = this.parameterHeaderFromValue(this.vals, parameterCount);\n          break parameter_loop;\n        }\n      }\n    }\n    out.flush();\n    this.sending = false;\n    this.emit('send_end');\n  }\n\n  displaySql() {\n    if (this.opts && this.initialValues) {\n      if (this.sql.length > this.opts.debugLen) {\n        return this.sql.substring(0, this.opts.debugLen) + '...';\n      }\n\n      let sqlMsg = this.sql + ' - parameters:';\n      sqlMsg += '[';\n      for (let i = 0; i < this.initialValues.length; i++) {\n        if (i !== 0) sqlMsg += ',';\n        let param = this.initialValues[i];\n        sqlMsg = this.logParameters(sqlMsg, param);\n        if (sqlMsg.length > this.opts.debugLen) {\n          sqlMsg = sqlMsg.substr(0, this.opts.debugLen) + '...';\n          break;\n        }\n      }\n      sqlMsg += ']';\n      return sqlMsg;\n    }\n    return this.sql + ' - parameters:[]';\n  }\n\n  success(val) {\n    this.bulkPacketNo--;\n\n    if (!this.sending && this.bulkPacketNo === 0) {\n      this.prepare.close();\n      this.packet = null;\n      if (this.firstError) {\n        this.resolve = null;\n        this.onPacketReceive = null;\n        this._columns = null;\n        this._rows = null;\n        process.nextTick(this.reject, this.firstError);\n        this.reject = null;\n        this.emit('end', this.firstError);\n      } else {\n        if (this._rows[0].affectedRows != undefined) {\n          // ok packets, reassemble them if needed\n          let totalAffectedRows = 0;\n          this._rows.forEach((row) => {\n            totalAffectedRows += row.affectedRows;\n          });\n\n          const rs = new OkPacket(\n            totalAffectedRows,\n            this._rows[0].insertId,\n            this._rows[this._rows.length - 1].warningStatus\n          );\n          this.successEnd(rs);\n        } else {\n          // insert with returning\n          if (this._rows.length == 1) {\n            this.successEnd(this._rows[0]);\n          } else {\n            const rs = [];\n            rs.meta = this._rows[0].meta;\n            this._rows.forEach((row) => {\n              Array.prototype.push.apply(rs, row);\n            });\n            rs.meta = this._rows[0].meta;\n            this.successEnd(rs);\n          }\n        }\n        this._columns = null;\n        this._rows = null;\n      }\n      return;\n    }\n\n    if (!this.firstError) {\n      this._responseIndex++;\n      this.onPacketReceive = this.readResponsePacket;\n    }\n  }\n\n  throwError(err, info) {\n    this.bulkPacketNo--;\n    if (!this.firstError) {\n      if (err.fatal) {\n        this.bulkPacketNo = 0;\n      }\n      if (this.stack) {\n        err = Errors.createError(err.message, err.errno, info, err.sqlState, this.sql, err.fatal, this.stack, false);\n      }\n      this.firstError = err;\n    }\n\n    if (!this.sending && this.bulkPacketNo === 0) {\n      this.resolve = null;\n      this.prepare.close();\n      this.emit('send_end');\n      process.nextTick(this.reject, this.firstError);\n      this.reject = null;\n      this.onPacketReceive = null;\n      this.emit('end', this.firstError);\n    } else {\n      this._responseIndex++;\n      this.onPacketReceive = this.readResponsePacket;\n    }\n  }\n\n  /**\n   * Validate that parameters exists and are defined.\n   *\n   * @param info        connection info\n   * @returns {boolean} return false if any error occur.\n   */\n  validateParameters(info) {\n    //validate parameter size.\n    const nbParameter = this.prepare.parameters.length;\n    for (let r = 0; r < this.values.length; r++) {\n      if (!Array.isArray(this.values[r])) this.values[r] = [this.values[r]];\n\n      //validate parameter is defined.\n      for (let i = 0; i < nbParameter; i++) {\n        if (this.values[r][i] === undefined) {\n          this.emit('send_end');\n          this.throwNewError(\n            `Parameter at position ${i} is not set for values ${r}\\n ${this.displaySql()}`,\n            false,\n            info,\n            'HY000',\n            Errors.ER_PARAMETER_UNDEFINED\n          );\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n\nmodule.exports = BatchBulk;\n", "// noinspection JSBitwiseOperatorUsage\n\n'use strict';\n\nconst Iconv = require('iconv-lite');\nconst Capabilities = require('../const/capabilities');\nconst Ed25519PasswordAuth = require('./handshake/auth/ed25519-password-auth');\nconst NativePasswordAuth = require('./handshake/auth/native-password-auth');\nconst Collations = require('../const/collations');\nconst Handshake = require('./handshake/handshake');\n\n/**\n * send a COM_CHANGE_USER: resets the connection and re-authenticates with the given credentials\n * see https://mariadb.com/kb/en/library/com_change_user/\n */\nclass ChangeUser extends Handshake {\n  constructor(options, connOpts, resolve, reject, addCommand) {\n    super(resolve, reject, () => {}, addCommand);\n    this.configAssign(connOpts, options);\n  }\n\n  start(out, opts, info) {\n    if (opts.logger.query) opts.logger.query(`CHANGE USER to '${this.opts.user || ''}'`);\n    let authToken;\n    const pwd = Array.isArray(this.opts.password) ? this.opts.password[0] : this.opts.password;\n    switch (info.defaultPluginName) {\n      case 'mysql_native_password':\n      case '':\n        authToken = NativePasswordAuth.encryptPassword(pwd, info.seed, 'sha1');\n        break;\n      case 'client_ed25519':\n        authToken = Ed25519PasswordAuth.encryptPassword(pwd, info.seed);\n        break;\n      default:\n        authToken = Buffer.alloc(0);\n        break;\n    }\n\n    out.startPacket(this);\n    out.writeInt8(0x11);\n    out.writeString(this.opts.user || '');\n    out.writeInt8(0);\n\n    if (info.serverCapabilities & Capabilities.SECURE_CONNECTION) {\n      out.writeInt8(authToken.length);\n      out.writeBuffer(authToken, 0, authToken.length);\n    } else {\n      out.writeBuffer(authToken, 0, authToken.length);\n      out.writeInt8(0);\n    }\n\n    if (info.clientCapabilities & Capabilities.CONNECT_WITH_DB) {\n      out.writeString(this.opts.database);\n      out.writeInt8(0);\n      info.database = this.opts.database;\n    }\n    // handle default collation.\n    if (this.opts.collation) {\n      // collation has been set using charset.\n      // If server use same charset, use server collation.\n      if (!this.opts.charset || info.collation.charset !== this.opts.collation.charset) {\n        info.collation = this.opts.collation;\n      }\n    } else {\n      // if not utf8mb4 and no configuration, force to use UTF8MB4_UNICODE_CI\n      if (info.collation.charset !== 'utf8' || info.collation.maxLength === 3) {\n        info.collation = Collations.fromIndex(224);\n      }\n    }\n    out.writeInt16(info.collation.index);\n\n    if (info.clientCapabilities & Capabilities.PLUGIN_AUTH) {\n      out.writeString(info.defaultPluginName);\n      out.writeInt8(0);\n    }\n\n    if (info.clientCapabilities & Capabilities.CONNECT_ATTRS) {\n      out.writeInt8(0xfc);\n      let initPos = out.pos; //save position, assuming connection attributes length will be less than 2 bytes length\n      out.writeInt16(0);\n\n      const encoding = this.opts.collation.charset;\n\n      writeParam(out, '_client_name', encoding);\n      writeParam(out, 'MariaDB connector/Node', encoding);\n\n      let packageJson = require('../../package.json');\n      writeParam(out, '_client_version', encoding);\n      writeParam(out, packageJson.version, encoding);\n\n      writeParam(out, '_node_version', encoding);\n      writeParam(out, process.versions.node, encoding);\n\n      if (opts.connectAttributes !== true) {\n        let attrNames = Object.keys(this.opts.connectAttributes);\n        for (let k = 0; k < attrNames.length; ++k) {\n          writeParam(out, attrNames[k], encoding);\n          writeParam(out, this.opts.connectAttributes[attrNames[k]], encoding);\n        }\n      }\n\n      //write end size\n      out.writeInt16AtPos(initPos);\n    }\n\n    out.flush();\n    this.onPacketReceive = this.handshakeResult;\n  }\n\n  /**\n   * Assign global configuration option used by result-set to current query option.\n   * a little faster than Object.assign() since doest copy all information\n   *\n   * @param connOpts  connection global configuration\n   * @param cmdOpts   current options\n   */\n  configAssign(connOpts, cmdOpts) {\n    if (!cmdOpts) {\n      this.opts = connOpts;\n      return;\n    }\n    this.opts = cmdOpts ? Object.assign({}, connOpts, cmdOpts) : connOpts;\n    this.opts.database = cmdOpts.database ? cmdOpts.database : connOpts.database;\n    this.opts.connectAttributes = cmdOpts.connectAttributes ? cmdOpts.connectAttributes : connOpts.connectAttributes;\n\n    if (cmdOpts.charset && typeof cmdOpts.charset === 'string') {\n      this.opts.collation = Collations.fromCharset(cmdOpts.charset.toLowerCase());\n      if (this.opts.collation === undefined) {\n        this.opts.collation = Collations.fromName(cmdOpts.charset.toUpperCase());\n        if (this.opts.collation !== undefined) {\n          console.log(\n            \"warning: please use option 'collation' \" +\n              \"in replacement of 'charset' when using a collation name ('\" +\n              cmdOpts.charset +\n              \"')\\n\" +\n              \"(collation looks like 'UTF8MB4_UNICODE_CI', charset like 'utf8').\"\n          );\n        }\n      }\n      if (this.opts.collation === undefined) throw new RangeError(\"Unknown charset '\" + cmdOpts.charset + \"'\");\n    } else if (cmdOpts.collation && typeof cmdOpts.collation === 'string') {\n      const initial = cmdOpts.collation;\n      this.opts.collation = Collations.fromName(initial.toUpperCase());\n      if (this.opts.collation === undefined) throw new RangeError(\"Unknown collation '\" + initial + \"'\");\n    } else {\n      this.opts.collation = Collations.fromIndex(cmdOpts.charsetNumber) || connOpts.collation;\n    }\n    connOpts.password = cmdOpts.password;\n  }\n}\n\nfunction writeParam(out, val, encoding) {\n  let param = Buffer.isEncoding(encoding) ? Buffer.from(val, encoding) : Iconv.encode(val, encoding);\n  out.writeLengthCoded(param.length);\n  out.writeBuffer(param, 0, param.length);\n}\n\nmodule.exports = ChangeUser;\n", "'use strict';\n\nconst Status = {\n  NOT_CONNECTED: 1,\n  CONNECTING: 2,\n  AUTHENTICATING: 3,\n  INIT_CMD: 4,\n  CONNECTED: 5,\n  CLOSING: 6,\n  CLOSED: 7\n};\n\nmodule.exports.Status = Status;\n", "'use strict';\n\nconst EventEmitter = require('events');\nconst util = require('util');\nconst Queue = require('denque');\nconst Net = require('net');\nconst PacketInputStream = require('./io/packet-input-stream');\nconst PacketOutputStream = require('./io/packet-output-stream');\nconst CompressionInputStream = require('./io/compression-input-stream');\nconst CompressionOutputStream = require('./io/compression-output-stream');\nconst ServerStatus = require('./const/server-status');\nconst ConnectionInformation = require('./misc/connection-information');\nconst tls = require('tls');\nconst Errors = require('./misc/errors');\nconst Utils = require('./misc/utils');\nconst Capabilities = require('./const/capabilities');\nconst moment = require('moment-timezone');\n\n/*commands*/\nconst Handshake = require('./cmd/handshake/handshake');\nconst Quit = require('./cmd/quit');\nconst Ping = require('./cmd/ping');\nconst Reset = require('./cmd/reset');\nconst Query = require('./cmd/query');\nconst Prepare = require('./cmd/prepare');\nconst OkPacket = require('./cmd/class/ok-packet');\nconst Execute = require('./cmd/execute');\nconst ClosePrepare = require('./cmd/close-prepare');\nconst BatchBulk = require('./cmd/batch-bulk');\nconst ChangeUser = require('./cmd/change-user');\nconst { Status } = require('./const/connection_status');\n\n/**\n * New Connection instance.\n *\n * @param options    connection options\n * @returns Connection instance\n * @constructor\n * @fires Connection#connect\n * @fires Connection#end\n * @fires Connection#error\n *\n */\nclass Connection extends EventEmitter {\n  opts;\n  sendQueue = new Queue();\n  receiveQueue = new Queue();\n  waitingAuthenticationQueue = new Queue();\n  status = Status.NOT_CONNECTED;\n  socketConnected = false;\n  socket = null;\n  timeout = null;\n  addCommand;\n  streamOut;\n  streamIn;\n  info;\n\n  constructor(options) {\n    super();\n\n    this.opts = Object.assign(new EventEmitter(), options);\n    this.info = new ConnectionInformation(this.opts);\n    this.addCommand = this.addCommandQueue;\n    this.streamOut = new PacketOutputStream(this.opts, this.info);\n    this.streamIn = new PacketInputStream(\n      this.unexpectedPacket.bind(this),\n      this.receiveQueue,\n      this.streamOut,\n      this.opts,\n      this.info\n    );\n\n    if (this.opts.prepareCacheLength > 0) {\n      this.info._prepareCache.onEviction = (key, value) => value.unCache();\n    }\n    this.on(\n      'close_prepare',\n      function (prepareResultPacket) {\n        this.addCommand(\n          new ClosePrepare(\n            () => {},\n            () => {},\n            prepareResultPacket\n          )\n        );\n      }.bind(this)\n    );\n    this.escape = Utils.escape.bind(this, this.opts, this.info);\n    this.escapeId = Utils.escapeId.bind(this, this.opts, this.info);\n  }\n\n  //*****************************************************************\n  // public methods\n  //*****************************************************************\n\n  /**\n   * Connect event\n   *\n   * @returns {Promise} promise\n   */\n  connect() {\n    const conn = this;\n    switch (this.status) {\n      case Status.NOT_CONNECTED:\n        this.status = Status.CONNECTING;\n        return new Promise(function (resolve, reject) {\n          conn.registerHandshakeCmd(resolve, reject);\n        });\n\n      case Status.CLOSING:\n      case Status.CLOSED:\n        const err = Errors.createFatalError('Connection closed', Errors.ER_CONNECTION_ALREADY_CLOSED, this.info);\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        return Promise.reject(err);\n\n      case Status.CONNECTING:\n      case Status.AUTHENTICATING:\n        const errAuth = Errors.createFatalError(\n          'Connection is already connecting',\n          Errors.ER_ALREADY_CONNECTING,\n          this.info\n        );\n        if (this.opts.logger.error) this.opts.logger.error(errAuth);\n        return Promise.reject(errAuth);\n    }\n    //status Connected\n    return Promise.resolve(this);\n  }\n\n  executePromise(values, cmdOpts, prepare, resolve, reject) {\n    const cmd = new Execute(\n      resolve,\n      function (err) {\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        reject(err);\n      }.bind(this),\n      cmdOpts,\n      this.opts,\n      prepare,\n      values\n    );\n    if (this.opts.trace) Error.captureStackTrace(cmd);\n    this.addCommand(cmd);\n  }\n\n  batch(_sql, _options, _values) {\n    if (!_sql) {\n      const err = Errors.createError('sql parameter is mandatory', Errors.ER_UNDEFINED_SQL, this.info, 'HY000');\n      if (this.opts.logger.error) this.opts.logger.error(err);\n      return Promise.reject(err);\n    }\n    if (!_values) {\n      const err = Errors.createError(\n        'Batch must have values set',\n        Errors.ER_BATCH_WITH_NO_VALUES,\n        this.info,\n        'HY000',\n        _sql\n      );\n      if (this.opts.logger.error) this.opts.logger.error(err);\n      return Promise.reject(err);\n    }\n\n    return new Promise(this.prepare.bind(this, _options, _sql, this.executePromise.bind(this))).then((prepare) => {\n      const usePlaceHolder = (_options && _options.namedPlaceholders) || this.opts.namedPlaceholders;\n      let vals;\n      if (Array.isArray(_values)) {\n        if (usePlaceHolder) {\n          vals = _values;\n        } else if (Array.isArray(_values[0])) {\n          vals = _values;\n        } else if (prepare.parameters.length === 1) {\n          vals = [];\n          for (let i = 0; i < _values.length; i++) {\n            vals.push([_values[i]]);\n          }\n        } else {\n          vals = [_values];\n        }\n      } else {\n        vals = [[_values]];\n      }\n\n      let useBulk = this._canUseBulk(vals, _options);\n      if (useBulk) {\n        return new Promise(this.executeBulkPromise.bind(this, vals, _options, prepare));\n      } else {\n        const executes = [];\n        for (let i = 0; i < vals.length; i++) {\n          executes.push(prepare.execute(vals[i], _options));\n        }\n        return Promise.all(executes).then(\n          function (res) {\n            prepare.close();\n            if (_options && _options.fullResult) {\n              return Promise.resolve(res);\n            } else {\n              // aggregate results\n              const firstResult = res[0];\n              if (firstResult instanceof OkPacket) {\n                let affectedRows = 0;\n                const insertId = firstResult.insertId;\n                const warningStatus = firstResult.warningStatus;\n                for (let i = 0; i < res.length; i++) {\n                  affectedRows += res[i].affectedRows;\n                }\n                return Promise.resolve(new OkPacket(affectedRows, insertId, warningStatus));\n              } else {\n                // results have result-set. example :'INSERT ... RETURNING'\n                // aggregate results\n                const rs = [];\n                rs.meta = res.meta;\n                res.forEach((row) => {\n                  Array.prototype.push.apply(rs, row);\n                });\n                rs.meta = res.meta;\n                return Promise.resolve(rs);\n              }\n              return;\n            }\n          }.bind(this)\n        );\n      }\n    });\n  }\n\n  executeBulkPromise(values, cmdOpts, prepare, resolve, reject) {\n    const cmd = new BatchBulk(\n      (res) => {\n        prepare.close();\n        return resolve(res);\n      },\n      function (err) {\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        reject(err);\n      }.bind(this),\n      cmdOpts,\n      this.opts,\n      prepare,\n      values\n    );\n    if (this.opts.trace) Error.captureStackTrace(cmd);\n    this.addCommand(cmd);\n  }\n\n  /**\n   * Send an empty MySQL packet to ensure connection is active, and reset @@wait_timeout\n   * @param timeout (optional) timeout value in ms. If reached, throw error and close connection\n   */\n  ping(timeout, resolve, reject) {\n    if (timeout) {\n      if (timeout < 0) {\n        const err = Errors.createError(\n          'Ping cannot have negative timeout value',\n          Errors.ER_BAD_PARAMETER_VALUE,\n          this.info,\n          '0A000'\n        );\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        reject(err);\n        return;\n      }\n      let tOut = setTimeout(\n        function () {\n          tOut = undefined;\n          const err = Errors.createFatalError('Ping timeout', Errors.ER_PING_TIMEOUT, this.info, '0A000');\n          if (this.opts.logger.error) this.opts.logger.error(err);\n          // close connection\n          this.addCommand = this.addCommandDisabled;\n          clearTimeout(this.timeout);\n          if (this.status !== Status.CLOSING && this.status !== Status.CLOSED) {\n            this.sendQueue.clear();\n            this.status = Status.CLOSED;\n            this.socket.destroy();\n          }\n          this.clear();\n          reject(err);\n        }.bind(this),\n        timeout\n      );\n      this.addCommand(\n        new Ping(\n          () => {\n            if (tOut) {\n              clearTimeout(tOut);\n              resolve();\n            }\n          },\n          (err) => {\n            if (this.opts.logger.error) this.opts.logger.error(err);\n            clearTimeout(tOut);\n            reject(err);\n          }\n        )\n      );\n      return;\n    }\n    this.addCommand(new Ping(resolve, reject));\n  }\n\n  /**\n   * Send a reset command that will\n   * - rollback any open transaction\n   * - reset transaction isolation level\n   * - reset session variables\n   * - delete user variables\n   * - remove temporary tables\n   * - remove all PREPARE statement\n   *\n   * @returns {Promise} promise\n   */\n  reset(resolve, reject) {\n    if (\n      (this.info.isMariaDB() && this.info.hasMinVersion(10, 2, 4)) ||\n      (!this.info.isMariaDB() && this.info.hasMinVersion(5, 7, 3))\n    ) {\n      const resetCmd = new Reset(resolve, reject);\n      this.addCommand(resetCmd);\n      return;\n    }\n\n    const err = new Error(\n      `Reset command not permitted for server ${this.info.serverVersion.raw} (requires server MariaDB version 10.2.4+ or MySQL 5.7.3+)`\n    );\n    if (this.opts.logger.error) this.opts.logger.error(err);\n    reject(err);\n  }\n\n  /**\n   * Indicates the state of the connection as the driver knows it\n   * @returns {boolean}\n   */\n  isValid() {\n    return this.status === Status.CONNECTED;\n  }\n\n  /**\n   * Terminate connection gracefully.\n   */\n  end(resolve, reject) {\n    this.addCommand = this.addCommandDisabled;\n    clearTimeout(this.timeout);\n\n    if (this.status < Status.CLOSING && this.status !== Status.NOT_CONNECTED) {\n      this.status = Status.CLOSING;\n      const ended = () => {\n        this.status = Status.CLOSED;\n        this.socket.destroy();\n        this.socket.unref();\n        this.clear();\n        this.receiveQueue.clear();\n        resolve();\n      };\n      const quitCmd = new Quit(ended, ended);\n      this.sendQueue.push(quitCmd);\n      this.receiveQueue.push(quitCmd);\n      if (this.sendQueue.length === 1) {\n        process.nextTick(this.nextSendCmd.bind(this));\n      }\n    } else resolve();\n  }\n\n  /**\n   * Force connection termination by closing the underlying socket and killing server process if any.\n   */\n  destroy() {\n    this.addCommand = this.addCommandDisabled;\n    clearTimeout(this.timeout);\n    if (this.status < Status.CLOSING) {\n      this.status = Status.CLOSING;\n      this.sendQueue.clear();\n      if (this.receiveQueue.length > 0) {\n        //socket is closed, but server may still be processing a huge select\n        //only possibility is to kill process by another thread\n        //TODO reuse a pool connection to avoid connection creation\n        const self = this;\n        const killCon = new Connection(this.opts);\n        killCon\n          .connect()\n          .then(function () {\n            //*************************************************\n            //kill connection\n            //*************************************************\n            const killResHandler = function (err) {\n              const destroyError = Errors.createFatalError(\n                'Connection destroyed, command was killed',\n                Errors.ER_CMD_NOT_EXECUTED_DESTROYED,\n                self.info\n              );\n              if (self.opts.logger.error) self.opts.logger.error(destroyError);\n              self.socketErrorDispatchToQueries(destroyError);\n              if (self.socket) process.nextTick(self.socket.destroy());\n              self.status = Status.CLOSED;\n              new Promise(killCon.end.bind(killCon)).catch(() => {});\n            };\n            new Promise(killCon.query.bind(killCon, null, `KILL ${self.info.threadId}`, undefined)).finally(\n              killResHandler\n            );\n          })\n          .catch((err) => {\n            //*************************************************\n            //failing to create a kill connection, end normally\n            //*************************************************\n            const ended = () => {\n              let sock = self.socket;\n              self.clear();\n              self.status = Status.CLOSED;\n              setImmediate(resolve);\n              sock.destroy();\n              self.receiveQueue.clear();\n            };\n            const quitCmd = new Quit(ended, ended);\n            self.sendQueue.push(quitCmd);\n            self.receiveQueue.push(quitCmd);\n            if (self.sendQueue.length === 1) {\n              process.nextTick(self.nextSendCmd.bind(self));\n            }\n          });\n      } else {\n        this.status = Status.CLOSED;\n        this.socket.destroy();\n      }\n    }\n    this.clear();\n  }\n\n  pause() {\n    this.socket.pause();\n  }\n\n  resume() {\n    this.socket.resume();\n  }\n\n  format(sql, values) {\n    const err = Errors.createError(\n      '\"Connection.format intentionally not implemented. please use Connection.query(sql, values), it will be more secure and faster',\n      Errors.ER_NOT_IMPLEMENTED_FORMAT,\n      this.info,\n      '0A000'\n    );\n    if (this.opts.logger.error) this.opts.logger.error(err);\n    throw err;\n  }\n\n  //*****************************************************************\n  // additional public methods\n  //*****************************************************************\n\n  /**\n   * return current connected server version information.\n   *\n   * @returns {*}\n   */\n  serverVersion() {\n    if (!this.info.serverVersion) {\n      const err = new Error('cannot know if server information until connection is established');\n      if (this.opts.logger.error) this.opts.logger.error(err);\n      throw err;\n    }\n\n    return this.info.serverVersion.raw;\n  }\n\n  /**\n   * Change option \"debug\" during connection.\n   * @param val   debug value\n   */\n  debug(val) {\n    if (typeof val === 'boolean') {\n      if (val && !this.opts.logger.network) this.opts.logger.network = console.log;\n    } else if (typeof val === 'function') {\n      this.opts.logger.network = val;\n    }\n    this.opts.emit('debug', val);\n  }\n\n  debugCompress(val) {\n    if (val) {\n      if (typeof val === 'boolean') {\n        this.opts.debugCompress = val;\n        if (val && !this.opts.logger.network) this.opts.logger.network = console.log;\n      } else if (typeof val === 'function') {\n        this.opts.debugCompress = true;\n        this.opts.logger.network = val;\n      }\n    } else this.opts.debugCompress = false;\n  }\n\n  //*****************************************************************\n  // internal public testing methods\n  //*****************************************************************\n\n  get __tests() {\n    return new TestMethods(this.info.collation, this.socket);\n  }\n\n  //*****************************************************************\n  // internal methods\n  //*****************************************************************\n\n  /**\n   * Use multiple COM_STMT_EXECUTE or COM_STMT_BULK_EXECUTE\n   *\n   * @param values current batch values\n   * @param _options batch option\n   * @return {boolean} indicating if can use bulk command\n   */\n  _canUseBulk(values, _options) {\n    // not using info.isMariaDB() directly in case of callback use,\n    // without connection being completely finished.\n    let useBulk =\n      this.info.serverVersion &&\n      this.info.serverVersion.mariaDb &&\n      this.info.hasMinVersion(10, 2, 7) &&\n      this.opts.bulk &&\n      (this.info.serverCapabilities & Capabilities.MARIADB_CLIENT_STMT_BULK_OPERATIONS) > BigInt(0);\n    if (_options && _options.fullResult) return false;\n    if (useBulk) {\n      //ensure that there is no stream object\n      if (values !== undefined) {\n        if (!this.opts.namedPlaceholders) {\n          //ensure that all parameters have same length\n          //single array is considered as an array of single element.\n          const paramLen = Array.isArray(values[0]) ? values[0].length : values[0] ? 1 : 0;\n          if (paramLen === 0) return false;\n          for (let r = 0; r < values.length; r++) {\n            let row = values[r];\n            if (!Array.isArray(row)) row = [row];\n            if (paramLen !== row.length) {\n              return false;\n            }\n            for (let j = 0; j < paramLen; j++) {\n              const val = row[j];\n              if (\n                val !== null &&\n                typeof val === 'object' &&\n                typeof val.pipe === 'function' &&\n                typeof val.read === 'function'\n              ) {\n                return false;\n              }\n            }\n          }\n        } else {\n          for (let r = 0; r < values.length; r++) {\n            let row = values[r];\n            const keys = Object.keys(row);\n            for (let j = 0; j < keys.length; j++) {\n              const val = row[keys[j]];\n              if (\n                val !== null &&\n                typeof val === 'object' &&\n                typeof val.pipe === 'function' &&\n                typeof val.read === 'function'\n              ) {\n                return false;\n              }\n            }\n          }\n        }\n      }\n    }\n    return useBulk;\n  }\n\n  /**\n   * Add handshake command to queue.\n   *\n   * @private\n   */\n  registerHandshakeCmd(resolve, rejected) {\n    const _authFail = this.authFailHandler.bind(\n      this,\n      function (err) {\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        rejected(err);\n      }.bind(this)\n    );\n    const _authSucceed = this.authSucceedHandler.bind(this, resolve, _authFail);\n\n    const handshake = new Handshake(\n      _authSucceed,\n      _authFail,\n      this.createSecureContext.bind(this, _authFail),\n      this.addCommandEnable.bind(this),\n      this.getSocket.bind(this)\n    );\n    Error.captureStackTrace(handshake);\n\n    handshake.once(\n      'end',\n      function () {\n        if (!this.opts.collation) {\n          this.opts.emit('collation', this.info.collation);\n        }\n\n        process.nextTick(this.nextSendCmd.bind(this));\n      }.bind(this)\n    );\n\n    this.receiveQueue.push(handshake);\n    this.streamInitSocket(_authFail);\n  }\n\n  executeSessionVariableQuery() {\n    if (this.opts.sessionVariables) {\n      const values = [];\n      let sessionQuery = 'set ';\n      let keys = Object.keys(this.opts.sessionVariables);\n      if (keys.length > 0) {\n        return new Promise(\n          function (resolve, reject) {\n            for (let k = 0; k < keys.length; ++k) {\n              sessionQuery += (k !== 0 ? ',' : '') + '@@' + keys[k].replace(/[^a-z0-9_]/gi, '') + '=?';\n              values.push(this.opts.sessionVariables[keys[k]]);\n            }\n            const errorHandling = (initialErr) => {\n              const err = Errors.createFatalError(\n                `Error setting session variable (value ${JSON.stringify(this.opts.sessionVariables)}). Error: ${\n                  initialErr.message\n                }`,\n                Errors.ER_SETTING_SESSION_ERROR,\n                this.info,\n                '08S01',\n                sessionQuery\n              );\n              if (this.opts.logger.error) this.opts.logger.error(err);\n              reject(err);\n            };\n            const cmd = new Query(resolve, errorHandling, null, this.opts, sessionQuery, values);\n            if (this.opts.trace) Error.captureStackTrace(cmd);\n            this.addCommand(cmd);\n          }.bind(this)\n        );\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Asking server timezone if not set in case of 'auto'\n   * @returns {Promise<void>}\n   * @private\n   */\n  checkServerTimezone() {\n    if (this.opts.timezone === 'auto') {\n      return new Promise(this.query.bind(this, null, 'SELECT @@system_time_zone stz, @@time_zone tz', undefined)).then(\n        (res) => {\n          const serverTimezone = res[0].tz === 'SYSTEM' ? res[0].stz : res[0].tz;\n          const serverZone = moment.tz.zone(serverTimezone);\n          if (serverZone) {\n            const localTz = moment.tz.guess();\n            if (serverTimezone === localTz) {\n              //db server and client use same timezone, avoid any conversion\n              this.opts.tz = null;\n            } else {\n              this.opts._localTz = localTz;\n              this.opts.tz = serverTimezone;\n            }\n          } else {\n            const err = Errors.createFatalError(\n              `Automatic timezone setting fails. Server timezone '${serverTimezone}' does't have a corresponding IANA timezone. Option timezone must be set according to server timezone`,\n              Errors.ER_WRONG_AUTO_TIMEZONE,\n              this.info\n            );\n            if (this.opts.logger.error) this.opts.logger.error(err);\n            return Promise.reject(err);\n          }\n          return Promise.resolve();\n        }\n      );\n    }\n    if (this.opts.tz && !this.opts.skipSetTimezone) {\n      let tz = this.opts.tz;\n      if (this.opts.tz === 'Etc/UTC') {\n        tz = '+00:00';\n      } else if (this.opts.tz.startsWith('Etc/GMT')) {\n        let zone = moment.tz.zone(this.opts.tz);\n        tz = zone.abbrs[0] + ':00';\n      }\n      return new Promise(this.query.bind(this, null, 'SET time_zone=?', [tz]))\n        .then(() => {\n          return Promise.resolve();\n        })\n        .catch((err) => {\n          if (this.opts.logger.error) this.opts.logger.error(err);\n          console.log(\n            `warning: setting timezone '${this.opts.tz}' fails on server.\\n look at https://mariadb.com/kb/en/mysql_tzinfo_to_sql/ to load IANA timezone.\\nSetting timezone can be disabled with option \\`skipSetTimezone\\``\n          );\n          return Promise.resolve();\n        });\n    }\n    return Promise.resolve();\n  }\n\n  checkServerVersion() {\n    if (!this.opts.forceVersionCheck) {\n      return Promise.resolve();\n    }\n    return new Promise(this.query.bind(this, null, 'SELECT @@VERSION AS v', undefined)).then(\n      function (res) {\n        this.info.serverVersion.raw = res[0].v;\n        this.info.serverVersion.mariaDb = this.info.serverVersion.raw.includes('MariaDB');\n        ConnectionInformation.parseVersionString(this.info);\n        return Promise.resolve();\n      }.bind(this)\n    );\n  }\n\n  executeInitQuery() {\n    if (this.opts.initSql) {\n      const initialArr = Array.isArray(this.opts.initSql) ? this.opts.initSql : [this.opts.initSql];\n      const initialPromises = [];\n      initialArr.forEach((sql) => {\n        initialPromises.push(new Promise(this.query.bind(this, null, sql, undefined)));\n      });\n\n      return Promise.all(initialPromises).catch((initialErr) => {\n        const err = Errors.createFatalError(\n          `Error executing initial sql command: ${initialErr.message}`,\n          Errors.ER_INITIAL_SQL_ERROR,\n          this.info\n        );\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        return Promise.reject(err);\n      });\n    }\n    return Promise.resolve();\n  }\n\n  executeSessionTimeout() {\n    if (this.opts.queryTimeout) {\n      if (this.info.isMariaDB() && this.info.hasMinVersion(10, 1, 2)) {\n        const query = `SET max_statement_time=${this.opts.queryTimeout / 1000}`;\n        new Promise(this.query.bind(this, null, query, undefined)).catch(\n          function (initialErr) {\n            const err = Errors.createFatalError(\n              `Error setting session queryTimeout: ${initialErr.message}`,\n              Errors.ER_INITIAL_TIMEOUT_ERROR,\n              this.info,\n              '08S01',\n              query\n            );\n            if (this.opts.logger.error) this.opts.logger.error(err);\n            return Promise.reject(err);\n          }.bind(this)\n        );\n      } else {\n        const err = Errors.createError(\n          `Can only use queryTimeout for MariaDB server after 10.1.1. queryTimeout value: ${this.opts.queryTimeout}`,\n          Errors.ER_TIMEOUT_NOT_SUPPORTED,\n          this.info,\n          'HY000',\n          this.opts.queryTimeout\n        );\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        return Promise.reject(err);\n      }\n    }\n    return Promise.resolve();\n  }\n\n  getSocket() {\n    return this.socket;\n  }\n\n  /**\n   * Initialize socket and associate events.\n   * @private\n   */\n  streamInitSocket(authFailHandler) {\n    if (this.opts.socketPath) {\n      this.socket = Net.connect(this.opts.socketPath);\n    } else if (this.opts.stream) {\n      if (typeof this.opts.stream === 'function') {\n        const tmpSocket = this.opts.stream(\n          function (err, stream) {\n            if (err) {\n              authFailHandler(err);\n              return;\n            } else if (stream) {\n              this.socket = stream;\n              this.socketInit(authFailHandler);\n            } else {\n              this.socket = Net.connect(this.opts.port, this.opts.host);\n              this.socketInit(authFailHandler);\n            }\n          }.bind(this)\n        );\n        if (tmpSocket) {\n          this.socket = tmpSocket;\n          this.socketInit(authFailHandler);\n        }\n      } else {\n        const err = Errors.createError(\n          'stream option is not a function. stream must be a function with (error, callback) parameter',\n          Errors.ER_BAD_PARAMETER_VALUE,\n          this.info\n        );\n        authFailHandler(err);\n      }\n      return;\n    } else {\n      this.socket = Net.connect(this.opts.port, this.opts.host);\n    }\n\n    this.socketInit(authFailHandler);\n  }\n\n  socketInit(authFailHandler) {\n    if (this.opts.connectTimeout) {\n      this.timeout = setTimeout(\n        this.connectTimeoutReached.bind(this),\n        this.opts.connectTimeout,\n        authFailHandler,\n        Date.now()\n      );\n    }\n\n    const socketError = this.socketErrorHandler.bind(this, authFailHandler);\n\n    this.socket.on('data', this.streamIn.onData.bind(this.streamIn));\n    this.socket.on('error', socketError);\n    this.socket.on('end', socketError);\n    this.socket.on(\n      'connect',\n      function () {\n        clearTimeout(this.timeout);\n        if (this.status === Status.CONNECTING) {\n          this.status = Status.AUTHENTICATING;\n          this.socketConnected = true;\n          this.socket.setTimeout(this.opts.socketTimeout, this.socketTimeoutReached.bind(this, authFailHandler));\n          this.socket.setNoDelay(true);\n\n          // keep alive for socket. This won't reset server wait_timeout use pool option idleTimeout for that\n          if (this.opts.keepAliveDelay) {\n            this.socket.setKeepAlive(true, this.opts.keepAliveDelay);\n          }\n        }\n      }.bind(this)\n    );\n\n    this.socket.writeBuf = (buf) => this.socket.write(buf);\n    this.socket.flush = () => {};\n    this.streamOut.setStream(this.socket);\n  }\n\n  /**\n   * Authentication success result handler.\n   *\n   * @private\n   */\n  authSucceedHandler(resolve, rejected) {\n    //enable packet compression according to option\n    if (this.opts.compress) {\n      if (this.info.serverCapabilities & Capabilities.COMPRESS) {\n        this.streamOut.setStream(new CompressionOutputStream(this.socket, this.opts, this.info));\n        this.streamIn = new CompressionInputStream(this.streamIn, this.receiveQueue, this.opts, this.info);\n        this.socket.removeAllListeners('data');\n        this.socket.on('data', this.streamIn.onData.bind(this.streamIn));\n      } else {\n        const err = Errors.createError(\n          \"connection is configured to use packet compression, but the server doesn't have this capability\",\n          Errors.ER_COMPRESSION_NOT_SUPPORTED,\n          this.info\n        );\n        if (this.opts.logger.error) this.opts.logger.error(err);\n      }\n    }\n\n    this.addCommand = this.opts.pipelining ? this.addCommandEnablePipeline : this.addCommandEnable;\n\n    const commands = this.waitingAuthenticationQueue.toArray();\n    commands.forEach((cmd) => {\n      this.addCommand(cmd);\n    });\n\n    const errorInitialQueries = (err) => {\n      if (!err.fatal)\n        this.end(\n          () => {},\n          () => {}\n        );\n      process.nextTick(rejected, err);\n    };\n    this.status = Status.INIT_CMD;\n    this.executeSessionVariableQuery()\n      .then(this.checkServerTimezone.bind(this))\n      .then(this.checkServerVersion.bind(this))\n      .then(this.executeInitQuery.bind(this))\n      .then(this.executeSessionTimeout.bind(this))\n      .then(\n        function () {\n          this.status = Status.CONNECTED;\n          process.nextTick(resolve, this);\n        }.bind(this)\n      )\n      .catch(errorInitialQueries);\n  }\n\n  /**\n   * Authentication failed result handler.\n   *\n   * @private\n   */\n  authFailHandler(reject, err) {\n    process.nextTick(reject, err);\n    //remove handshake command\n    this.receiveQueue.shift();\n\n    this.fatalError(err, true);\n  }\n\n  /**\n   * Create TLS socket and associate events.\n   *\n   * @param rejected  rejected function when error\n   * @param callback  callback function when done\n   * @private\n   */\n  createSecureContext(rejected, callback) {\n    const socketError = this.socketErrorHandler.bind(\n      this,\n      function (err) {\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        rejected(err);\n      }.bind(this)\n    );\n    const sslOption = Object.assign({}, this.opts.ssl, {\n      servername: this.opts.host,\n      socket: this.socket\n    });\n\n    try {\n      const secureSocket = tls.connect(sslOption, callback);\n\n      secureSocket.on('data', this.streamIn.onData.bind(this.streamIn));\n      secureSocket.on('error', socketError);\n      secureSocket.on('end', socketError);\n      secureSocket.writeBuf = (buf) => secureSocket.write(buf);\n      secureSocket.flush = () => {};\n\n      this.socket.removeAllListeners('data');\n      this.socket = secureSocket;\n\n      this.streamOut.setStream(secureSocket);\n    } catch (err) {\n      socketError(err);\n    }\n  }\n\n  /**\n   * Handle packet when no packet is expected.\n   * (there can be an ERROR packet send by server/proxy to inform that connection is ending).\n   *\n   * @param packet  packet\n   * @private\n   */\n  unexpectedPacket(packet) {\n    if (packet && packet.peek() === 0xff) {\n      //can receive unexpected error packet from server/proxy\n      //to inform that connection is closed (usually by timeout)\n      let err = packet.readError(this.info);\n      if (err.fatal && this.status < Status.CLOSING) {\n        this.emit('error', err);\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        this.end(\n          () => {},\n          () => {}\n        );\n      }\n    } else if (this.status < Status.CLOSING) {\n      const err = Errors.createFatalError(\n        `receiving packet from server without active commands\\nconn:${this.info.threadId ? this.info.threadId : -1}(${\n          packet.pos\n        },${packet.end})\\n${Utils.log(this.opts, packet.buf, packet.pos, packet.end)}`,\n        Errors.ER_UNEXPECTED_PACKET,\n        this.info\n      );\n      if (this.opts.logger.error) this.opts.logger.error(err);\n      this.emit('error', err);\n      this.destroy();\n    }\n  }\n\n  /**\n   * Handle connection timeout.\n   *\n   * @private\n   */\n  connectTimeoutReached(authFailHandler, initialConnectionTime) {\n    this.timeout = null;\n    const handshake = this.receiveQueue.peekFront();\n    const err = Errors.createFatalError(\n      `Connection timeout: failed to create socket after ${Date.now() - initialConnectionTime}ms`,\n      Errors.ER_CONNECTION_TIMEOUT,\n      this.info,\n      '08S01',\n      null,\n      handshake ? handshake.stack : null\n    );\n    if (this.opts.logger.error) this.opts.logger.error(err);\n    authFailHandler(err);\n  }\n\n  /**\n   * Handle socket timeout.\n   *\n   * @private\n   */\n  socketTimeoutReached() {\n    const err = Errors.createFatalError('socket timeout', Errors.ER_SOCKET_TIMEOUT, this.info);\n    if (this.opts.logger.error) this.opts.logger.error(err);\n    this.fatalError(err, true);\n  }\n\n  /**\n   * Add command to waiting queue until authentication.\n   *\n   * @param cmd         command\n   * @returns {*}       current command\n   * @private\n   */\n  addCommandQueue(cmd) {\n    this.waitingAuthenticationQueue.push(cmd);\n    return cmd;\n  }\n\n  /**\n   * Add command to command sending and receiving queue.\n   *\n   * @param cmd         command\n   * @returns {*}       current command\n   * @private\n   */\n  addCommandEnable(cmd) {\n    cmd.once(\n      'end',\n      function () {\n        if (!this.sendQueue.isEmpty()) {\n          setImmediate(this.nextSendCmd.bind(this));\n        }\n      }.bind(this)\n    );\n\n    //send immediately only if no current active receiver\n    if (this.sendQueue.isEmpty() || !this.receiveQueue.peekFront()) {\n      this.receiveQueue.push(cmd);\n      cmd.start(this.streamOut, this.opts, this.info);\n    } else {\n      this.receiveQueue.push(cmd);\n      this.sendQueue.push(cmd);\n    }\n    return cmd;\n  }\n\n  /**\n   * Add command to command sending and receiving queue using pipelining\n   *\n   * @param cmd         command\n   * @returns {*}       current command\n   * @private\n   */\n  addCommandEnablePipeline(cmd) {\n    cmd.once(\n      'send_end',\n      function () {\n        if (!this.sendQueue.isEmpty()) {\n          setImmediate(this.nextSendCmd.bind(this));\n        }\n      }.bind(this)\n    );\n\n    this.receiveQueue.push(cmd);\n    if (this.sendQueue.isEmpty()) {\n      cmd.start(this.streamOut, this.opts, this.info);\n      if (cmd.sending) {\n        this.sendQueue.push(cmd);\n        cmd.prependOnceListener('send_end', this.sendQueue.shift.bind(this.sendQueue));\n      }\n    } else {\n      this.sendQueue.push(cmd);\n    }\n    return cmd;\n  }\n\n  /**\n   * Replacing command when connection is closing or closed to send a proper error message.\n   *\n   * @param cmd         command\n   * @private\n   */\n  addCommandDisabled(cmd) {\n    const err = cmd.throwNewError(\n      'Cannot execute new commands: connection closed',\n      true,\n      this.info,\n      '08S01',\n      Errors.ER_CMD_CONNECTION_CLOSED\n    );\n    if (this.opts.logger.error) this.opts.logger.error(err);\n  }\n\n  /**\n   * Handle socket error.\n   *\n   * @param authFailHandler   authentication handler\n   * @param err               socket error\n   * @private\n   */\n  socketErrorHandler(authFailHandler, err) {\n    if (this.status >= Status.CLOSING) return;\n    if (this.socket) {\n      this.socket.writeBuf = () => {};\n      this.socket.flush = () => {};\n    }\n\n    //socket has been ended without error\n    if (!err) {\n      err = Errors.createFatalError(\n        'socket has unexpectedly been closed',\n        Errors.ER_SOCKET_UNEXPECTED_CLOSE,\n        this.info\n      );\n    } else {\n      err.fatal = true;\n      this.sqlState = 'HY000';\n    }\n\n    switch (this.status) {\n      case Status.CONNECTING:\n      case Status.AUTHENTICATING:\n        const currentCmd = this.receiveQueue.peekFront();\n        if (currentCmd && currentCmd.stack && err) {\n          err.stack += '\\n From event:\\n' + currentCmd.stack.substring(currentCmd.stack.indexOf('\\n') + 1);\n        }\n        authFailHandler(err);\n        break;\n\n      default:\n        this.fatalError(err, false);\n    }\n  }\n\n  /**\n   * Fatal unexpected error : closing connection, and throw exception.\n   */\n  fatalError(err, avoidThrowError) {\n    if (this.status >= Status.CLOSING) {\n      this.socketErrorDispatchToQueries(err);\n      return;\n    }\n    const mustThrowError = this.status !== Status.CONNECTING;\n    this.status = Status.CLOSING;\n\n    //prevent executing new commands\n    this.addCommand = this.addCommandDisabled;\n\n    if (this.socket) {\n      this.socket.removeAllListeners('error');\n      this.socket.removeAllListeners('timeout');\n      this.socket.removeAllListeners('close');\n      this.socket.removeAllListeners('data');\n      if (!this.socket.destroyed) this.socket.destroy();\n      this.socket = undefined;\n    }\n    this.status = Status.CLOSED;\n\n    const errorThrownByCmd = this.socketErrorDispatchToQueries(err);\n    if (mustThrowError) {\n      if (this.opts.logger.error) this.opts.logger.error(err);\n      if (this.listenerCount('error') > 0) {\n        this.emit('error', err);\n        this.emit('end');\n        this.clear();\n      } else {\n        this.emit('end');\n        this.clear();\n        //error will be thrown if no error listener and no command did throw the exception\n        if (!avoidThrowError && !errorThrownByCmd) throw err;\n      }\n    } else {\n      this.clear();\n    }\n  }\n\n  /**\n   * Dispatch fatal error to current running queries.\n   *\n   * @param err        the fatal error\n   * @return {boolean} return if error has been relayed to queries\n   */\n  socketErrorDispatchToQueries(err) {\n    let receiveCmd;\n    let errorThrownByCmd = false;\n    while ((receiveCmd = this.receiveQueue.shift())) {\n      if (receiveCmd && receiveCmd.onPacketReceive) {\n        errorThrownByCmd = true;\n        setImmediate(receiveCmd.throwError.bind(receiveCmd), err, this.info);\n      }\n    }\n    return errorThrownByCmd;\n  }\n\n  /**\n   * Will send next command in queue if any.\n   *\n   * @private\n   */\n  nextSendCmd() {\n    let sendCmd;\n    if ((sendCmd = this.sendQueue.shift())) {\n      if (sendCmd.sending) {\n        this.sendQueue.unshift(sendCmd);\n      } else {\n        sendCmd.start(this.streamOut, this.opts, this.info);\n        if (sendCmd.sending) {\n          this.sendQueue.unshift(sendCmd);\n          sendCmd.prependOnceListener('send_end', this.sendQueue.shift.bind(this.sendQueue));\n        }\n      }\n    }\n  }\n\n  /**\n   * Change transaction state.\n   *\n   * @param sql sql\n   * @returns {Promise} promise\n   * @private\n   */\n  changeTransaction(sql, resolve, reject) {\n    //if command in progress, driver cannot rely on status and must execute query\n    if (this.status >= Status.CLOSING) {\n      const err = Errors.createFatalError(\n        'Cannot execute new commands: connection closed',\n        Errors.ER_CMD_CONNECTION_CLOSED,\n        this.info,\n        '08S01',\n        sql\n      );\n      if (this.opts.logger.error) this.opts.logger.error(err);\n      return reject(err);\n    }\n\n    //Command in progress => must execute query\n    //or if no command in progress, can rely on status to know if query is needed\n    if (this.receiveQueue.peekFront() || this.info.status & ServerStatus.STATUS_IN_TRANS) {\n      const cmd = new Query(\n        resolve,\n        (err) => {\n          if (this.opts.logger.error) this.opts.logger.error(err);\n          reject(err);\n        },\n        null,\n        this.opts,\n        sql,\n        null\n      );\n      if (this.opts.trace) Error.captureStackTrace(cmd);\n      this.addCommand(cmd);\n    } else resolve();\n  }\n\n  changeUser(options, resolve, reject) {\n    if (!this.info.isMariaDB()) {\n      const err = Errors.createError(\n        'method changeUser not available for MySQL server due to Bug #83472',\n        Errors.ER_MYSQL_CHANGE_USER_BUG,\n        this.info,\n        '0A000'\n      );\n      if (this.opts.logger.error) this.opts.logger.error(err);\n      reject(err);\n      return;\n    }\n\n    this.addCommand(\n      new ChangeUser(\n        options,\n        this.opts,\n        (res) => {\n          if (options && options.collation) this.opts.collation = options.collation;\n          resolve(res);\n        },\n        this.authFailHandler.bind(this, (err) => {\n          if (this.opts.logger.error) this.opts.logger.error(err);\n          reject(err);\n        }),\n        this.addCommand.bind(this)\n      )\n    );\n  }\n\n  query(_cmdOpt, _sql, _values, resolve, reject) {\n    if (!_sql)\n      return reject(Errors.createError('sql parameter is mandatory', Errors.ER_UNDEFINED_SQL, this.info, 'HY000'));\n    const cmd = new Query(\n      resolve,\n      (err) => {\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        reject(err);\n      },\n      _cmdOpt,\n      this.opts,\n      _sql,\n      _values\n    );\n\n    if (this.opts.trace) Error.captureStackTrace(cmd);\n    this.addCommand(cmd);\n  }\n\n  prepare(_cmdOpt, _sql, executeFct, resolve, reject) {\n    if (!_sql)\n      return reject(Errors.createError('sql parameter is mandatory', Errors.ER_UNDEFINED_SQL, this.info, 'HY000'));\n    const cmd = new Prepare(\n      resolve,\n      (err) => {\n        if (this.opts.logger.error) this.opts.logger.error(err);\n        reject(err);\n      },\n      _cmdOpt,\n      this.opts,\n      _sql,\n      executeFct,\n      this\n    );\n    if (this.opts.trace) Error.captureStackTrace(cmd);\n    this.addCommand(cmd);\n  }\n\n  /**\n   * Clearing connection variables when ending.\n   *\n   * @private\n   */\n  clear() {\n    this.sendQueue.clear();\n    this.opts.removeAllListeners();\n    this.streamOut = undefined;\n    this.socket = undefined;\n  }\n\n  get threadId() {\n    return this.info ? this.info.threadId : null;\n  }\n}\n\nclass TestMethods {\n  #collation;\n  #socket;\n\n  constructor(collation, socket) {\n    this.#collation = collation;\n    this.#socket = socket;\n  }\n  getCollation() {\n    return this.#collation;\n  }\n\n  getSocket() {\n    return this.#socket;\n  }\n}\n\nutil.inherits(Connection, EventEmitter);\n\nmodule.exports = Connection;\n", "'use strict';\n\nconst Query = require('./query');\nconst { Readable } = require('stream');\n\n/**\n * Protocol COM_QUERY with streaming events.\n * see : https://mariadb.com/kb/en/library/com_query/\n */\nclass Stream extends Query {\n  constructor(cmdOpts, connOpts, sql, values, socket) {\n    super(\n      () => {},\n      () => {},\n      cmdOpts,\n      connOpts,\n      sql,\n      values\n    );\n    this.socket = socket;\n    this.inStream = new Readable({\n      objectMode: true,\n      read: () => {\n        this.socket.resume();\n      }\n    });\n\n    this.on('fields', function (meta) {\n      this.inStream.emit('fields', meta);\n    });\n\n    this.on('error', function (err) {\n      this.inStream.emit('error', err);\n    });\n\n    this.on('close', function (err) {\n      this.inStream.emit('error', err);\n    });\n\n    this.on('end', function (err) {\n      if (err) this.inStream.emit('error', err);\n      this.socket.resume();\n      this.inStream.push(null);\n    });\n\n    this.inStream.close = function () {\n      this.handleNewRows = () => {};\n      this.socket.resume();\n    }.bind(this);\n  }\n\n  handleNewRows(row) {\n    try {\n      if (!this.inStream.push(row)) {\n        this.socket.pause();\n      }\n    } catch (err) {\n      this.socket.resume();\n    }\n  }\n}\n\nmodule.exports = Stream;\n", "'use strict';\n\nconst Stream = require('./cmd/stream');\n\n/**\n * New Connection instance.\n *\n * @param options    connection options\n * @returns Connection instance\n * @constructor\n * @fires Connection#connect\n * @fires Connection#end\n * @fires Connection#error\n *\n */\nclass ConnectionPromise {\n  #conn;\n\n  constructor(conn) {\n    this.#conn = conn;\n    this.query = ConnectionPromise._QUERY_CMD.bind(this, conn);\n    this.on = this.#conn.on.bind(this.#conn);\n    this.once = this.#conn.once.bind(this.#conn);\n  }\n\n  get threadId() {\n    return this.#conn.threadId;\n  }\n\n  get info() {\n    return this.#conn.info;\n  }\n\n  get status() {\n    return this.#conn.status;\n  }\n\n  /**\n   * Permit to change user during connection.\n   * All user variables will be reset, Prepare commands will be released.\n   * !!! mysql has a bug when CONNECT_ATTRS capability is set, that is default !!!!\n   *\n   * @param options   connection options\n   * @returns {Promise} promise\n   */\n  changeUser(options) {\n    return new Promise(this.#conn.changeUser.bind(this.#conn, options));\n  }\n\n  /**\n   * Start transaction\n   *\n   * @returns {Promise} promise\n   */\n  beginTransaction() {\n    return this.query('START TRANSACTION');\n  }\n\n  /**\n   * Commit a transaction.\n   *\n   * @returns {Promise} command if commit was needed only\n   */\n  commit() {\n    return new Promise(this.#conn.changeTransaction.bind(this.#conn, 'COMMIT'));\n  }\n\n  /**\n   * Roll back a transaction.\n   *\n   * @returns {Promise} promise\n   */\n  rollback() {\n    return new Promise(this.#conn.changeTransaction.bind(this.#conn, 'ROLLBACK'));\n  }\n\n  /**\n   * Execute query using text protocol.\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values (not mandatory)\n   * @returns {Promise} promise\n   */\n\n  static _QUERY_CMD(conn, sql, values) {\n    let _cmdOpt,\n      _sql = sql,\n      _values = values;\n    if (typeof sql === 'object') {\n      _cmdOpt = sql;\n      _sql = _cmdOpt.sql;\n      if (_cmdOpt.values) _values = _cmdOpt.values;\n    }\n\n    return new Promise(conn.query.bind(conn, _cmdOpt, _sql, _values));\n  }\n\n  execute(sql, values) {\n    return ConnectionPromise._EXECUTE_CMD(this.#conn, sql, values);\n  }\n\n  static _EXECUTE_CMD(conn, sql, values) {\n    let _cmdOpt,\n      _sql,\n      _values = values;\n    if (typeof sql === 'object') {\n      _cmdOpt = sql;\n      _sql = _cmdOpt.sql;\n      if (_cmdOpt.values) _values = _cmdOpt.values;\n    } else {\n      _sql = sql;\n    }\n\n    return new Promise(conn.prepare.bind(conn, _cmdOpt, _sql, conn.executePromise.bind(conn)))\n      .then((prepare) => {\n        return prepare.execute(_values, _cmdOpt).then((res) => {\n          prepare.close();\n          return Promise.resolve(res);\n        });\n      })\n      .catch((err) => {\n        if (conn.opts.logger.error) conn.opts.logger.error(err);\n        return Promise.reject(err);\n      });\n  }\n\n  prepare(sql) {\n    let _cmdOpt, _sql;\n    if (typeof sql === 'object') {\n      _cmdOpt = sql;\n      _sql = _cmdOpt.sql;\n    } else {\n      _sql = sql;\n    }\n    return new Promise(this.#conn.prepare.bind(this.#conn, _cmdOpt, _sql, this.#conn.executePromise.bind(this.#conn)));\n  }\n\n  /**\n   * Execute batch using text protocol.\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values\n   * @returns {Promise} promise\n   */\n  batch(sql, values) {\n    return ConnectionPromise._BATCH_CMD(this.#conn, sql, values);\n  }\n\n  static _BATCH_CMD(conn, sql, values) {\n    let _options,\n      _sql,\n      _values = values;\n    if (typeof sql === 'object') {\n      _options = sql;\n      _sql = _options.sql;\n      if (_options.values) _values = _options.values;\n    } else {\n      _sql = sql;\n    }\n\n    return conn.batch(_sql, _options, _values);\n  }\n\n  /**\n   * Execute query returning a Readable Object that will emit columns/data/end/error events\n   * to permit streaming big result-set\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values (not mandatory)\n   * @returns {Readable}\n   */\n  queryStream(sql, values) {\n    let _cmdOpt,\n      _sql,\n      _values = values;\n    if (typeof sql === 'object') {\n      _cmdOpt = sql;\n      _sql = _cmdOpt.sql;\n      if (sql.values) _values = sql.values;\n    } else {\n      _sql = sql;\n    }\n\n    const cmd = new Stream(_cmdOpt, this.#conn.opts, _sql, _values, this.#conn.socket);\n    if (this.#conn.opts.logger.error) cmd.on('error', this.#conn.opts.logger.error);\n    if (this.#conn.opts.trace) Error.captureStackTrace(cmd);\n    this.#conn.addCommand(cmd);\n    return cmd.inStream;\n  }\n\n  /**\n   * Send an empty MySQL packet to ensure connection is active, and reset @@wait_timeout\n   * @param timeout (optional) timeout value in ms. If reached, throw error and close connection\n   * @returns {Promise} promise\n   */\n  ping(timeout) {\n    return new Promise(this.#conn.ping.bind(this.#conn, timeout));\n  }\n\n  /**\n   * Send a reset command that will\n   * - rollback any open transaction\n   * - reset transaction isolation level\n   * - reset session variables\n   * - delete user variables\n   * - remove temporary tables\n   * - remove all PREPARE statement\n   *\n   * @returns {Promise} promise\n   */\n  reset() {\n    return new Promise(this.#conn.reset.bind(this.#conn));\n  }\n\n  /**\n   * Indicates the state of the connection as the driver knows it\n   * @returns {boolean}\n   */\n  isValid() {\n    return this.#conn.isValid();\n  }\n\n  /**\n   * Terminate connection gracefully.\n   *\n   * @returns {Promise} promise\n   */\n  end() {\n    return new Promise(this.#conn.end.bind(this.#conn));\n  }\n\n  /**\n   * Alias for destroy.\n   */\n  close() {\n    this.destroy();\n  }\n\n  /**\n   * Force connection termination by closing the underlying socket and killing server process if any.\n   */\n  destroy() {\n    this.#conn.destroy();\n  }\n\n  pause() {\n    this.#conn.pause();\n  }\n\n  resume() {\n    this.#conn.resume();\n  }\n\n  format(sql, values) {\n    this.#conn.format(sql, values);\n  }\n\n  /**\n   * return current connected server version information.\n   *\n   * @returns {*}\n   */\n  serverVersion() {\n    return this.#conn.serverVersion();\n  }\n\n  /**\n   * Change option \"debug\" during connection.\n   * @param val   debug value\n   */\n  debug(val) {\n    return this.#conn.debug(val);\n  }\n\n  debugCompress(val) {\n    return this.#conn.debugCompress(val);\n  }\n\n  escape(val) {\n    return this.#conn.escape(val);\n  }\n\n  escapeId(val) {\n    return this.#conn.escapeId(val);\n  }\n\n  //*****************************************************************\n  // internal public testing methods\n  //*****************************************************************\n\n  get __tests() {\n    return this.#conn.__tests;\n  }\n}\n\nmodule.exports = ConnectionPromise;\n", "'use strict';\n\nconst { EventEmitter } = require('events');\n\nconst Queue = require('denque');\nconst Errors = require('./misc/errors');\nconst Utils = require('./misc/utils');\nconst Connection = require('./connection');\n\nclass Pool extends EventEmitter {\n  #opts;\n  #closed = false;\n  #connectionInCreation = false;\n  #idleConnections = new Queue();\n  #activeConnections = {};\n  #requests = new Queue();\n  #unusedConnectionRemoverId;\n  #requestTimeoutId;\n  #connErrorNumber = 0;\n  _sizeHandlerTimeout;\n\n  constructor(options) {\n    super();\n    this.#opts = options;\n\n    this.on('_idle', this._requestsHandler);\n    this.on('validateSize', this._sizeHandler);\n\n    this._sizeHandler();\n  }\n\n  //*****************************************************************\n  // pool automatic handlers\n  //*****************************************************************\n\n  _doCreateConnection(resolve, reject, timeoutEnd) {\n    this._createConnection()\n      .then((conn) => {\n        if (this.#closed) {\n          conn.forceEnd(\n            () => {},\n            () => {}\n          );\n          throw new Errors.createFatalError(\n            'Cannot create new connection to pool, pool closed',\n            Errors.ER_ADD_CONNECTION_CLOSED_POOL\n          );\n        }\n\n        conn.lastUse = Date.now();\n        const nativeDestroy = conn.destroy.bind(conn);\n        const pool = this;\n\n        conn.destroy = function () {\n          pool._endLeak(conn);\n          delete pool.#activeConnections[conn.threadId];\n          nativeDestroy();\n          pool.emit('validateSize');\n        };\n\n        conn.once('error', function () {\n          let idx = 0;\n          let currConn;\n          pool._endLeak(conn);\n          delete pool.#activeConnections[conn.threadId];\n          while ((currConn = pool.#idleConnections.peekAt(idx))) {\n            if (currConn === conn) {\n              pool.#idleConnections.removeOne(idx);\n              break;\n            }\n            //since connection did have an error, other waiting connection might too\n            //forcing validation when borrowed next time, even if \"minDelayValidation\" is not reached.\n            currConn.lastUse = Math.min(currConn.lastUse, Date.now() - pool.#opts.minDelayValidation);\n            idx++;\n          }\n          setTimeout(() => {\n            if (!pool.#requests.isEmpty()) {\n              pool._sizeHandler();\n            }\n          }, 0);\n        });\n\n        this.#idleConnections.push(conn);\n        this.#connectionInCreation = false;\n        this.emit('_idle');\n        this.emit('connection', conn);\n        resolve(conn);\n      })\n      .catch((err) => {\n        //if timeout is reached or authentication fail return error\n        if (\n          this.#closed ||\n          (err.errno && (err.errno === 1524 || err.errno === 1045 || err.errno === 1698)) ||\n          timeoutEnd < Date.now()\n        ) {\n          reject(err);\n          return;\n        }\n        setTimeout(this._doCreateConnection.bind(this), 500, resolve, reject, timeoutEnd);\n      });\n  }\n\n  _destroy(conn) {\n    this._endLeak(conn);\n    delete this.#activeConnections[conn.threadId];\n\n    conn.lastUse = Date.now();\n    conn.forceEnd(\n      () => {},\n      () => {}\n    );\n\n    if (this.totalConnections() == 0) {\n      this._stopReaping();\n    }\n\n    this.emit('validateSize');\n  }\n\n  release(conn) {\n    this._endLeak(conn);\n    delete this.#activeConnections[conn.threadId];\n\n    conn.lastUse = Date.now();\n    if (this.#closed) {\n      conn.forceEnd(\n        () => {},\n        () => {}\n      );\n      this.emit('validateSize');\n    } else if (conn.isValid()) {\n      this.emit('release', conn);\n\n      this.#idleConnections.push(conn);\n      process.nextTick(\n        function () {\n          this.emit('_idle');\n        }.bind(this)\n      );\n    } else {\n      this.emit('validateSize');\n    }\n  }\n\n  _checkLeak(conn) {\n    conn.lastUse = Date.now();\n    conn.leaked = false;\n    conn.leakProcess = setTimeout(\n      (conn) => {\n        console.log(\n          `Possible connection leak on thread ${conn.info.threadId} (connection not returned to pool since ${\n            Date.now() - conn.lastUse\n          }ms. Did connection.released() been implemented`\n        );\n        conn.leaked = true;\n      },\n      this.#opts.leakDetectionTimeout,\n      conn\n    );\n  }\n\n  _endLeak(conn) {\n    if (conn.leakProcess) {\n      clearTimeout(conn.leakProcess);\n      conn.leakProcess = null;\n      if (conn.leaked) {\n        console.log(`Previous possible leak connection with thread ${conn.info.threadId} was returned to pool`);\n      }\n    }\n  }\n\n  /**\n   * Permit to remove idle connection if unused for some time.\n   */\n  _startReaping() {\n    if (!this.#unusedConnectionRemoverId && this.#opts.idleTimeout > 0) {\n      this.#unusedConnectionRemoverId = setInterval(this._reaper.bind(this), 500);\n    }\n  }\n\n  _stopReaping() {\n    if (this.#unusedConnectionRemoverId && this.totalConnections() == 0) {\n      clearInterval(this.#unusedConnectionRemoverId);\n    }\n  }\n\n  _reaper() {\n    const idleTimeRemoval = Date.now() - this.#opts.idleTimeout * 1000;\n    let maxRemoval = Math.max(0, this.#idleConnections.length - this.#opts.minimumIdle);\n    while (maxRemoval > 0) {\n      const conn = this.#idleConnections.peek();\n      maxRemoval--;\n      if (conn && conn.lastUse < idleTimeRemoval) {\n        this.#idleConnections.shift();\n        conn.forceEnd(\n          () => {},\n          () => {}\n        );\n        continue;\n      }\n      break;\n    }\n\n    if (this.totalConnections() == 0) {\n      this._stopReaping();\n    }\n    this.emit('validateSize');\n  }\n\n  _shouldCreateMoreConnections() {\n    return (\n      !this.#connectionInCreation &&\n      this.#idleConnections.length < this.#opts.minimumIdle &&\n      this.totalConnections() < this.#opts.connectionLimit &&\n      !this.#closed\n    );\n  }\n\n  /**\n   * Grow pool connections until reaching connection limit.\n   */\n  _sizeHandler() {\n    if (this._shouldCreateMoreConnections() && !this._sizeHandlerTimeout) {\n      this.#connectionInCreation = true;\n      setImmediate(\n        function () {\n          const timeoutEnd = Date.now() + this.#opts.initializationTimeout;\n          new Promise((resolve, reject) => {\n            this._doCreateConnection(resolve, reject, timeoutEnd);\n          })\n            .then(() => {\n              this.#connErrorNumber = 0;\n              if (this._shouldCreateMoreConnections()) {\n                this.emit('validateSize');\n              }\n              this._startReaping();\n            })\n            .catch((err) => {\n              this.#connectionInCreation = false;\n              if (this.totalConnections() === 0) {\n                const task = this.#requests.shift();\n                if (task) {\n                  this._rejectTask(task, err);\n                }\n              } else if (!this.#closed) {\n                console.error(`pool fail to create connection (${err.message})`);\n              }\n\n              //delay next try\n              this._sizeHandlerTimeout = setTimeout(\n                function () {\n                  this._sizeHandlerTimeout = null;\n                  if (!this.#requests.isEmpty()) {\n                    this._sizeHandler();\n                  }\n                }.bind(this),\n                Math.min(++this.#connErrorNumber * 500, 10000)\n              );\n            });\n        }.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Launch next waiting task request if available connections.\n   */\n  _requestsHandler() {\n    clearTimeout(this.#requestTimeoutId);\n    this.#requestTimeoutId = null;\n    const request = this.#requests.shift();\n    if (request) {\n      const conn = this.#idleConnections.shift();\n      if (conn) {\n        if (this.#opts.leakDetectionTimeout > 0) this._checkLeak(conn);\n        this.emit('acquire', conn);\n        this.#activeConnections[conn.threadId] = conn;\n        request.resolver(conn);\n      } else {\n        this.#requests.unshift(request);\n      }\n      this._requestTimeoutHandler();\n    }\n  }\n\n  _hasIdleConnection() {\n    return !this.#idleConnections.isEmpty();\n  }\n\n  /**\n   * Return an idle Connection.\n   * If connection has not been used for some time ( minDelayValidation), validate connection status.\n   *\n   * @returns {Promise<Connection>} connection of null of no valid idle connection.\n   */\n  _doAcquire() {\n    if (!this._hasIdleConnection() || this.#closed) return Promise.reject();\n\n    const conn = this.#idleConnections.shift();\n    this.#activeConnections[conn.threadId] = conn;\n\n    if (this.#opts.minDelayValidation <= 0 || Date.now() - conn.lastUse > this.#opts.minDelayValidation) {\n      return new Promise(conn.ping.bind(conn, this.#opts.pingTimeout)).then(\n        () => {\n          if (this.#opts.leakDetectionTimeout > 0) this._checkLeak(conn);\n          return Promise.resolve(conn);\n        },\n        () => {\n          delete this.#activeConnections[conn.threadId];\n          this.emit('validateSize');\n          return this._doAcquire();\n        }\n      );\n    } else {\n      //just check connection state\n      if (conn.isValid()) {\n        if (this.#opts.leakDetectionTimeout > 0) this._checkLeak(conn);\n        return Promise.resolve(conn);\n      }\n    }\n  }\n\n  _requestTimeoutHandler() {\n    //handle next Timer\n    this.#requestTimeoutId = null;\n    const currTime = Date.now();\n    let request;\n    while ((request = this.#requests.peekFront())) {\n      if (request.timeout <= currTime) {\n        this.#requests.shift();\n        request.reject(\n          Errors.createError(\n            `retrieve connection from pool timeout after ${Math.abs(\n              Date.now() - (request.timeout - this.#opts.acquireTimeout)\n            )}ms`,\n            Errors.ER_GET_CONNECTION_TIMEOUT\n          )\n        );\n      } else {\n        this.#requestTimeoutId = setTimeout(this._requestTimeoutHandler.bind(this), request.timeout - currTime);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Search info object of an existing connection. to know server type and version.\n   * @returns information object if connection available.\n   */\n  _searchInfo() {\n    let info = null;\n    let conn = this.#idleConnections.get(0);\n\n    if (conn == null) {\n      conn = Object.keys(this.#activeConnections)[0];\n    }\n\n    if (conn != null) {\n      info = conn.info;\n    }\n    return info;\n  }\n\n  _rejectTask(task, err) {\n    clearTimeout(this.#requestTimeoutId);\n    this.#requestTimeoutId = null;\n    task.reject(err);\n    this._requestTimeoutHandler();\n  }\n\n  async _createConnection() {\n    const conn = new Connection(this.#opts.connOptions);\n    await conn.connect();\n    const pool = this;\n    conn.forceEnd = conn.end;\n    conn.release = function (resolve, release) {\n      if (pool.#closed || !conn.isValid()) {\n        pool._destroy(conn);\n        resolve();\n        return;\n      }\n      if (pool.#opts.noControlAfterUse) {\n        pool.release(conn);\n        resolve();\n        return;\n      }\n      //if server permit it, reset the connection, or rollback only if not\n      // COM_RESET_CONNECTION exist since mysql 5.7.3 and mariadb 10.2.4\n      // but not possible to use it with mysql waiting for https://bugs.mysql.com/bug.php?id=97633 correction.\n      // and mariadb only since https://jira.mariadb.org/browse/MDEV-18281\n      let revertFunction;\n      if (\n        pool.#opts.resetAfterUse &&\n        conn.info.isMariaDB() &&\n        ((conn.info.serverVersion.minor === 2 && conn.info.hasMinVersion(10, 2, 22)) ||\n          conn.info.hasMinVersion(10, 3, 13))\n      ) {\n        revertFunction = conn.reset.bind(conn);\n      } else revertFunction = conn.changeTransaction.bind(conn, 'ROLLBACK');\n\n      new Promise(revertFunction).then(pool.release.bind(pool, conn), pool._destroy.bind(pool, conn)).finally(resolve);\n    };\n    conn.end = conn.release;\n    return conn;\n  }\n\n  //*****************************************************************\n  // public methods\n  //*****************************************************************\n\n  get closed() {\n    return this.#closed;\n  }\n\n  /**\n   * Get current total connection number.\n   * @return {number}\n   */\n  totalConnections() {\n    return this.activeConnections() + this.idleConnections();\n  }\n\n  /**\n   * Get current active connections.\n   * @return {number}\n   */\n  activeConnections() {\n    return Object.keys(this.#activeConnections).length;\n  }\n\n  /**\n   * Get current idle connection number.\n   * @return {number}\n   */\n  idleConnections() {\n    return this.#idleConnections.length;\n  }\n\n  /**\n   * Get current stacked connection request.\n   * @return {number}\n   */\n  taskQueueSize() {\n    return this.#requests.length;\n  }\n\n  escape(value) {\n    return Utils.escape(this.#opts.connOptions, this._searchInfo(), value);\n  }\n\n  escapeId(value) {\n    return Utils.escapeId(this.#opts.connOptions, this._searchInfo(), value);\n  }\n\n  //*****************************************************************\n  // promise methods\n  //*****************************************************************\n\n  /**\n   * Retrieve a connection from pool.\n   * Create a new one, if limit is not reached.\n   * wait until acquireTimeout.\n   *\n   * @return {Promise}\n   */\n  getConnection() {\n    if (this.#closed) {\n      return Promise.reject(Errors.createError('pool is closed', Errors.ER_POOL_ALREADY_CLOSED));\n    }\n\n    return this._doAcquire().then(\n      (conn) => {\n        // connection is available. process task\n        this.emit('acquire', conn);\n        return conn;\n      },\n      () => {\n        if (this.#closed) {\n          throw Errors.createError('Cannot add request to pool, pool is closed', Errors.ER_POOL_ALREADY_CLOSED);\n        }\n\n        // no idle connection available\n        // create a new connection if limit is not reached\n        this.emit('validateSize');\n        return new Promise(\n          function (resolver, rejecter) {\n            if (!this.#requestTimeoutId) {\n              this.#requestTimeoutId = setTimeout(this._requestTimeoutHandler.bind(this), this.#opts.acquireTimeout);\n            }\n            // stack request\n            setImmediate(this.emit.bind(this, 'enqueue'));\n            this.#requests.push(new Request(Date.now() + this.#opts.acquireTimeout, resolver, rejecter));\n          }.bind(this)\n        );\n      }\n    );\n  }\n\n  /**\n   * Close all connection in pool\n   *\n   * @return Promise\n   */\n  end() {\n    if (this.#closed) {\n      return Promise.reject(Errors.createError('pool is already closed', Errors.ER_POOL_ALREADY_CLOSED));\n    }\n    this.#closed = true;\n    clearInterval(this.#unusedConnectionRemoverId);\n    clearInterval(this._sizeHandlerTimeout);\n\n    //close unused connections\n    const idleConnectionsEndings = [];\n    let conn;\n    while ((conn = this.#idleConnections.shift())) {\n      idleConnectionsEndings.push(new Promise(conn.forceEnd.bind(conn)));\n    }\n\n    clearTimeout(this.#requestTimeoutId);\n    this.#requestTimeoutId = null;\n\n    //reject all waiting task\n    if (!this.#requests.isEmpty()) {\n      const err = Errors.createError('pool is ending, connection request aborted', Errors.ER_CLOSING_POOL);\n\n      let task;\n      while ((task = this.#requests.shift())) {\n        task.reject(err);\n      }\n    }\n\n    return Promise.all(idleConnectionsEndings);\n  }\n}\n\nclass Request {\n  constructor(timeout, resolver, rejecter) {\n    this.timeout = timeout;\n    this.resolver = resolver;\n    this.rejecter = rejecter;\n  }\n\n  reject(err) {\n    process.nextTick(this.rejecter, err);\n  }\n}\n\nmodule.exports = Pool;\n", "'use strict';\n\nconst { EventEmitter } = require('events');\n\nconst Pool = require('./pool');\nconst ConnectionPromise = require('./connection-promise');\n\nclass PoolPromise extends EventEmitter {\n  #pool;\n  constructor(options) {\n    super();\n    this.#pool = new Pool(options);\n    this.#pool.on('acquire', this.emit.bind(this, 'acquire'));\n    this.#pool.on('connection', this.emit.bind(this, 'connection'));\n    this.#pool.on('enqueue', this.emit.bind(this, 'enqueue'));\n    this.#pool.on('release', this.emit.bind(this, 'release'));\n  }\n\n  get closed() {\n    return this.#pool.closed;\n  }\n\n  /**\n   * Get current total connection number.\n   * @return {number}\n   */\n  totalConnections() {\n    return this.#pool.totalConnections();\n  }\n\n  /**\n   * Get current active connections.\n   * @return {number}\n   */\n  activeConnections() {\n    return this.#pool.activeConnections();\n  }\n\n  /**\n   * Get current idle connection number.\n   * @return {number}\n   */\n  idleConnections() {\n    return this.#pool.idleConnections();\n  }\n\n  /**\n   * Get current stacked connection request.\n   * @return {number}\n   */\n  taskQueueSize() {\n    return this.#pool.taskQueueSize();\n  }\n\n  escape(value) {\n    return this.#pool.escape(value);\n  }\n\n  escapeId(value) {\n    return this.#pool.escapeId(value);\n  }\n\n  /**\n   * Ends pool\n   *\n   * @return Promise\n   **/\n  end() {\n    return this.#pool.end();\n  }\n\n  /**\n   * Retrieve a connection from pool.\n   * Create a new one, if limit is not reached.\n   * wait until acquireTimeout.\n   *\n   */\n  getConnection() {\n    return this.#pool.getConnection().then((baseConn) => {\n      const conn = new ConnectionPromise(baseConn);\n      conn.release = function () {\n        return new Promise(baseConn.release);\n      };\n      return conn;\n    });\n  }\n\n  /**\n   * Execute query using text protocol with callback emit columns/data/end/error\n   * events to permit streaming big result-set\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values (not mandatory)\n   */\n  query(sql, values) {\n    return this.#pool.getConnection().then((baseConn) => {\n      return ConnectionPromise._QUERY_CMD(baseConn, sql, values).finally(() => {\n        this.#pool.release(baseConn);\n      });\n    });\n  }\n\n  /**\n   * Execute query using binary protocol with callback emit columns/data/end/error\n   * events to permit streaming big result-set\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values (not mandatory)\n   */\n  execute(sql, values) {\n    return this.#pool.getConnection().then((baseConn) => {\n      return ConnectionPromise._EXECUTE_CMD(baseConn, sql, values).finally(() => {\n        this.#pool.release(baseConn);\n      });\n    });\n  }\n\n  /**\n   * execute a batch\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  array of placeholder values\n   */\n  batch(sql, values) {\n    return this.#pool.getConnection().then((baseConn) => {\n      return ConnectionPromise._BATCH_CMD(baseConn, sql, values).finally(() => {\n        this.#pool.release(baseConn);\n      });\n    });\n  }\n}\n\nmodule.exports = PoolPromise;\n", "'use strict';\n\nclass ClusterOptions {\n  constructor(opts) {\n    if (opts) {\n      this.canRetry = opts.canRetry === undefined ? true : opts.canRetry;\n      this.removeNodeErrorCount = opts.removeNodeErrorCount || Infinity;\n      this.restoreNodeTimeout = opts.restoreNodeTimeout || 1000;\n      this.defaultSelector = opts.defaultSelector || 'RR';\n    } else {\n      this.canRetry = true;\n      this.removeNodeErrorCount = Infinity;\n      this.restoreNodeTimeout = 1000;\n      this.defaultSelector = 'RR';\n    }\n  }\n}\n\nmodule.exports = ClusterOptions;\n", "'use strict';\n\nconst Collations = require('../const/collations.js');\nconst urlFormat = /mariadb:\\/\\/(([^/@:]+)?(:([^/]+))?@)?(([^/:]+)(:([0-9]+))?)\\/([^?]+)(\\?(.*))?$/;\nconst moment = require('moment-timezone');\nconst Errors = require('../misc/errors');\n\n/**\n * Default option similar to mysql driver.\n * known differences\n * - no queryFormat option. Permitting client to parse is a security risk. Best is to give SQL + parameters\n *   Only possible Objects are :\n *   - Buffer\n *   - Date\n *   - Object that implement toSqlString function\n *   - JSON object\n * + rowsAsArray (in mysql2) permit to have rows by index, not by name. Avoiding to parsing metadata string => faster\n */\nclass ConnectionOptions {\n  constructor(opts) {\n    if (typeof opts === 'string') {\n      opts = ConnectionOptions.parse(opts);\n    }\n\n    if (!opts) opts = {};\n    this.host = opts.host || 'localhost';\n    this.port = opts.port || 3306;\n    this.user = opts.user || process.env.USERNAME;\n    this.password = opts.password;\n    this.database = opts.database;\n    this.stream = opts.stream;\n    if (opts.charset && typeof opts.charset === 'string') {\n      this.collation = Collations.fromCharset(opts.charset.toLowerCase());\n      if (this.collation === undefined) {\n        this.collation = Collations.fromName(opts.charset.toUpperCase());\n        if (this.collation !== undefined) {\n          console.log(\n            \"warning: please use option 'collation' \" +\n              \"in replacement of 'charset' when using a collation name ('\" +\n              opts.charset +\n              \"')\\n\" +\n              \"(collation looks like 'UTF8MB4_UNICODE_CI', charset like 'utf8').\"\n          );\n        }\n      }\n      if (this.collation === undefined) throw new RangeError(\"Unknown charset '\" + opts.charset + \"'\");\n    } else if (opts.collation && typeof opts.collation === 'string') {\n      this.collation = Collations.fromName(opts.collation.toUpperCase());\n      if (this.collation === undefined) throw new RangeError(\"Unknown collation '\" + opts.collation + \"'\");\n    } else {\n      this.collation = Collations.fromIndex(opts.charsetNumber);\n    }\n\n    // connection options\n    this.initSql = opts.initSql;\n    this.connectTimeout = opts.connectTimeout === undefined ? 1000 : opts.connectTimeout;\n    this.connectAttributes = opts.connectAttributes || false;\n    this.compress = opts.compress || false;\n    this.rsaPublicKey = opts.rsaPublicKey;\n    this.cachingRsaPublicKey = opts.cachingRsaPublicKey;\n    this.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval || false;\n    this.forceVersionCheck = opts.forceVersionCheck || false;\n    this.maxAllowedPacket = opts.maxAllowedPacket;\n    this.permitConnectionWhenExpired = opts.permitConnectionWhenExpired || false;\n    this.pipelining = opts.pipelining;\n    this.timezone = opts.timezone || 'local';\n    this.socketPath = opts.socketPath;\n    this.sessionVariables = opts.sessionVariables;\n    this.ssl = opts.ssl;\n    if (opts.ssl) {\n      if (typeof opts.ssl !== 'boolean' && typeof opts.ssl !== 'string') {\n        this.ssl.rejectUnauthorized = opts.ssl.rejectUnauthorized !== false;\n      }\n    }\n\n    // socket\n    this.queryTimeout = opts.queryTimeout === undefined ? 0 : opts.queryTimeout;\n    this.socketTimeout = opts.socketTimeout === undefined ? 0 : opts.socketTimeout;\n    this.keepAliveDelay = opts.keepAliveDelay === undefined ? 0 : opts.keepAliveDelay;\n\n    // log\n    this.debug = opts.debug || false;\n    this.debugCompress = opts.debugCompress || false;\n    this.debugLen = opts.debugLen || 256;\n\n    if (opts.logger) {\n      if (typeof opts.logger === 'function') {\n        this.logger = {\n          network: opts.logger,\n          query: opts.logger,\n          error: opts.logger,\n          logParam: true\n        };\n      } else {\n        this.logger = {\n          network: opts.logger.network,\n          query: opts.logger.query,\n          error: opts.logger.error,\n          logParam: opts.logger.logParam == null ? true : opts.logger.logParam\n        };\n      }\n    } else {\n      this.logger = { network: null, query: null, error: null, logParam: false };\n      if ((this.debug || this.debugCompress) && !this.logger.network) {\n        this.logger.network = console.log;\n      }\n    }\n    this.debug = this.logger.network ? true : false;\n\n    this.trace = opts.trace || false;\n\n    // result-set\n    this.checkDuplicate = opts.checkDuplicate === undefined ? true : opts.checkDuplicate;\n    this.dateStrings = opts.dateStrings || false;\n    this.foundRows = opts.foundRows === undefined || opts.foundRows;\n    this.metaAsArray = opts.metaAsArray || false;\n    this.multipleStatements = opts.multipleStatements || false;\n    this.namedPlaceholders = opts.namedPlaceholders || false;\n    this.nestTables = opts.nestTables;\n    this.autoJsonMap = opts.autoJsonMap === undefined ? true : opts.autoJsonMap;\n    this.bitOneIsBoolean = opts.bitOneIsBoolean === undefined ? true : opts.bitOneIsBoolean;\n    this.arrayParenthesis = opts.arrayParenthesis || false;\n    this.permitSetMultiParamEntries = opts.permitSetMultiParamEntries || false;\n    this.rowsAsArray = opts.rowsAsArray || false;\n    this.skipSetTimezone = opts.skipSetTimezone || false;\n    this.typeCast = opts.typeCast;\n    if (this.typeCast !== undefined && typeof this.typeCast !== 'function') {\n      this.typeCast = undefined;\n    }\n    this.bulk = opts.bulk === undefined || opts.bulk;\n\n    // coherence check\n    if (opts.pipelining === undefined) {\n      this.permitLocalInfile = opts.permitLocalInfile || false;\n      this.pipelining = !this.permitLocalInfile;\n    } else {\n      this.pipelining = opts.pipelining;\n      if (opts.permitLocalInfile === true && this.pipelining) {\n        throw new Error(\n          'enabling options `permitLocalInfile` and `pipelining` is not possible, options are incompatible.'\n        );\n      }\n      this.permitLocalInfile = this.pipelining ? false : opts.permitLocalInfile || false;\n    }\n    this.prepareCacheLength = opts.prepareCacheLength === undefined ? 256 : opts.prepareCacheLength;\n    this.restrictedAuth = opts.restrictedAuth;\n    if (this.restrictedAuth !== undefined && this.restrictedAuth !== null) {\n      if (!Array.isArray(this.restrictedAuth)) {\n        this.restrictedAuth = this.restrictedAuth.split(',');\n      }\n    }\n\n    // for compatibility with 2.x version and mysql/mysql2\n    this.bigIntAsNumber = opts.bigIntAsNumber || false;\n    this.insertIdAsNumber = opts.insertIdAsNumber || false;\n    this.decimalAsNumber = opts.decimalAsNumber || false;\n    this.supportBigNumbers = opts.supportBigNumbers || false;\n    this.bigNumberStrings = opts.bigNumberStrings || false;\n\n    if (this.maxAllowedPacket && !Number.isInteger(this.maxAllowedPacket)) {\n      throw new RangeError(\"maxAllowedPacket must be an integer. was '\" + this.maxAllowedPacket + \"'\");\n    }\n    if (this.timezone && this.timezone !== 'local' && this.timezone !== 'auto') {\n      let tzName = this.timezone;\n      if (this.timezone === 'Z') {\n        tzName = 'Etc/UTC';\n      } else {\n        const matched = this.timezone.match(/([+\\-\\s])(\\d\\d):?(\\d\\d)?/);\n        if (matched) {\n          const hour = (matched[1] === '-' ? 1 : -1) * Number.parseInt(matched[2], 10);\n          const minutes = matched.length > 2 && matched[3] ? Number.parseInt(matched[3], 10) : 0;\n          if (minutes > 0) {\n            throw new RangeError(\n              \"timezone format incompatible with IANA standard timezone format was '\" + this.timezone + \"'\"\n            );\n          }\n          if (hour === 0) {\n            tzName = 'Etc/UTC';\n          } else {\n            tzName = `Etc/GMT${matched[1] === '-' ? '+' : ''}${hour}`;\n          }\n        }\n      }\n      this._localTz = moment.tz.guess();\n      if (tzName === this._localTz) {\n        this.tz = null;\n      } else {\n        this.tz = tzName;\n        if (!moment.tz.zone(tzName)) {\n          throw Errors.createFatalError(`Unknown IANA timezone '${tzName}'.`, Errors.ER_WRONG_IANA_TIMEZONE);\n        }\n      }\n    }\n  }\n\n  /**\n   * When parsing from String, correcting type.\n   *\n   * @param opts options\n   * @return {opts}\n   */\n  static parseOptionDataType(opts) {\n    if (opts.bulk) opts.bulk = opts.bulk == 'true';\n    if (opts.allowPublicKeyRetrieval) opts.allowPublicKeyRetrieval = opts.allowPublicKeyRetrieval == 'true';\n\n    if (opts.insertIdAsNumber) opts.insertIdAsNumber = opts.insertIdAsNumber == 'true';\n    if (opts.decimalAsNumber) opts.decimalAsNumber = opts.decimalAsNumber == 'true';\n    if (opts.bigIntAsNumber) opts.bigIntAsNumber = opts.bigIntAsNumber == 'true';\n    if (opts.charsetNumber && !isNaN(Number.parseInt(opts.charsetNumber))) {\n      opts.charsetNumber = Number.parseInt(opts.charsetNumber);\n    }\n    if (opts.compress) opts.compress = opts.compress == 'true';\n    if (opts.connectAttributes) opts.connectAttributes = JSON.parse(opts.connectAttributes);\n    if (opts.connectTimeout) opts.connectTimeout = parseInt(opts.connectTimeout);\n    if (opts.keepAliveDelay) opts.keepAliveDelay = parseInt(opts.keepAliveDelay);\n    if (opts.socketTimeout) opts.socketTimeout = parseInt(opts.socketTimeout);\n    if (opts.dateStrings) opts.dateStrings = opts.dateStrings == 'true';\n    if (opts.debug) opts.debug = opts.debug == 'true';\n    if (opts.autoJsonMap) opts.autoJsonMap = opts.autoJsonMap == 'true';\n    if (opts.arrayParenthesis) opts.arrayParenthesis = opts.arrayParenthesis == 'true';\n    if (opts.skipSetTimezone) opts.skipSetTimezone = opts.skipSetTimezone == 'true';\n\n    if (opts.checkDuplicate) opts.checkDuplicate = opts.checkDuplicate == 'true';\n    if (opts.debugCompress) opts.debugCompress = opts.debugCompress == 'true';\n    if (opts.debugLen) opts.debugLen = parseInt(opts.debugLen);\n    if (opts.prepareCacheLength) opts.prepareCacheLength = parseInt(opts.prepareCacheLength);\n    if (opts.queryTimeout) opts.queryTimeout = parseInt(opts.queryTimeout);\n    if (opts.foundRows) opts.foundRows = opts.foundRows == 'true';\n    if (opts.maxAllowedPacket && !isNaN(Number.parseInt(opts.maxAllowedPacket)))\n      opts.maxAllowedPacket = parseInt(opts.maxAllowedPacket);\n    if (opts.metaAsArray) opts.metaAsArray = opts.metaAsArray == 'true';\n    if (opts.multipleStatements) opts.multipleStatements = opts.multipleStatements == 'true';\n    if (opts.namedPlaceholders) opts.namedPlaceholders = opts.namedPlaceholders == 'true';\n    if (opts.nestTables) opts.nestTables = opts.nestTables == 'true';\n    if (opts.permitSetMultiParamEntries) opts.permitSetMultiParamEntries = opts.permitSetMultiParamEntries == 'true';\n    if (opts.pipelining) opts.pipelining = opts.pipelining == 'true';\n    if (opts.forceVersionCheck) opts.forceVersionCheck = opts.forceVersionCheck == 'true';\n    if (opts.rowsAsArray) opts.rowsAsArray = opts.rowsAsArray == 'true';\n    if (opts.trace) opts.trace = opts.trace == 'true';\n    if (opts.ssl && (opts.ssl == 'true' || opts.ssl == 'false')) opts.ssl = opts.ssl == 'true';\n    if (opts.bitOneIsBoolean) opts.bitOneIsBoolean = opts.bitOneIsBoolean == 'true';\n    return opts;\n  }\n\n  static parse(opts) {\n    const matchResults = opts.match(urlFormat);\n\n    if (!matchResults) {\n      throw new Error(\n        `error parsing connection string '${opts}'. format must be 'mariadb://[<user>[:<password>]@]<host>[:<port>]/[<db>[?<opt1>=<value1>[&<opt2>=<value2>]]]'`\n      );\n    }\n    const options = {\n      user: matchResults[2] ? decodeURIComponent(matchResults[2]) : undefined,\n      password: matchResults[4] ? decodeURIComponent(matchResults[4]) : undefined,\n      host: matchResults[6] ? decodeURIComponent(matchResults[6]) : matchResults[6],\n      port: matchResults[8] ? parseInt(matchResults[8]) : undefined,\n      database: matchResults[9] ? decodeURIComponent(matchResults[9]) : matchResults[9]\n    };\n\n    const variousOptsString = matchResults[11];\n    if (variousOptsString) {\n      const keyValues = variousOptsString.split('&');\n      keyValues.forEach(function (keyVal) {\n        const equalIdx = keyVal.indexOf('=');\n        if (equalIdx !== 1) {\n          let val = keyVal.substring(equalIdx + 1);\n          val = val ? decodeURIComponent(val) : undefined;\n          options[keyVal.substring(0, equalIdx)] = val;\n        }\n      });\n    }\n\n    return this.parseOptionDataType(options);\n  }\n}\n\nmodule.exports = ConnectionOptions;\n", "'use strict';\n\nlet ConnOptions = require('./connection-options');\n\nclass PoolOptions {\n  constructor(opts) {\n    if (typeof opts === 'string') {\n      opts = ConnOptions.parse(opts);\n\n      //set data type\n      if (opts.acquireTimeout) opts.acquireTimeout = parseInt(opts.acquireTimeout);\n      if (opts.connectionLimit) opts.connectionLimit = parseInt(opts.connectionLimit);\n      if (opts.idleTimeout) opts.idleTimeout = parseInt(opts.idleTimeout);\n      if (opts.leakDetectionTimeout) opts.leakDetectionTimeout = parseInt(opts.leakDetectionTimeout);\n      if (opts.initializationTimeout) opts.initializationTimeout = parseInt(opts.initializationTimeout);\n      if (opts.minDelayValidation) opts.minDelayValidation = parseInt(opts.minDelayValidation);\n      if (opts.minimumIdle) opts.minimumIdle = parseInt(opts.minimumIdle);\n      if (opts.noControlAfterUse) opts.noControlAfterUse = opts.noControlAfterUse == 'true';\n      if (opts.resetAfterUse) opts.resetAfterUse = opts.resetAfterUse == 'true';\n      if (opts.pingTimeout) opts.pingTimeout = parseInt(opts.pingTimeout);\n    }\n\n    this.acquireTimeout = opts.acquireTimeout === undefined ? 10000 : opts.acquireTimeout;\n    this.connectionLimit = opts.connectionLimit === undefined ? 10 : opts.connectionLimit;\n    this.idleTimeout = opts.idleTimeout || 1800;\n    this.leakDetectionTimeout = opts.leakDetectionTimeout || 0;\n    this.initializationTimeout = opts.initializationTimeout === undefined ? 30000 : opts.initializationTimeout;\n    this.minDelayValidation = opts.minDelayValidation === undefined ? 500 : opts.minDelayValidation;\n    this.minimumIdle =\n      opts.minimumIdle === undefined ? this.connectionLimit : Math.min(opts.minimumIdle, this.connectionLimit);\n    this.noControlAfterUse = opts.noControlAfterUse || false;\n    this.resetAfterUse = opts.resetAfterUse || false;\n    this.pingTimeout = opts.pingTimeout || 250;\n    this.connOptions = new ConnOptions(opts);\n\n    if (this.acquireTimeout > 0 && this.connOptions.connectTimeout > this.acquireTimeout) {\n      this.connOptions.connectTimeout = this.acquireTimeout;\n    }\n  }\n}\n\nmodule.exports = PoolOptions;\n", "'use strict';\n\nconst Errors = require('./misc/errors');\nconst { Status } = require('./const/connection_status');\nconst Query = require('./cmd/query');\n\nclass ConnectionCallback {\n  #conn;\n\n  constructor(conn) {\n    this.#conn = conn;\n    this.on = this.#conn.on.bind(this.#conn);\n    this.once = this.#conn.once.bind(this.#conn);\n  }\n\n  get threadId() {\n    return this.#conn.info ? this.#conn.info.threadId : null;\n  }\n\n  get info() {\n    return this.#conn.info;\n  }\n\n  get status() {\n    return this.#conn.status;\n  }\n\n  #noop = () => {};\n\n  /**\n   * Permit to change user during connection.\n   * All user variables will be reset, Prepare commands will be released.\n   * !!! mysql has a bug when CONNECT_ATTRS capability is set, that is default !!!!\n   *\n   * @param options   connection options\n   * @param callback  callback function\n   */\n  changeUser(options, callback) {\n    let _options, _cb;\n    if (typeof options === 'function') {\n      _cb = options;\n      _options = undefined;\n    } else {\n      _options = options;\n      _cb = callback;\n    }\n\n    new Promise(this.#conn.changeUser.bind(this.#conn, _options))\n      .then(() => {\n        if (_cb) _cb(null, null, null);\n      })\n      .catch(_cb || this.#noop);\n  }\n\n  /**\n   * Start transaction\n   *\n   * @param callback  callback function\n   */\n  beginTransaction(callback) {\n    this.query('START TRANSACTION', null, callback);\n  }\n\n  /**\n   * Commit a transaction.\n   *\n   * @param callback  callback function\n   */\n  commit(callback) {\n    this.#conn.changeTransaction(\n      'COMMIT',\n      () => {\n        if (callback) callback(null, null, null);\n      },\n      callback || this.#noop\n    );\n  }\n\n  /**\n   * Roll back a transaction.\n   *\n   * @param callback  callback function\n   */\n  rollback(callback) {\n    this.#conn.changeTransaction(\n      'ROLLBACK',\n      () => {\n        if (callback) callback(null, null, null);\n      },\n      callback || this.#noop\n    );\n  }\n\n  /**\n   * Execute query using text protocol with callback emit columns/data/end/error\n   * events to permit streaming big result-set\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values (not mandatory)\n   * @param cb      callback\n   * @param callback  callback function\n   */\n  query(sql, values, callback) {\n    return ConnectionCallback._QUERY_CMD(this.#conn, sql, values, callback);\n  }\n\n  static _QUERY_CMD(conn, sql, values, callback) {\n    let _cmdOpts,\n      _sql,\n      _values = values,\n      _cb = callback;\n\n    if (typeof values === 'function') {\n      _cb = values;\n      _values = undefined;\n    }\n\n    if (typeof sql === 'object') {\n      _cmdOpts = sql;\n      _sql = _cmdOpts.sql;\n      if (sql.values) _values = sql.values;\n    } else {\n      _sql = sql;\n    }\n\n    const cmd = new Query(\n      _cb\n        ? (rows) => {\n            const meta = rows.meta;\n            delete rows.meta;\n            _cb(null, rows, meta);\n          }\n        : () => {},\n      _cb ? _cb : () => {},\n      _cmdOpts,\n      conn.opts,\n      _sql,\n      _values\n    );\n\n    cmd.handleNewRows = (row) => {\n      cmd._rows[cmd._responseIndex].push(row);\n      cmd.emit('data', row);\n    };\n\n    if (conn.opts.trace) Error.captureStackTrace(cmd);\n    conn.addCommand(cmd);\n    return cmd;\n  }\n\n  execute(sql, values, callback) {\n    return ConnectionCallback._EXECUTE_CMD(this.#conn, sql, values, callback);\n  }\n\n  static _EXECUTE_CMD(conn, sql, values, callback) {\n    let _cmdOpt,\n      _sql,\n      _values = values,\n      _cb = callback;\n    if (typeof sql === 'object') {\n      _cmdOpt = sql;\n      _sql = _cmdOpt.sql;\n      if (_cmdOpt.values) _values = _cmdOpt.values;\n    } else {\n      _sql = sql;\n    }\n    if (typeof values === 'function') {\n      _cb = values;\n      _values = undefined;\n    }\n\n    new Promise(conn.prepare.bind(conn, _cmdOpt, _sql, conn.executePromise.bind(conn)))\n      .then((prepare) => {\n        return prepare.execute(_values, _cmdOpt).then((res) => {\n          prepare.close();\n          if (_cb) {\n            const meta = res.meta;\n            delete res.meta;\n            _cb(null, res, meta);\n          }\n        });\n      })\n      .catch((err) => {\n        if (conn.opts.logger.error) conn.opts.logger.error(err);\n        if (_cb) _cb(err);\n      });\n  }\n\n  prepare(sql, callback) {\n    let _cmdOpt, _sql;\n    if (typeof sql === 'object') {\n      _cmdOpt = sql;\n      _sql = _cmdOpt.sql;\n    } else {\n      _sql = sql;\n    }\n    return new Promise(this.#conn.prepare.bind(this.#conn, _cmdOpt, _sql, this.#conn.executePromise.bind(this.#conn)))\n      .then((prepare) => {\n        if (callback) callback(null, prepare, null);\n      })\n      .catch(callback || this.#noop);\n  }\n\n  /**\n   * Execute a batch\n   * events to permit streaming big result-set\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values (not mandatory)\n   * @param callback callback\n   */\n  batch(sql, values, callback) {\n    return ConnectionCallback._BATCH_CMD(this.#conn, sql, values, callback);\n  }\n\n  static _BATCH_CMD(conn, sql, values, callback) {\n    let _options,\n      _sql,\n      _values = values,\n      _cb = callback;\n\n    if (typeof values === 'function') {\n      _cb = values;\n      _values = undefined;\n    }\n    if (typeof sql === 'object') {\n      _options = sql;\n      _sql = _options.sql;\n      if (_options.values) _values = _options.values;\n    } else {\n      _sql = sql;\n    }\n    conn\n      .batch(_sql, _options, _values)\n      .then((res) => {\n        if (_cb) _cb(null, res);\n      })\n      .catch((err) => {\n        if (conn.opts.logger.error) conn.opts.logger.error(err);\n        if (_cb) _cb(err);\n      });\n  }\n\n  /**\n   * Send an empty MySQL packet to ensure connection is active, and reset @@wait_timeout\n   * @param timeout (optional) timeout value in ms. If reached, throw error and close connection\n   * @param callback callback\n   */\n  ping(timeout, callback) {\n    let _timeout, _cb;\n    if (typeof timeout === 'function') {\n      _cb = timeout;\n      _timeout = undefined;\n    } else {\n      _timeout = timeout;\n      _cb = callback;\n    }\n    new Promise(this.#conn.ping.bind(this.#conn, _timeout)).then(_cb || this.#noop).catch(_cb || this.#noop);\n  }\n\n  /**\n   * Send a reset command that will\n   * - rollback any open transaction\n   * - reset transaction isolation level\n   * - reset session variables\n   * - delete user variables\n   * - remove temporary tables\n   * - remove all PREPARE statement\n   *\n   * @param callback callback\n   */\n  reset(callback) {\n    return new Promise(this.#conn.reset.bind(this.#conn)).then(callback || this.#noop).catch(callback || this.#noop);\n  }\n\n  /**\n   * Indicates the state of the connection as the driver knows it\n   * @returns {boolean}\n   */\n  isValid() {\n    return this.#conn.isValid();\n  }\n\n  /**\n   * Terminate connection gracefully.\n   *\n   * @param callback callback\n   */\n  end(callback) {\n    new Promise(this.#conn.end.bind(this.#conn))\n      .then(() => {\n        if (callback) callback();\n      })\n      .catch(callback || this.#noop);\n  }\n\n  /**\n   * Alias for destroy.\n   */\n  close() {\n    this.destroy();\n  }\n\n  /**\n   * Force connection termination by closing the underlying socket and killing server process if any.\n   */\n  destroy() {\n    this.#conn.destroy();\n  }\n\n  pause() {\n    this.#conn.pause();\n  }\n\n  resume() {\n    this.#conn.resume();\n  }\n\n  format(sql, values) {\n    this.#conn.format(sql, values);\n  }\n\n  /**\n   * return current connected server version information.\n   *\n   * @returns {*}\n   */\n  serverVersion() {\n    return this.#conn.serverVersion();\n  }\n\n  /**\n   * Change option \"debug\" during connection.\n   * @param val   debug value\n   */\n  debug(val) {\n    return this.#conn.debug(val);\n  }\n\n  debugCompress(val) {\n    return this.#conn.debugCompress(val);\n  }\n\n  escape(val) {\n    return this.#conn.escape(val);\n  }\n\n  escapeId(val) {\n    return this.#conn.escapeId(val);\n  }\n\n  //*****************************************************************\n  // internal public testing methods\n  //*****************************************************************\n\n  get __tests() {\n    return this.#conn.__tests;\n  }\n\n  connect(callback) {\n    if (!callback) {\n      throw new Errors.createError(\n        'missing mandatory callback parameter',\n        Errors.ER_MISSING_PARAMETER,\n        this.#conn.info\n      );\n    }\n    switch (this.#conn.status) {\n      case Status.NOT_CONNECTED:\n      case Status.CONNECTING:\n      case Status.AUTHENTICATING:\n      case Status.INIT_CMD:\n        this.once('connect', callback);\n        break;\n      case Status.CONNECTED:\n        callback.call(this);\n        break;\n      case Status.CLOSING:\n      case Status.CLOSED:\n        callback.call(\n          this,\n          Errors.createError(\n            'Connection closed',\n            Errors.ER_CONNECTION_ALREADY_CLOSED,\n            this.#conn.info,\n            '08S01',\n            null,\n            true\n          )\n        );\n        break;\n    }\n  }\n}\n\nmodule.exports = ConnectionCallback;\n", "'use strict';\n\nconst { EventEmitter } = require('events');\n\nconst Pool = require('./pool');\nconst Errors = require('./misc/errors');\nconst ConnectionCallback = require('./connection-callback');\n\nclass PoolCallback extends EventEmitter {\n  #pool;\n  constructor(options) {\n    super();\n    this.#pool = new Pool(options);\n    this.#pool.on('acquire', this.emit.bind(this, 'acquire'));\n    this.#pool.on('connection', this.emit.bind(this, 'connection'));\n    this.#pool.on('enqueue', this.emit.bind(this, 'enqueue'));\n    this.#pool.on('release', this.emit.bind(this, 'release'));\n  }\n\n  #noop = () => {};\n\n  get closed() {\n    return this.#pool.closed;\n  }\n\n  /**\n   * Get current total connection number.\n   * @return {number}\n   */\n  totalConnections() {\n    return this.#pool.totalConnections();\n  }\n\n  /**\n   * Get current active connections.\n   * @return {number}\n   */\n  activeConnections() {\n    return this.#pool.activeConnections();\n  }\n\n  /**\n   * Get current idle connection number.\n   * @return {number}\n   */\n  idleConnections() {\n    return this.#pool.idleConnections();\n  }\n\n  /**\n   * Get current stacked connection request.\n   * @return {number}\n   */\n  taskQueueSize() {\n    return this.#pool.taskQueueSize();\n  }\n\n  escape(value) {\n    return this.#pool.escape(value);\n  }\n\n  escapeId(value) {\n    return this.#pool.escapeId(value);\n  }\n\n  /**\n   * Ends pool\n   *\n   * @param callback\n   */\n  end(callback) {\n    this.#pool\n      .end()\n      .then(() => {\n        if (callback) callback(null);\n      })\n      .catch(callback || this.#noop);\n  }\n\n  /**\n   * Retrieve a connection from pool.\n   * Create a new one, if limit is not reached.\n   * wait until acquireTimeout.\n   *\n   * @param cb callback\n   */\n  getConnection(cb) {\n    if (!cb) {\n      throw new Errors.createError('missing mandatory callback parameter', Errors.ER_MISSING_PARAMETER);\n    }\n    this.#pool\n      .getConnection()\n      .then((baseConn) => {\n        const conn = new ConnectionCallback(baseConn);\n        conn.release = function () {\n          return new Promise(baseConn.release);\n        };\n        conn.release = (cb) => {\n          baseConn.release(\n            () => {\n              if (cb) cb();\n            },\n            (err) => {\n              if (cb) cb(err);\n            }\n          );\n        };\n        conn.end = conn.release;\n        cb(null, conn);\n      })\n      .catch(cb);\n  }\n\n  /**\n   * Execute query using text protocol with callback emit columns/data/end/error\n   * events to permit streaming big result-set\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values (not mandatory)\n   * @param cb      callback\n   */\n  query(sql, values, cb) {\n    let _cb = cb,\n      _values = values;\n\n    if (typeof values === 'function') {\n      _cb = values;\n      _values = undefined;\n    }\n\n    this.#pool\n      .getConnection()\n      .then((baseConn) => {\n        ConnectionCallback._QUERY_CMD(baseConn, sql, _values, (err, rows, meta) => {\n          this.#pool.release(baseConn);\n          if (_cb) _cb(err, rows, meta);\n        });\n      })\n      .catch((err) => {\n        if (_cb) _cb(err);\n      });\n  }\n\n  /**\n   * Execute query using binary protocol with callback emit columns/data/end/error\n   * events to permit streaming big result-set\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  object / array of placeholder values (not mandatory)\n   * @param cb      callback\n   */\n  execute(sql, values, cb) {\n    let _cb = cb,\n      _values = values;\n\n    if (typeof values === 'function') {\n      _cb = values;\n      _values = undefined;\n    }\n\n    this.#pool\n      .getConnection()\n      .then((baseConn) => {\n        ConnectionCallback._EXECUTE_CMD(baseConn, sql, _values, (err, rows, meta) => {\n          this.#pool.release(baseConn);\n          if (_cb) _cb(err, rows, meta);\n        });\n      })\n      .catch((err) => {\n        if (_cb) _cb(err);\n      });\n  }\n\n  /**\n   * execute a batch\n   *\n   * @param sql     sql parameter Object can be used to supersede default option.\n   *                Object must then have sql property.\n   * @param values  array of placeholder values\n   * @param cb      callback\n   */\n  batch(sql, values, cb) {\n    let _values = values,\n      _cb = cb;\n\n    if (typeof values === 'function') {\n      _cb = values;\n      _values = undefined;\n    }\n\n    this.#pool\n      .getConnection()\n      .then((baseConn) => {\n        ConnectionCallback._BATCH_CMD(baseConn, sql, _values, (err, rows, meta) => {\n          this.#pool.release(baseConn);\n          if (_cb) _cb(err, rows, meta);\n        });\n      })\n      .catch((err) => {\n        if (_cb) _cb(err);\n      });\n  }\n}\n\nmodule.exports = PoolCallback;\n", "/**\n * Similar to pool cluster with pre-set pattern and selector.\n * Additional method query\n *\n * @param poolCluster    cluster\n * @param patternArg     pre-set pattern\n * @param selectorArg    pre-set selector\n * @constructor\n */\nclass FilteredCluster {\n  #cluster;\n  #pattern;\n  #selector;\n\n  constructor(poolCluster, patternArg, selectorArg) {\n    this.#cluster = poolCluster;\n    this.#pattern = patternArg;\n    this.#selector = selectorArg;\n  }\n\n  /**\n   * Get a connection according to previously indicated pattern and selector.\n   *\n   * @return {Promise}\n   */\n  getConnection() {\n    return this.#cluster.getConnection(this.#pattern, this.#selector);\n  }\n\n  /**\n   * Execute a text query on one connection from available pools matching pattern\n   * in cluster.\n   *\n   * @param sql   sql command\n   * @param value parameter value of sql command (not mandatory)\n   * @return {Promise}\n   */\n  query(sql, value) {\n    return this.#cluster\n      .getConnection(this.#pattern, this.#selector)\n      .then((conn) => {\n        return conn\n          .query(sql, value)\n          .then((res) => {\n            conn.end();\n            return res;\n          })\n          .catch((err) => {\n            conn.end();\n            return Promise.reject(err);\n          });\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /**\n   * Execute a binary query on one connection from available pools matching pattern\n   * in cluster.\n   *\n   * @param sql   sql command\n   * @param value parameter value of sql command (not mandatory)\n   * @return {Promise}\n   */\n  execute(sql, value) {\n    return this.#cluster\n      .getConnection(this.#pattern, this.#selector)\n      .then((conn) => {\n        return conn\n          .execute(sql, value)\n          .then((res) => {\n            conn.end();\n            return res;\n          })\n          .catch((err) => {\n            conn.end();\n            return Promise.reject(err);\n          });\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /**\n   * Execute a batch on one connection from available pools matching pattern\n   * in cluster.\n   *\n   * @param sql   sql command\n   * @param value parameter value of sql command\n   * @return {Promise}\n   */\n  batch(sql, value) {\n    return this.#cluster\n      .getConnection(this.#pattern, this.#selector)\n      .then((conn) => {\n        return conn\n          .batch(sql, value)\n          .then((res) => {\n            conn.end();\n            return res;\n          })\n          .catch((err) => {\n            conn.end();\n            return Promise.reject(err);\n          });\n      })\n      .catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n}\n\nmodule.exports = FilteredCluster;\n", "'use strict';\n\nconst ClusterOptions = require('./config/cluster-options');\nconst PoolOptions = require('./config/pool-options');\nconst PoolCallback = require('./pool-callback');\nconst PoolPromise = require('./pool-promise');\nconst FilteredCluster = require('./filtered-cluster');\nconst EventEmitter = require('events');\nconst util = require('util');\n\n/**\n * Create a new Cluster.\n * Cluster handle pools with patterns and handle failover / distributed load\n * according to selectors (round robin / random / ordered )\n *\n * @param args      cluster argurments. see pool-cluster-options.\n * @constructor\n */\nclass Cluster extends EventEmitter {\n  #opts;\n  #nodes = {};\n  #cachedPatterns = {};\n  #nodeCounter = 0;\n\n  constructor(args) {\n    super();\n    this.#opts = new ClusterOptions(args);\n  }\n\n  /**\n   * Add a new pool node to cluster.\n   *\n   * @param id      identifier\n   * @param config  pool configuration\n   */\n  add(id, config) {\n    let identifier;\n    if (typeof id === 'string' || id instanceof String) {\n      identifier = id;\n      if (this.#nodes[identifier]) throw new Error(`Node identifier '${identifier}' already exist !`);\n    } else {\n      identifier = 'PoolNode-' + this.#nodeCounter++;\n      config = id;\n    }\n    const options = new PoolOptions(config);\n    this.#nodes[identifier] = this._createPool(options);\n  }\n\n  /**\n   * End cluster (and underlying pools).\n   *\n   * @return {Promise<any[]>}\n   */\n  end() {\n    this.#cachedPatterns = {};\n    const poolEndPromise = [];\n    Object.keys(this.#nodes).forEach(\n      function (pool) {\n        const res = this.#nodes[pool].end();\n        if (res) poolEndPromise.push();\n        delete this.#nodes[pool];\n      }.bind(this)\n    );\n\n    return Promise.all(poolEndPromise);\n  }\n\n  of(pattern, selector) {\n    return new FilteredCluster(this, pattern, selector);\n  }\n\n  /**\n   * Remove nodes according to pattern.\n   *\n   * @param pattern  pattern\n   */\n  remove(pattern) {\n    if (!pattern) throw new Error('pattern parameter in Cluster.remove(pattern)  is mandatory');\n\n    const regex = RegExp(pattern);\n    Object.keys(this.#nodes).forEach(\n      function (key) {\n        if (regex.test(key)) {\n          this.#nodes[key].end();\n          delete this.#nodes[key];\n          this.#cachedPatterns = {};\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Get connection from available pools matching pattern, according to selector\n   *\n   * @param pattern       pattern filter (not mandatory)\n   * @param selector      node selector ('RR','RANDOM' or 'ORDER')\n   * @return {Promise}\n   */\n  getConnection(pattern, selector) {\n    return this._getConnection(pattern, selector);\n  }\n\n  /**\n   * Force using callback methods.\n   */\n  _setCallback() {\n    this.getConnection = this._getConnectionCallback;\n    this._createPool = this._createPoolCallback;\n  }\n\n  /**\n   * Get connection from available pools matching pattern, according to selector\n   * with additional parameter to avoid reusing failing node\n   *\n   * @param cluster       current cluster\n   * @param pattern       pattern filter (not mandatory)\n   * @param selector      node selector ('RR','RANDOM' or 'ORDER')\n   * @param avoidNodeKey  failing node\n   * @param lastError     last error\n   * @return {Promise}\n   * @private\n   */\n  _getConnection(pattern, selector, avoidNodeKey, lastError) {\n    const matchingNodeList = this._matchingNodes(pattern || /^/);\n\n    if (matchingNodeList.length === 0) {\n      if (Object.keys(this.#nodes).length === 0 && !lastError) {\n        return Promise.reject(\n          new Error('No node have been added to cluster or nodes have been removed due to too much connection error')\n        );\n      }\n      if (avoidNodeKey === undefined) return Promise.reject(new Error(`No node found for pattern '${pattern}'`));\n      const errMsg = `No Connection available for '${pattern}'${\n        lastError ? '. Last connection error was: ' + lastError.message : ''\n      }`;\n      return Promise.reject(new Error(errMsg));\n    }\n\n    const retry = this._getConnection.bind(this, pattern, selector);\n    try {\n      const nodeKey = this._selectPool(matchingNodeList, selector, avoidNodeKey);\n      return this._handleConnectionError(matchingNodeList, nodeKey, retry);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n\n  _createPool(options) {\n    return new PoolPromise(options);\n  }\n\n  _createPoolCallback(options) {\n    return new PoolCallback(options);\n  }\n\n  /**\n   * Get connection from available pools matching pattern, according to selector\n   * with additional parameter to avoid reusing failing node\n   *\n   * @param cluster       current cluster\n   * @param pattern       pattern filter (not mandatory)\n   * @param selector      node selector ('RR','RANDOM' or 'ORDER')\n   * @param callback      callback function\n   * @param avoidNodeKey  failing node\n   * @param lastError     last error\n   * @private\n   */\n  _getConnectionCallback(pattern, selector, callback, avoidNodeKey, lastError) {\n    const matchingNodeList = this._matchingNodes(pattern || /^/);\n\n    if (matchingNodeList.length === 0) {\n      if (Object.keys(this.#nodes).length === 0 && !lastError) {\n        callback(\n          new Error('No node have been added to cluster or nodes have been removed due to too much connection error')\n        );\n        return;\n      }\n\n      if (avoidNodeKey === undefined) callback(new Error(`No node found for pattern '${pattern}'`));\n      const errMsg = `No Connection available for '${pattern}'${\n        lastError ? '. Last connection error was: ' + lastError.message : ''\n      }`;\n      callback(new Error(errMsg));\n      return;\n    }\n\n    const retry = this._getConnectionCallback.bind(this, pattern, selector, callback);\n    try {\n      const nodeKey = this._selectPool(matchingNodeList, selector, avoidNodeKey);\n      this._handleConnectionCallbackError(matchingNodeList, nodeKey, retry, callback);\n    } catch (e) {\n      callback(e);\n    }\n  }\n\n  /**\n   * Selecting nodes according to pattern.\n   *\n   * @param pattern pattern\n   * @return {*}\n   * @private\n   */\n  _matchingNodes(pattern) {\n    if (this.#cachedPatterns[pattern]) return this.#cachedPatterns[pattern];\n\n    const regex = RegExp(pattern);\n    const matchingNodeList = [];\n    Object.keys(this.#nodes).forEach((key) => {\n      if (regex.test(key)) {\n        matchingNodeList.push(key);\n      }\n    });\n\n    this.#cachedPatterns[pattern] = matchingNodeList;\n    return matchingNodeList;\n  }\n\n  /**\n   * Select next node to be chosen in nodeList according to selector and failed nodes.\n   *\n   * @param nodeList        current node list\n   * @param selectorParam   selector\n   * @param avoidNodeKey    last failing node to avoid selecting this one.\n   * @return {Promise}\n   * @private\n   */\n  _selectPool(nodeList, selectorParam, avoidNodeKey) {\n    const selector = selectorParam || this.#opts.defaultSelector;\n    let retry = 0;\n    let selectorFct;\n    let nodeKey;\n    switch (selector) {\n      case 'RR':\n        selectorFct = roundRobinSelector;\n        break;\n\n      case 'RANDOM':\n        selectorFct = randomSelector;\n        break;\n\n      case 'ORDER':\n        selectorFct = orderedSelector;\n        break;\n\n      default:\n        throw new Error(`Wrong selector value '${selector}'. Possible values are 'RR','RANDOM' or 'ORDER'`);\n    }\n\n    nodeKey = selectorFct(nodeList, retry);\n    while (\n      (avoidNodeKey === nodeKey || this.#nodes[nodeKey].blacklistedUntil > Date.now()) &&\n      retry < nodeList.length - 1\n    ) {\n      retry++;\n      nodeKey = selectorFct(nodeList, retry);\n    }\n    return nodeKey;\n  }\n\n  /**\n   * Connect, or if fail handle retry / set timeout error\n   *\n   * @param nodeList    current node list\n   * @param nodeKey     node name to connect\n   * @param retryFct    retry function\n   * @return {Promise}\n   * @private\n   */\n  _handleConnectionError(nodeList, nodeKey, retryFct) {\n    const node = this.#nodes[nodeKey];\n    return node\n      .getConnection()\n      .then((conn) => {\n        node.errorCount = 0;\n        return Promise.resolve(conn);\n      })\n      .catch(\n        function (err) {\n          node.errorCount = node.errorCount ? node.errorCount + 1 : 1;\n          node.blacklistedUntil = Date.now() + this.#opts.restoreNodeTimeout;\n          if (\n            this.#opts.removeNodeErrorCount &&\n            node.errorCount >= this.#opts.removeNodeErrorCount &&\n            this.#nodes[nodeKey]\n          ) {\n            delete this.#nodes[nodeKey];\n            this.#cachedPatterns = {};\n            delete nodeList.lastRrIdx;\n            process.nextTick(\n              function () {\n                this.emit('remove', nodeKey);\n              }.bind(this)\n            );\n            //remove node from configuration if not already removed\n            node.end().catch((err) => {\n              // dismiss error\n            });\n          }\n\n          if (nodeList.length !== 0 && this.#opts.canRetry) {\n            return retryFct(nodeKey, err);\n          }\n          return Promise.reject(err);\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Connect, or if fail handle retry / set timeout error\n   *\n   * @param nodeList    current node list\n   * @param nodeKey     node name to connect\n   * @param retryFct    retry function\n   * @param callback    callback function\n   * @private\n   */\n  _handleConnectionCallbackError(nodeList, nodeKey, retryFct, callback) {\n    const node = this.#nodes[nodeKey];\n    node.getConnection(\n      function (err, conn) {\n        if (err) {\n          node.errorCount = node.errorCount ? node.errorCount + 1 : 1;\n          node.blacklistedUntil = Date.now() + this.#opts.restoreNodeTimeout;\n          if (\n            this.#opts.removeNodeErrorCount &&\n            node.errorCount >= this.#opts.removeNodeErrorCount &&\n            this.#nodes[nodeKey]\n          ) {\n            delete this.#nodes[nodeKey];\n            this.#cachedPatterns = {};\n            delete nodeList.lastRrIdx;\n            process.nextTick(\n              function () {\n                this.emit('remove', nodeKey);\n              }.bind(this)\n            );\n            //remove node from configuration if not already removed\n            node.end(() => {\n              //dismiss error\n            });\n            if (nodeList.length === 0) return callback(err);\n          }\n\n          if (this.#opts.canRetry) return retryFct(nodeKey, err);\n          callback(err);\n        } else {\n          node.errorCount = 0;\n          callback(null, conn);\n        }\n      }.bind(this)\n    );\n  }\n\n  //*****************************************************************\n  // internal public testing methods\n  //*****************************************************************\n\n  get __tests() {\n    return new TestMethods(this.#nodes);\n  }\n}\n\nclass TestMethods {\n  #nodes;\n\n  constructor(nodes) {\n    this.#nodes = nodes;\n  }\n  getNodes() {\n    return this.#nodes;\n  }\n}\n\n/**\n * Round robin selector: using nodes one after the other.\n *\n * @param nodeList  node list\n * @return {String}\n */\nconst roundRobinSelector = (nodeList) => {\n  let lastRoundRobin = nodeList.lastRrIdx;\n  if (lastRoundRobin === undefined) lastRoundRobin = -1;\n  if (++lastRoundRobin >= nodeList.length) lastRoundRobin = 0;\n  nodeList.lastRrIdx = lastRoundRobin;\n  return nodeList[lastRoundRobin];\n};\n\n/**\n * Random selector: use a random node.\n *\n * @param nodeList  node list\n * @return {String}\n */\nconst randomSelector = (nodeList) => {\n  let randomIdx = Math.floor(Math.random() * nodeList.length);\n  return nodeList[randomIdx];\n};\n\n/**\n * Ordered selector: always use the nodes in sequence, unless failing.\n *\n * @param nodeList  node list\n * @param retry     sequence number if last node is tagged has failing\n * @return {String}\n */\nconst orderedSelector = (nodeList, retry) => {\n  return nodeList[retry];\n};\n\nutil.inherits(Cluster, EventEmitter);\n\nmodule.exports = Cluster;\n", "'use strict';\n\nconst pkg = require('./package.json');\nrequire('please-upgrade-node')(pkg);\n\nconst Connection = require('./lib/connection');\nconst ConnectionPromise = require('./lib/connection-promise');\nconst PoolPromise = require('./lib/pool-promise');\nconst Cluster = require('./lib/cluster');\n\nconst ConnOptions = require('./lib/config/connection-options');\nconst PoolOptions = require('./lib/config/pool-options');\nconst ClusterOptions = require('./lib/config/cluster-options');\n\nmodule.exports.version = require('./package.json').version;\nmodule.exports.SqlError = require('./lib/misc/errors').SqlError;\n\nmodule.exports.defaultOptions = function defaultOptions(opts) {\n  const connOpts = new ConnOptions(opts);\n  const res = {};\n  for (const [key, value] of Object.entries(connOpts)) {\n    if (!key.startsWith('_')) {\n      res[key] = value;\n    }\n  }\n  return res;\n};\n\nmodule.exports.createConnection = function createConnection(opts) {\n  try {\n    const options = new ConnOptions(opts);\n    const conn = new Connection(options);\n    const connPromise = new ConnectionPromise(conn);\n\n    return conn.connect().then(() => Promise.resolve(connPromise));\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nmodule.exports.createPool = function createPool(opts) {\n  const options = new PoolOptions(opts);\n  return new PoolPromise(options);\n};\n\nmodule.exports.createPoolCluster = function createPoolCluster(opts) {\n  const options = new ClusterOptions(opts);\n  return new Cluster(options);\n};\n", "export { default } from \"/home/hiniku/ApollosWill/app/routes/index.tsx\";", "import News from \"./components/news/News\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Season_W from \"./components/anime_seasons/Season_W\";\nimport Season_Sp from \"./components/anime_seasons/Season_Sp\";\nimport Season_Su from \"./components/anime_seasons/Season_Su\";\nimport Season_F from \"./components/anime_seasons/Season_F\";\nimport Ender from \"./components/ender/Ender\";\nimport { pool } from \"~/database/db\";\n\nimport { gql, useQuery } from \"@apollo/client\";\n\nconst dbLoad = gql`\n  query anime($id: ID!) {\n    findAnimeById(id: $id) {\n      id\n      slug\n      description\n      titles {\n        localized\n        alternatives\n      }\n      startDate\n      endDate\n      averageRatingRank\n      subtype\n      status\n\n      posterImage {\n        original {\n          url\n        }\n      }\n      bannerImage {\n        original {\n          url\n        }\n      }\n\n      episodeCount\n    }\n  }\n`;\n\nimport mariadb from \"mariadb\";\nconst pool = mariadb.createPool({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  database: process.env.DB_NAME,\n  password: process.env.DB_PASS,\n  connectionLimit: 5,\n});\n\n\nexport const loader = async () => {\n  async function asyncFunction() {\n    let conn;\n    try {\n      conn = await pool.getConnection();\n    \n      const res = await conn.query(\"SELECT * FROM `test`\")\n      console.log(res)\n    } finally {\n      if (conn) conn.release(); //release to pool\n    }\n  }\n};\n\n\n\n\nexport default function Index() {\n  const { loading, error, data } = useQuery(dbLoad, {\n    variables: {\n      id: 1,\n    },\n  });\n\n  if (loading) return \"Loading...\";\n  if (error) return `Error! ${error.message}`;\n\n \n\n  return (\n    <div className=\"bg-smooth-pink\">\n      <Navbar />\n\n      {/* the div where the News carousel goes */}\n      <div className=\"w-screen h-[500px] flex items-center justify-center\">\n        <div className=\"w-[900px] h-[350px] flex\">\n          <News />\n        </div>\n      </div>\n\n      {/* the div where the Winter Season Anime goes */}\n      <h1 className=\"pl-20 pb-5 font-quicksand text-[24px]\">Winter 2022</h1>\n      <div className=\"w-screen h-full flex items-center justify-center bg-smooth-blue\">\n        <div className=\" w-full h-[500px] flex items-center justify-center\">\n          <div className=\"w-full h-[400px]\">\n            <Season_W />\n          </div>\n        </div>\n      </div>\n\n      <h1 className=\"pl-20 pb-5 font-quicksand text-[24px] pt-10\">\n        Spring 2022\n      </h1>\n      <div className=\"w-screen h-full flex items-center justify-center bg-smooth-blue\">\n        <div className=\" w-full h-[500px] flex items-center justify-center\">\n          <div className=\"w-full h-[400px]\">\n            <Season_Sp />\n          </div>\n        </div>\n      </div>\n\n      <h1 className=\"pl-20 pb-5 font-quicksand text-[24px] pt-10\">\n        Summer 2022\n      </h1>\n      <div className=\"w-screen h-full flex items-center justify-center bg-smooth-blue\">\n        <div className=\" w-full h-[500px] flex items-center justify-center\">\n          <div className=\"w-full h-[400px]\">\n            <Season_Su />\n          </div>\n        </div>\n      </div>\n\n      <h1 className=\"pl-20 pb-5 font-quicksand text-[24px] pt-10\">Fall 2022</h1>\n      <div className=\"w-screen h-full flex items-center justify-center bg-smooth-blue\">\n        <div className=\" w-full h-[500px] flex items-center justify-center\">\n          <div className=\"w-full h-[400px]\">\n            <Season_F />\n          </div>\n        </div>\n      </div>\n\n      <Ender />\n    </div>\n  );\n}\n"],
  "mappings": "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AAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAO;AACb,WAAM,OAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,OAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,OAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,QAAQ;AACd,WAAM,Q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,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,YAAM,IAAI;AACV,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,UAAI,EAAE;AACN,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AACX,aAAO,IAAI;AAEX,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM,KAAK;AACX,YAAM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",
  "names": []
}
