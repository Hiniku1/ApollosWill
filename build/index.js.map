{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/root.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_search.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_home.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_list.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/navbar/Navbar.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/ender/Ender.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/news/News.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/search_page/$search.tsx", "../app/routes/components/anime_cards/anime_cards_search.tsx", "../app/routes/components/ender/Ender.tsx", "../app/routes/components/navbar/Navbar.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/list/$listId.tsx", "../app/routes/components/anime_cards/anime_cards_list.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/home/$home.tsx", "../app/database/db.server.ts", "../app/routes/components/anime_cards/anime_cards_home.tsx", "../app/routes/components/news/News.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import tailwindUrl from \"./styles/tailwind.css\"\nimport carouselUrl from \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nimport type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Apollo's Will\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: tailwindUrl },\n  { rel: \"stylesheet\", href: carouselUrl },\n];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        \n      </head>\n      <body className=\"bg-smooth-pink\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\n\n\n\nexport default function Anime_Cards_Search({ userId, listAnimes }: any) {\n  \n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  /* Modal Things */\n\n\n\n  function openModal(id: number) {\n\n    console.log(userId)\n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n          setEpisodesWatched(post.episodesWatched);\n          setScoreGiven(post.scoreGiven)\n          setAnimeState(post.animeState)\n\n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n\n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n\n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId\n      }),\n    });\n  }\n\n  /* For Loop to map all the animes on the list */\n\n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"../imgs/poster_\" + anime.id + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"../imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n\n            <p>{animeTitle}</p>\n            \n            {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n            {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n\n            {/* Add to List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n\n            {/* Save on the List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\n\n\n\nexport default function Anime_Cards_Home({ userId, listAnimes }: any) {\n  \n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  /* Modal Things */\n\n\n\n  function openModal(id: number) {\n\n\n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId.home\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n          setEpisodesWatched(post.episodesWatched);\n          setScoreGiven(post.scoreGiven)\n          setAnimeState(post.animeState)\n\n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId.home\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId.home\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n\n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n\n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId.home\n      }),\n    });\n  }\n\n  /* For Loop to map all the animes on the list */\n\n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"../imgs/poster_\" + anime.id + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"../imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n\n            <p>{animeTitle}</p>\n            \n            {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n            {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n\n            {/* Add to List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n\n            {/* Save on the List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\nexport default function Anime_Cards_List({ userId, listAnimes }: any) {\n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  /* Modal Things */\n\n  function openModal(id: number) {\n\n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n          setEpisodesWatched(post.episodesWatched);\n          setScoreGiven(post.scoreGiven)\n          setAnimeState(post.animeState)\n\n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n\n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n\n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId\n      }),\n    });\n  }\n  /* For Loop to map all the animes on the list */\n\n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id_anime}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"../imgs/poster_\" + anime.id_anime + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id_anime) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"../imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n\n            <p>{animeTitle}</p>\n\n            {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n\n            {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n            {/* Add to List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n\n            {/* Save on the List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function Navbar({userName, userId}: any ) {\n    return (\n        <div className='w-screen h-[75px] bg-smooth-blue'>\n            <div className='px-2 flex justify-between items-center w-full h-full'>\n                <div className='flex items-center pl-4'>\n                    <Link to={\"/home/\" + userId}><h1 className='font-quicksand mr-4 text-[24px]'>Apollo's Will</h1></Link>\n                    <ul className='hidden md:flex font-montserrat'>\n                        <li><Link to={\"/search_page/\" + userId}>Anime Search</Link></li>\n                    </ul>\n                </div>\n\n                <div className=\"flex items-center\">\n                    <h1 className=\"pr-4\">{userName}</h1>\n                    <div className=\"flex w-[130px] h-[130px] bg-smooth-blue items-center rounded-3xl justify-center mt-12 mr-10 z-10\">\n                        <Link to={\"/list/\" + userId}><img className=\"rounded-3xl w-[100px]\" src={require(\"public/imgs/Icon.jpg\")} alt=\"Icon\"/></Link>\n                    </div>\n                    <Link to={\"/\"}  className=\"mr-4\">Logout</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n", "export default function Ender(){\n    return(\n        <div  className=\"w-full h-[150px] bg-[#FBAFAF] flex items-center justify-center\">\n            <h1>Apollo\u2019s Will is a property of Apollo\u2019s Will Co.,Ltd. \u00A92022 All Rights Reserved.</h1>\n            <h1>Icone Icone Icone</h1>\n        </div>\n    )\n}", "export default function News() {\n    return (\n        <div className=\"carousel autoplay w-full\">\n            <div id=\"slide-news1\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner1.jpg\")} alt=\"Banner1\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news4\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news2\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news2\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner2.jpg\")} alt=\"Banner2\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news1\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news3\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news3\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner3.png\")} alt=\"Banner3\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news2\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news4\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news4\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner4.jpg\")} alt=\"Banner4\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news3\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news1\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n", "import { Link, useParams } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport Anime_Cards_Home from \"../components/anime_cards/anime_cards_home\";\nimport Anime_Cards_List from \"../components/anime_cards/anime_cards_list\";\nimport Anime_Cards_Search from \"../components/anime_cards/anime_cards_search\";\nimport Ender from \"../components/ender/Ender\";\nimport Navbar from \"../components/navbar/Navbar\";\n\nexport default function searchAnime() {\n    let userId = useParams();\n\n    let [userName, letUserName] = useState()\n\n    let [search, setSearch] = useState(\"\");\n\n    let [found, setFound] = useState();\n\n    let [idk, setIdk] = useState([])\n\n    fetch(\"http://localhost:3011/searchUserName\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify([{\n                id: userId.search\n            }]),\n        })\n            .then((data) => {\n                return data.json();\n            })\n            .then((post) => {\n                letUserName(post[0].login)\n            });\n\n\n\n    function gettingSearch(event: {\n        target: { value: React.SetStateAction<string> };\n    }) {\n        setSearch(event.target.value);\n\n    }\n\n    function doSearch() {\n        fetch(\"http://localhost:3011/searchAnime\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                search: search\n            }),\n        })\n            .then((data) => {\n                return data.json();\n            })\n            .then((post) => {\n                setIdk(post)\n\n            })\n        \n    }\n    return (\n        <div className=\"bg-smooth-pink\">\n\n            <Navbar userName={userName} userId={userId.search} />\n\n            <img className=\"w-screen h-[500px] z-0 -mb-32\" src={require(\"public/imgs/search_1.jpg\")} alt=\"Wallpaper\" />\n            <div className=\"h-full w-full flex justify-center items-center\">\n                {/* Icon */}\n                <div className=\"flex w-[200px] h-[200px] bg-smooth-pink items-center rounded-3xl justify-center\">\n                    <img className=\"rounded-3xl w-[150px]\" src={require(\"public/imgs/Icon.jpg\")} alt=\"Icon\" />\n                </div>\n            </div>\n\n            <h1 className=\"font-montserrat text-7xl flex justify-center\">Search</h1>\n\n            {/* Input thingy search bar */}\n            <div className=\"flex justify-center items-center\">\n                <div className=\"form-control w-full flex justify-center items-center\">\n                    <label className=\"label\">\n                        <span className=\"label-text-\"></span>\n                    </label>\n                    <input type=\"text\" placeholder=\"Search Anime\" className=\"input input-bordered w-[700px]\" onChange={gettingSearch}></input>\n                    <button onClick={doSearch}>Search</button>\n                    <img src={\"imgs/poster_\" + + \".png\"} alt=\"\" />\n                </div>\n            </div>\n\n            <Anime_Cards_Search listAnimes={idk} userId={userId.search} />\n\n\n            <div className=\"mt-16\">\n                <Ender />\n            </div>\n        </div>\n    )\n}", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\n\n\n\nexport default function Anime_Cards_Search({ userId, listAnimes }: any) {\n  \n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  /* Modal Things */\n\n\n\n  function openModal(id: number) {\n\n    console.log(userId)\n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n          setEpisodesWatched(post.episodesWatched);\n          setScoreGiven(post.scoreGiven)\n          setAnimeState(post.animeState)\n\n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n\n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n\n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId\n      }),\n    });\n  }\n\n  /* For Loop to map all the animes on the list */\n\n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"../imgs/poster_\" + anime.id + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"../imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n\n            <p>{animeTitle}</p>\n            \n            {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n            {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n\n            {/* Add to List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n\n            {/* Save on the List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "export default function Ender(){\n    return(\n        <div  className=\"w-full h-[150px] bg-[#FBAFAF] flex items-center justify-center\">\n            <h1>Apollo\u2019s Will is a property of Apollo\u2019s Will Co.,Ltd. \u00A92022 All Rights Reserved.</h1>\n            <h1>Icone Icone Icone</h1>\n        </div>\n    )\n}", "import { Link } from \"@remix-run/react\";\n\nexport default function Navbar({userName, userId}: any ) {\n    return (\n        <div className='w-screen h-[75px] bg-smooth-blue'>\n            <div className='px-2 flex justify-between items-center w-full h-full'>\n                <div className='flex items-center pl-4'>\n                    <Link to={\"/home/\" + userId}><h1 className='font-quicksand mr-4 text-[24px]'>Apollo's Will</h1></Link>\n                    <ul className='hidden md:flex font-montserrat'>\n                        <li><Link to={\"/search_page/\" + userId}>Anime Search</Link></li>\n                    </ul>\n                </div>\n\n                <div className=\"flex items-center\">\n                    <h1 className=\"pr-4\">{userName}</h1>\n                    <div className=\"flex w-[130px] h-[130px] bg-smooth-blue items-center rounded-3xl justify-center mt-12 mr-10 z-10\">\n                        <Link to={\"/list/\" + userId}><img className=\"rounded-3xl w-[100px]\" src={require(\"public/imgs/Icon.jpg\")} alt=\"Icon\"/></Link>\n                    </div>\n                    <Link to={\"/\"}  className=\"mr-4\">Logout</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n", "import { Link, useLoaderData, useParams } from \"@remix-run/react\";\n\nimport { pool } from \"~/database/db.server\";\nimport Navbar from \"../components/navbar/Navbar\";\nimport Anime_Cards_List from \"../components/anime_cards/anime_cards_list\";\nimport Ender from \"../components/ender/Ender\";\nimport { useState } from \"react\";\nimport Modal_Anime from \"../components/modal/modal_anime\";\n\nexport default function List() {\n    let [listAnime, setListAnime] = useState([]);\n    let [userName, letUserName] = useState()\n\n    const listId = useParams();\n    let id = listId.listId\n    \n    fetch(\"http://localhost:3011/getAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        setListAnime(post)\n      })\n\n\n      fetch(\"http://localhost:3011/searchUserName\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify([{\n          id: id\n        }]),\n      })\n        .then((data) => {\n          return data.json();\n        })\n        .then((post) => {\n          letUserName(post[0].login)\n          \n        });\n    \n    return (\n        <div className=\"bg-smooth-pink\">\n            \n            <Navbar userName={userName} userId={id}/>\n\n            <img className=\"w-screen h-[500px] -z-10 -mb-32\" src={require(\"public/imgs/Wallpaper.jpeg\")} alt=\"Wallpaper\" />\n            <div className=\"h-full w-full flex justify-center items-center\">\n                {/* Icon */}\n                <div className=\"flex w-[200px] h-[200px] bg-smooth-pink items-center rounded-3xl justify-center\">\n                    <Link to=\"/list\"><img className=\"rounded-3xl w-[150px]\" src={require(\"public/imgs/Icon.jpg\")} alt=\"Icon\" /></Link>\n                </div>\n            </div>\n\n            <h1 className=\"font-montserrat text-7xl flex justify-center\">{userName}'s List</h1>\n\n            {/* Input thingy search bar */}\n            <div className=\"flex justify-center items-center\">\n                <div className=\"form-control w-full flex justify-center items-center\">\n                    <label className=\"label\">\n                        <span className=\"label-text-\"></span>\n                        <span className=\"label-text-alt\">Filters</span>\n                    </label>\n                    <input type=\"text\" placeholder=\"Search Anime\" className=\"input input-bordered w-[700px]\"></input>\n                </div>\n            </div>\n\n           <Anime_Cards_List userId={id} listAnimes={listAnime}/>\n\n            <div className=\"mt-16\">\n                <Ender/>\n            </div>\n        </div>\n    )\n}", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\nexport default function Anime_Cards_List({ userId, listAnimes }: any) {\n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  /* Modal Things */\n\n  function openModal(id: number) {\n\n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n          setEpisodesWatched(post.episodesWatched);\n          setScoreGiven(post.scoreGiven)\n          setAnimeState(post.animeState)\n\n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n\n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n\n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId\n      }),\n    });\n  }\n  /* For Loop to map all the animes on the list */\n\n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id_anime}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"../imgs/poster_\" + anime.id_anime + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id_anime) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"../imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n\n            <p>{animeTitle}</p>\n\n            {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n\n            {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n            {/* Add to List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n\n            {/* Save on the List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "import { useLoaderData, useParams } from \"@remix-run/react\";\r\nimport { useState } from \"react\";\r\nimport { pool } from \"~/database/db.server\";\r\nimport Anime_Cards_Home from \"../components/anime_cards/anime_cards_home\";\r\nimport Ender from \"../components/ender/Ender\";\r\nimport Navbar from \"../components/navbar/Navbar\";\r\nimport News from \"../components/news/News\";\r\n\r\n\r\n\r\nexport const loader = async () => {\r\n    let conn;\r\n    let seasonAnime = [];\r\n    try {\r\n      conn = await pool.getConnection();\r\n  \r\n      seasonAnime = await conn.query(\r\n        \"SELECT * FROM Anime WHERE MONTH(start_date) = 4 and YEAR(start_date)= 2021 ;\"\r\n      );\r\n  \r\n  \r\n    } finally {\r\n      if (conn) conn.release(); //release to pool\r\n    }\r\n  \r\n    return {\r\n      seasonAnime: seasonAnime,\r\n    };\r\n  };\r\n\r\n\r\nexport default function Home(){\r\n    let loginId = useParams();\r\n    let [userName, letUserName] = useState()\r\n    const { seasonAnime } = useLoaderData();\r\n\r\n    fetch(\"http://localhost:3011/searchUserName\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify([{\r\n        id: loginId.home\r\n      }]),\r\n    })\r\n      .then((data) => {\r\n        return data.json();\r\n      })\r\n      .then((post) => {\r\n        letUserName(post[0].login)\r\n        \r\n      });\r\n    \r\n    \r\n    return (\r\n        <div className=\"h-[100%] w-[100%] \">\r\n  \r\n        <div>\r\n  \r\n          <Navbar userName={userName} userId={loginId.home} />\r\n  \r\n          {/* the div where the News carousel goes */}\r\n          <div className=\"w-screen h-[500px] flex items-center justify-center\">\r\n            <div className=\"w-[900px] h-[350px] flex\">\r\n              <News />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"text-4xl\">Top Animes Of The Season</h1>\r\n          <div className=\"items-center justify-center bg-smooth-blue\">\r\n            \r\n            <Anime_Cards_Home listAnimes={seasonAnime} userId={loginId}/>\r\n  \r\n          </div>\r\n  \r\n        </div>\r\n  \r\n        <div className=\"place-items-end\">\r\n  \r\n          <Ender />\r\n  \r\n        </div>\r\n      </div>\r\n    )\r\n}", "const mariadb = require(\"mariadb\");\nconst dotenv = require(\"dotenv\").config({path: \".env-local\"});\n\n\nconst pool = mariadb.createPool({\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASS,\n    database: process.env.DB_NAME,\n    connectionLimit: 5\n});\n\npool.getConnection((err: { code: string; }, connection: { release: () => void; }) => {\n  if(err){\n      if (err.code === 'PROTOCOL_CONNECTION_LOST'){\n          console.error('Database connection lost');\n      }\n      if (err.code === 'ER_CON_COUNT_ERROR'){\n          console.error('Database has too many connection');\n      }\n      if (err.code === 'ECONNREFUSED'){\n          console.error('Database connection was refused');\n      }\n  }\n  if(connection) connection.release();\n\n  return;\n});\n\nexport {pool};", "import { Link, useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\n\n\n\nexport default function Anime_Cards_Home({ userId, listAnimes }: any) {\n  \n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  /* Modal Things */\n\n\n\n  function openModal(id: number) {\n\n\n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId.home\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n          setEpisodesWatched(post.episodesWatched);\n          setScoreGiven(post.scoreGiven)\n          setAnimeState(post.animeState)\n\n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId.home\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId.home\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n\n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n\n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId.home\n      }),\n    });\n  }\n\n  /* For Loop to map all the animes on the list */\n\n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"../imgs/poster_\" + anime.id + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"../imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n\n            <p>{animeTitle}</p>\n            \n            {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n            {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n\n            {/* Add to List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n\n            {/* Save on the List Button */}\n\n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "export default function News() {\n    return (\n        <div className=\"carousel autoplay w-full\">\n            <div id=\"slide-news1\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner1.jpg\")} alt=\"Banner1\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news4\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news2\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news2\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner2.jpg\")} alt=\"Banner2\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news1\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news3\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news3\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner3.png\")} alt=\"Banner3\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news2\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news4\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news4\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner4.jpg\")} alt=\"Banner4\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news3\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news1\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n", "import { redirect } from \"@remix-run/node\";\r\nimport { useNavigate } from \"@remix-run/react\";\r\nimport { useState } from \"react\";\r\nimport Ender from \"./components/ender/Ender\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Index() {\r\n\r\n  let [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  let [loginId, setLoginId] = useState(0);\r\n\r\n\r\n  let [login, setLogin] = useState(\"\");\r\n  let [password, setPassword] = useState(\"\");\r\n\r\n  let navigate = useNavigate();\r\n\r\n  let loginData = [\r\n    {\r\n      login: login,\r\n      password: password,\r\n      id: loginId\r\n    },\r\n  ];\r\n\r\n  function gettingLoginData(event: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) {\r\n    setLogin(event.target.value);\r\n  }\r\n\r\n  function gettingPasswordData(event: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  async function doLogin() {\r\n\r\n    fetch(\"http://localhost:3011/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginData),\r\n    })\r\n      .then((data) => {\r\n        return data.json();\r\n      })\r\n      .then((post) => {\r\n        if (post) {\r\n          setLoginId(post);\r\n          navigate(\"/home/\" + post)\r\n\r\n        }\r\n      });\r\n  }\r\n\r\n  async function signUp() {\r\n    fetch(\"http://localhost:3011/signUp\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(loginData),\r\n    })\r\n      .then((data) => {\r\n        return data.json();\r\n      })\r\n      .then((post) => {\r\n        if (post) {\r\n          setLoginId(post);\r\n          setIsLoggedIn(true);\r\n        }\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"bg-smooth-pink w-[100%] h-[100%]\" >\r\n\r\n      <div>\r\n        <img className=\"w-screen h-[500px] -z-10 -mb-32\" src={require(\"public/imgs/loginWall.jpg\")} alt=\"Wallpaper\" />\r\n\r\n        <h1 className=\"font-montserrat text-7xl flex justify-center text-black\">Welcome to ApollosWill</h1>\r\n\r\n        <ul className=\"flex justify-center mt-12 items-center\">\r\n          <li>\r\n            Login\r\n            <input onChange={gettingLoginData}></input>\r\n          </li>\r\n          <li>\r\n            Password\r\n            <input onChange={gettingPasswordData}></input>\r\n          </li>\r\n          <li>\r\n            <button onClick={doLogin}> Login </button>\r\n          </li>\r\n          <li>Or</li>\r\n          <li>\r\n            <button onClick={signUp}> Sign Up </button>\r\n          </li>\r\n        </ul>\r\n\r\n\r\n        <div className=\"\">\r\n          <Ender />\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n", "export default {'version':'d3cf96ad','entry':{'module':'/build/entry.client-I2Z74FYW.js','imports':['/build/_shared/chunk-TF7DY7FC.js','/build/_shared/chunk-X4YTQSUM.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-SUL6ZUUO.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/anime_cards/anime_cards_home':{'id':'routes/components/anime_cards/anime_cards_home','parentId':'root','path':'components/anime_cards/anime_cards_home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/anime_cards/anime_cards_home-RH6GU3AI.js','imports':['/build/_shared/chunk-YF434IOX.js','/build/_shared/chunk-UQ4CA6AX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/anime_cards/anime_cards_list':{'id':'routes/components/anime_cards/anime_cards_list','parentId':'root','path':'components/anime_cards/anime_cards_list','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/anime_cards/anime_cards_list-MJV3LUTY.js','imports':['/build/_shared/chunk-6Z4PAN2L.js','/build/_shared/chunk-UQ4CA6AX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/anime_cards/anime_cards_search':{'id':'routes/components/anime_cards/anime_cards_search','parentId':'root','path':'components/anime_cards/anime_cards_search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/anime_cards/anime_cards_search-DFGOBCHD.js','imports':['/build/_shared/chunk-X3OZLCRZ.js','/build/_shared/chunk-UQ4CA6AX.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/ender/Ender':{'id':'routes/components/ender/Ender','parentId':'root','path':'components/ender/Ender','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/ender/Ender-K3M5HREF.js','imports':['/build/_shared/chunk-BKLBPOWP.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/navbar/Navbar':{'id':'routes/components/navbar/Navbar','parentId':'root','path':'components/navbar/Navbar','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/navbar/Navbar-L4JP7NYK.js','imports':['/build/_shared/chunk-J3E5JVD6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/news/News':{'id':'routes/components/news/News','parentId':'root','path':'components/news/News','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/news/News-BFAU4676.js','imports':['/build/_shared/chunk-BKROVRPJ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/home/$home':{'id':'routes/home/$home','parentId':'root','path':'home/:home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/home/$home-2TNE7MVI.js','imports':['/build/_shared/chunk-YF434IOX.js','/build/_shared/chunk-UQ4CA6AX.js','/build/_shared/chunk-J3E5JVD6.js','/build/_shared/chunk-BKLBPOWP.js','/build/_shared/chunk-BKROVRPJ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-WKFKLBHN.js','imports':['/build/_shared/chunk-BKLBPOWP.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/list/$listId':{'id':'routes/list/$listId','parentId':'root','path':'list/:listId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/list/$listId-IZUEOXCJ.js','imports':['/build/_shared/chunk-6Z4PAN2L.js','/build/_shared/chunk-UQ4CA6AX.js','/build/_shared/chunk-J3E5JVD6.js','/build/_shared/chunk-BKLBPOWP.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/search_page/$search':{'id':'routes/search_page/$search','parentId':'root','path':'search_page/:search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/search_page/$search-TSF2XFT3.js','imports':['/build/_shared/chunk-X3OZLCRZ.js','/build/_shared/chunk-UQ4CA6AX.js','/build/_shared/chunk-J3E5JVD6.js','/build/_shared/chunk-BKLBPOWP.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-D3CF96AD.js'};", "\nimport * as entryServer from \"/home/hiniku/Documents/GitHub/ApollosWill/app/entry.server.tsx\";\nimport * as route0 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/root.tsx\";\nimport * as route1 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_search.tsx\";\nimport * as route2 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_home.tsx\";\nimport * as route3 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_list.tsx\";\nimport * as route4 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/navbar/Navbar.tsx\";\nimport * as route5 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/ender/Ender.tsx\";\nimport * as route6 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/news/News.tsx\";\nimport * as route7 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/search_page/$search.tsx\";\nimport * as route8 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/list/$listId.tsx\";\nimport * as route9 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/home/$home.tsx\";\nimport * as route10 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/components/anime_cards/anime_cards_search\": {\n      id: \"routes/components/anime_cards/anime_cards_search\",\n      parentId: \"root\",\n      path: \"components/anime_cards/anime_cards_search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/components/anime_cards/anime_cards_home\": {\n      id: \"routes/components/anime_cards/anime_cards_home\",\n      parentId: \"root\",\n      path: \"components/anime_cards/anime_cards_home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/components/anime_cards/anime_cards_list\": {\n      id: \"routes/components/anime_cards/anime_cards_list\",\n      parentId: \"root\",\n      path: \"components/anime_cards/anime_cards_list\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/components/navbar/Navbar\": {\n      id: \"routes/components/navbar/Navbar\",\n      parentId: \"root\",\n      path: \"components/navbar/Navbar\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/components/ender/Ender\": {\n      id: \"routes/components/ender/Ender\",\n      parentId: \"root\",\n      path: \"components/ender/Ender\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/components/news/News\": {\n      id: \"routes/components/news/News\",\n      parentId: \"root\",\n      path: \"components/news/News\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/search_page/$search\": {\n      id: \"routes/search_page/$search\",\n      parentId: \"root\",\n      path: \"search_page/:search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/list/$listId\": {\n      id: \"routes/list/$listId\",\n      parentId: \"root\",\n      path: \"list/:listId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/home/$home\": {\n      id: \"routes/home/$home\",\n      parentId: \"root\",\n      path: \"home/:home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };"],
  "mappings": "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",
  "names": []
}
