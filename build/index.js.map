{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/root.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/season_carousel/season_carousel.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_search.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_home.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_list.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/list_carousel/list_carousel.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/modal/modal_anime.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/navbar/Navbar.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/ender/Ender.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/news/News.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/search_page/$search.tsx", "../app/routes/components/anime_cards/anime_cards_home.tsx", "../app/routes/components/ender/Ender.tsx", "../app/routes/components/navbar/Navbar.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/list/$listId.tsx", "../app/routes/components/anime_cards/anime_cards_list.tsx", "/home/hiniku/Documents/GitHub/ApollosWill/app/routes/index.tsx", "../app/routes/components/news/News.tsx", "../app/database/db.server.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import tailwindUrl from \"./styles/tailwind.css\"\nimport carouselUrl from \"react-responsive-carousel/lib/styles/carousel.min.css\";\n\nimport type { LinksFunction, MetaFunction } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Apollo's Will\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const links: LinksFunction = () => [\n  { rel: \"stylesheet\", href: tailwindUrl },\n  { rel: \"stylesheet\", href: carouselUrl },\n];\n\n\nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        \n      </head>\n      <body className=\"bg-smooth-pink\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import React from \"react\";\nimport { useState } from \"react\";\nimport Modal from \"react-modal\";\n\nexport default function Season_Carousel({ animes, loginId }: any) {\n\n  let [animeState, setAnimeState] = useState(\"\");\n  let [animeId, setListAnimeId] = useState(0);\n  let [modalAnimeId, setAnimeId] = useState(\"\");\n  let [modalAnimeName, setAnimeName] = useState(\"\");\n  let [modalAnimeDescription, setAnimeDescription] = useState(\"\");\n  let [modalAnimeEpisodeCount, setAnimeEpisodeCount] = useState(0);\n  let [modalAnimeEpisodeWatched, setAnimeEpisodeWatched] = useState(0);\n  let [modalAnimeScore, setAnimeScore] = useState(0);\n  let [isEpisodeHidden, setEpisodeHidden] = useState(\"hidden\");\n  let [isAddAnimeHidden, setAddAnimeHidden] = useState(\"btn\");\n  let [isStateHidden, setStateHidden] = useState(\"hidden\")\n\n  let listData = [\n    {\n      id: animes[animeId].id,\n      animeState: animeState,\n      score: modalAnimeScore,\n      episodesWatched: modalAnimeEpisodeWatched,\n      userId: loginId\n    },\n  ];\n\n  function changeModalAnime(id: number) {\n    fetch(\"http://localhost:3011/searchAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: animes[id].id,\n        userId: loginId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post == true) {\n          fetch(\"http://localhost:3011/getEpisodesAndScore\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              id: animes[id].id,\n              userId: loginId\n            }),\n          })\n            .then((data) => {\n              return data.json();\n            })\n            .then((post) => {\n              console.log(post);\n              setAnimeEpisodeWatched(post.episodes_watched);\n              setAnimeScore(post.rating)\n\n            });\n\n          console.log(\"ta na lista\");\n          console.log(loginId)\n          setEpisodeHidden(\"\");\n          setAddAnimeHidden(\"hidden\");\n          setStateHidden(\"justify-center flex\")\n        } else {\n          console.log(\"n\u00E3o ta na lista\");\n          setEpisodeHidden(\"hidden\");\n          setAddAnimeHidden(\"btn\");\n          setStateHidden(\"hidden\")\n        }\n      });\n\n    setAnimeId(animes[id].id);\n    setAnimeName(animes[id].en_title);\n    setAnimeDescription(animes[id].synopsis);\n    setAnimeEpisodeCount(animes[id].episode_count);\n    \n    setListAnimeId(id);\n    console.log(id)\n    openModal();\n  }\n\n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n\n  }\n\n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(listData[0]),\n    });\n  }\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: animes[animeId].id,\n        userId: loginId\n      }),\n    });\n\n    setEpisodeHidden(\"\");\n    setAddAnimeHidden(\"hidden\");\n    setStateHidden(\"justify-center flex\")\n  }\n\n  function removeOfList(){\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: animes[animeId].id,\n        userId: loginId\n      }),\n    });\n    \n    \n    setEpisodeHidden(\"hidden\");\n    setAddAnimeHidden(\"btn\");\n    setStateHidden(\"hidden\")\n  }\n\n  function addScore() {\n    if (modalAnimeScore < 10) {\n      setAnimeScore(modalAnimeScore + 1);\n    }\n  }\n\n  function subScore() {\n    if (modalAnimeScore > 0) {\n      setAnimeScore(modalAnimeScore - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (modalAnimeEpisodeWatched < modalAnimeEpisodeCount) {\n      setAnimeEpisodeWatched(modalAnimeEpisodeWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (modalAnimeEpisodeWatched > 0) {\n      setAnimeEpisodeWatched(modalAnimeEpisodeWatched - 1);\n    }\n  }\n\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <div className=\"carousel w-full\">\n      <div>\n        <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          ariaHideApp={false}\n          contentLabel=\"Example Modal\"\n        >\n          <div className=\"card card-side bg-base-100 h-[500px]\">\n            <figure>\n              <img\n                className=\"w-[300px] h-[500px]\"\n                src={\"imgs/poster_\" + modalAnimeId + \".png\"}\n                alt=\"Poster1\"\n              />\n            </figure>\n            <div className=\"card-body\">\n              <h2 className=\"card-title\">{modalAnimeName}</h2>\n              <p>{modalAnimeDescription}</p>\n              <div className={isAddAnimeHidden} onClick={addToList}>\n                Add to List{\" \"}\n              </div>\n              {/* add to list button */}\n\n              <div className=\"card-actions justify-center flex\">\n                <datalist id=\"states\">\n                  <option value={\"Watching\"} />\n                  <option value={\"Plan To Watch\"} />\n                  <option value={\"Completed\"} />\n                  <option value={\"On Hold\"} />\n                  <option value={\"Dropped\"} />\n                </datalist>\n                <div className={isStateHidden}>Anime State</div>\n                <form>\n                  <input\n                    onChange={gettingAnimeState}\n                    list=\"states\"\n                    className={isStateHidden}\n                  ></input>\n                </form>\n              </div>\n\n              <div className={isEpisodeHidden}>\n                <div className=\"justify-center flex\">Score</div>\n                <div className=\"justify-center items-center flex\">\n                  {modalAnimeScore + \" / 10\"}\n                </div>\n                {/* score thing */}\n                <div className=\"card-actions justify-center flex\">\n                  <button\n                    className=\"w-[50px] bg-smooth-blue\"\n                    onClick={subScore}\n                  >\n                    -\n                  </button>\n                  <button\n                    className=\"w-[50px] bg-smooth-blue\"\n                    onClick={addScore}\n                  >\n                    +\n                  </button>\n                </div>\n                {/* add and remove score */}\n                <div className=\"justify-center flex\">Episodes</div>\n                <div className=\"justify-center items-center flex\">\n                  {modalAnimeEpisodeWatched + \" / \" + modalAnimeEpisodeCount}\n                </div>\n                {/* episodes watched */}\n                <div className=\"card-actions justify-center flex\">\n                  <button\n                    className=\"w-[50px] bg-smooth-blue\"\n                    onClick={subEpisode}\n                  >\n                    -\n                  </button>\n                  <button\n                    className=\"w-[50px] bg-smooth-blue\"\n                    onClick={addEpisode}\n                  >\n                    +\n                  </button>\n                </div>\n                {/* add and remove episodes */}\n\n                <div className=\"card-actions justify-end flex\">\n                  <div className=\"btn\" onClick={saveData}>\n                    Save\n                  </div>\n                  <div className=\"btn\" onClick={removeOfList}>Remove Anime From List</div>\n                </div>\n\n                {/* Remove Anime From List Button */}\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n\n      <div id=\"season-1\" className=\"carousel-item relative w-full scroll-mt-36\">\n        <img\n          onClick={() => changeModalAnime(0)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[0].id + \".png\"}\n          alt=\"Poster1\"\n        />\n        <img\n          onClick={() => changeModalAnime(1)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[1].id + \".png\"}\n          alt=\"Poster2\"\n        />\n        <img\n          onClick={() => changeModalAnime(2)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[2].id + \".png\"}\n          alt=\"Poster3\"\n        />\n\n        <img\n          onClick={() => changeModalAnime(3)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[3].id + \".png\"}\n          alt=\"Poster4\"\n        />\n        <img\n          onClick={() => changeModalAnime(4)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[4].id + \".png\"}\n          alt=\"Poster5\"\n        />\n\n        <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n          <a href=\"#season-3\" className=\"btn btn-circle\">\n            \u276E\n          </a>\n          <a href=\"#season-2\" className=\"btn btn-circle\">\n            \u276F\n          </a>\n        </div>\n      </div>\n\n      <div id=\"season-2\" className=\"carousel-item relative w-full scroll-mt-36\">\n        <img\n          onClick={() => changeModalAnime(5)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[5].id + \".png\"}\n          alt=\"Poster1\"\n        />\n        <img\n          onClick={() => changeModalAnime(6)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[6].id + \".png\"}\n          alt=\"Poster2\"\n        />\n        <img\n          onClick={() => changeModalAnime(7)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[7].id + \".png\"}\n          alt=\"Poster3\"\n        />\n        <img\n          onClick={() => changeModalAnime(8)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[8].id + \".png\"}\n          alt=\"Poster4\"\n        />\n        <img\n          onClick={() => changeModalAnime(9)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[9].id + \".png\"}\n          alt=\"Poster5\"\n        />\n\n        <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n          <a href=\"#season-1\" className=\"btn btn-circle\">\n            \u276E\n          </a>\n          <a href=\"#season-3\" className=\"btn btn-circle\">\n            \u276F\n          </a>\n        </div>\n      </div>\n\n      <div id=\"season-3\" className=\"carousel-item relative w-full scroll-mt-36\">\n        <img\n          onClick={() => changeModalAnime(10)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[10].id + \".png\"}\n          alt=\"Poster1\"\n        />\n        <img\n          onClick={() => changeModalAnime(11)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[11].id + \".png\"}\n          alt=\"Poster2\"\n        />\n        <img\n          onClick={() => changeModalAnime(12)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[12].id + \".png\"}\n          alt=\"Poster3\"\n        />\n        <img\n          onClick={() => changeModalAnime(13)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[13].id + \".png\"}\n          alt=\"Poster4\"\n        />\n        <img\n          onClick={() => changeModalAnime(14)}\n          className=\"w-[250px] h-[350px] pl-16\"\n          src={\"imgs/poster_\" + animes[14].id + \".png\"}\n          alt=\"Poster5\"\n        />\n\n        <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n          <a href=\"#season-2\" className=\"btn btn-circle\">\n            \u276E\n          </a>\n          <a href=\"#season-1\" className=\"btn btn-circle\">\n            \u276F\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "export default function Anime_Cards_Search({listAnimes}: any ){\n    console.log(listAnimes)\n    return(\n        <div>\n            {listAnimes}\n        </div>\n    )\n}", "import { useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\n\n\n\nexport default function Anime_Cards_Home({ userId, listAnimes }: any) {\n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n/* Modal Things */\n\n  function openModal(id: number) {\n  \n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n              setEpisodesWatched(post.episodesWatched);\n              setScoreGiven(post.scoreGiven)\n              setAnimeState(post.animeState)\n          \n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n  \n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n  \n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId\n      }),\n    });\n  }\n\n  /* For Loop to map all the animes on the list */\n  \n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"/imgs/poster_\" + anime.id + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n            <p>something</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n            \n            <p>{animeTitle}</p>\n             \n             {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n            \n             {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                 {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                 {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                 {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n             {/* Add to List Button */}\n            \n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n            \n             {/* Save on the List Button */}\n            \n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "import { useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\nexport default function Anime_Cards_List({ userId, listAnimes }: any) {\n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n/* Modal Things */\n\n  function openModal(id: number) {\n  \n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n              setEpisodesWatched(post.episodesWatched);\n              setScoreGiven(post.scoreGiven)\n              setAnimeState(post.animeState)\n          \n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n  \n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n  \n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId\n      }),\n    });\n  }\n  /* For Loop to map all the animes on the list */\n  \n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id_anime}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"/imgs/poster_\" + anime.id_anime + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id_anime) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n            <p>something</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n            \n            <p>{animeTitle}</p>\n             \n             {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n            \n             {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                 {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                 {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                 {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n             {/* Add to List Button */}\n            \n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n            \n             {/* Save on the List Button */}\n            \n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "\nimport React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport Modal from \"react-modal\";\n\n\nfunction pee(){\n  return (\n    console.log(\"pee\")\n  )\n}\n\n\n\nexport default function List_Carousel(){\n  \nlet subtitle: { style: { color: string } };\nconst [modalIsOpen, setIsOpen] = React.useState(false);\n\nfunction openModal() {\n  setIsOpen(true);\n}\n\nfunction afterOpenModal() {\n  // references are now sync'd and can be accessed.\n}\n\nfunction closeModal() {\n  setIsOpen(false);\n}\n\n  \n  \n  return (\n    <div>\n      <Modal\n          isOpen={modalIsOpen}\n          onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          ariaHideApp={false}\n          contentLabel=\"Example Modal\"\n        >\n          <div>\n            PEe\n          </div>\n        </Modal>\n      \n      \n      \n      <Carousel showThumbs={false} centerMode={true} swipeable={true}>\n                <div onClick={openModal} className=\"w-32\">\n                    <img src=\"imgs/poster_1.png\" className=\"h-[500px]\"/>\n                    <p className=\"legend\" >Cowboy Bebop</p>\n                </div>\n                <div>\n                    <img src=\"imgs/banner_3.png\" className=\"w-[300px] h-[500px]\" />\n                    <p className=\"legend\">Legend 1</p>\n                </div>\n                <div>\n                    <img src=\"imgs/banner_1697.png\" className=\"w-[300px] h-[500px]\" />\n                    <p className=\"legend\">Lucky Stars</p>\n                </div>\n                \n            </Carousel>\n    </div>\n  )\n}", "import React from 'react';\nimport Modal from 'react-modal';\n\nexport default function Modal_Anime(){\n    let subtitle: { style: { color: string; }; };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  return (\n    <div className=\"\">\n      <button onClick={openModal}>Open Modal</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        contentLabel=\"Example Modal\"\n      >\n          \n\n        <button onClick={closeModal}>close</button>\n        <div>I am a modal</div>\n        <form>\n          <input />\n        </form>\n      </Modal>\n    </div>\n  );\n}", "import { Link } from \"@remix-run/react\";\n\nexport default function Navbar({userName, userId}: any ) {\n    return (\n        <div className='w-screen h-[75px] bg-smooth-blue'>\n            <div className='px-2 flex justify-between items-center w-full h-full'>\n                <div className='flex items-center pl-4'>\n                    <Link to=\"/\"><h1 className='font-quicksand mr-4 text-[24px]'>Apollo's Will</h1></Link>\n                    <ul className='hidden md:flex font-montserrat'>\n                        <li><Link to={\"/search_page/\" + userId}>Anime Search</Link></li>\n                        <li>Industry</li>\n                        <li>About</li>\n                    </ul>\n                </div>\n\n                <div className=\"flex items-center\">\n                    <h1 className=\"pr-4\">{userName}</h1>\n                    <div className=\"flex w-[130px] h-[130px] bg-smooth-blue items-center rounded-3xl justify-center mt-12 mr-10 z-10\">\n                        <Link to={\"/list/\" + userId}><img className=\"rounded-3xl w-[100px]\" src={require(\"public/imgs/Icon.jpg\")} alt=\"Icon\"/></Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n", "export default function Ender(){\n    return(\n        <div  className=\"w-full h-[150px] bg-[#FBAFAF] flex items-center justify-center\">\n            <h1>Apollo\u2019s Will is a property of Apollo\u2019s Will Co.,Ltd. \u00A92022 All Rights Reserved.</h1>\n            <h1>Icone Icone Icone</h1>\n        </div>\n    )\n}", "export default function News() {\n    return (\n        <div className=\"carousel autoplay w-full\">\n            <div id=\"slide-news1\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner1.jpg\")} alt=\"Banner1\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news4\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news2\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news2\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner2.jpg\")} alt=\"Banner2\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news1\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news3\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news3\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner3.png\")} alt=\"Banner3\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news2\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news4\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news4\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner4.jpg\")} alt=\"Banner4\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news3\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news1\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n", "import { Link, useParams } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport Anime_Cards_Home from \"../components/anime_cards/anime_cards_home\";\nimport Anime_Cards_List from \"../components/anime_cards/anime_cards_list\";\nimport Ender from \"../components/ender/Ender\";\nimport Navbar from \"../components/navbar/Navbar\";\n\nexport default function searchAnime() {\n    let userId = useParams();\n\n    let [search, setSearch] = useState(\"\");\n    \n    let [found, setFound] = useState();\n\n    let [idk, setIdk] = useState([])\n    \n    function gettingSearch(event: {\n        target: { value: React.SetStateAction<string> };\n    }) {\n        console.log(event.target.value);\n        setSearch(event.target.value);\n        \n    }\n\n    function doSearch(){\n        fetch(\"http://localhost:3011/searchAnime\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    search: search\n                }),\n            })\n                .then((data) => {\n                    return data.json();\n                })\n                .then((post) => {      \n                    setIdk(post)\n                    \n                })\n    }\n    console.log(idk, typeof idk)\n    return (\n        <div className=\"bg-smooth-pink\">\n\n            <Navbar userId={userId.search} />\n\n            <img className=\"w-screen h-[500px] z-0 -mb-32\" src={require(\"public/imgs/search_1.jpg\")} alt=\"Wallpaper\" />\n            <div className=\"h-full w-full flex justify-center items-center\">\n                {/* Icon */}\n                <div className=\"flex w-[200px] h-[200px] bg-smooth-pink items-center rounded-3xl justify-center\">\n                    <Link to=\"/list\"><img className=\"rounded-3xl w-[150px]\" src={require(\"public/imgs/Icon.jpg\")} alt=\"Icon\" /></Link>\n                </div>\n            </div>\n\n            <h1 className=\"font-montserrat text-7xl flex justify-center\">User_Name</h1>\n\n            {/* Input thingy search bar */}\n            <div className=\"flex justify-center items-center\">\n                <div className=\"form-control w-full flex justify-center items-center\">\n                    <label className=\"label\">\n                        <span className=\"label-text-\"></span>\n                        <span className=\"label-text-alt\">Filters</span>\n                    </label>\n                    <input type=\"text\" placeholder=\"Search Anime\" className=\"input input-bordered w-[700px]\" onChange={gettingSearch}></input>\n                    <button onClick={doSearch}>Search</button>\n                    <img src={\"imgs/poster_\" +  + \".png\"} alt=\"\"/>\n                </div>\n            </div>\n\n            <Anime_Cards_Home listAnimes={idk} userId={userId.search} />\n\n\n            <div className=\"mt-16\">\n                <Ender />\n            </div>\n        </div>\n    )\n}", "import { useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\n\n\n\nexport default function Anime_Cards_Home({ userId, listAnimes }: any) {\n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n/* Modal Things */\n\n  function openModal(id: number) {\n  \n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n              setEpisodesWatched(post.episodesWatched);\n              setScoreGiven(post.scoreGiven)\n              setAnimeState(post.animeState)\n          \n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n  \n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n  \n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId\n      }),\n    });\n  }\n\n  /* For Loop to map all the animes on the list */\n  \n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"/imgs/poster_\" + anime.id + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n            <p>something</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n            \n            <p>{animeTitle}</p>\n             \n             {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n            \n             {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                 {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                 {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                 {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n             {/* Add to List Button */}\n            \n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n            \n             {/* Save on the List Button */}\n            \n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "export default function Ender(){\n    return(\n        <div  className=\"w-full h-[150px] bg-[#FBAFAF] flex items-center justify-center\">\n            <h1>Apollo\u2019s Will is a property of Apollo\u2019s Will Co.,Ltd. \u00A92022 All Rights Reserved.</h1>\n            <h1>Icone Icone Icone</h1>\n        </div>\n    )\n}", "import { Link } from \"@remix-run/react\";\n\nexport default function Navbar({userName, userId}: any ) {\n    return (\n        <div className='w-screen h-[75px] bg-smooth-blue'>\n            <div className='px-2 flex justify-between items-center w-full h-full'>\n                <div className='flex items-center pl-4'>\n                    <Link to=\"/\"><h1 className='font-quicksand mr-4 text-[24px]'>Apollo's Will</h1></Link>\n                    <ul className='hidden md:flex font-montserrat'>\n                        <li><Link to={\"/search_page/\" + userId}>Anime Search</Link></li>\n                        <li>Industry</li>\n                        <li>About</li>\n                    </ul>\n                </div>\n\n                <div className=\"flex items-center\">\n                    <h1 className=\"pr-4\">{userName}</h1>\n                    <div className=\"flex w-[130px] h-[130px] bg-smooth-blue items-center rounded-3xl justify-center mt-12 mr-10 z-10\">\n                        <Link to={\"/list/\" + userId}><img className=\"rounded-3xl w-[100px]\" src={require(\"public/imgs/Icon.jpg\")} alt=\"Icon\"/></Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n", "import { Link, useLoaderData, useParams } from \"@remix-run/react\";\n\nimport { pool } from \"~/database/db.server\";\nimport Navbar from \"../components/navbar/Navbar\";\nimport Anime_Cards_List from \"../components/anime_cards/anime_cards_list\";\nimport Ender from \"../components/ender/Ender\";\nimport { useState } from \"react\";\nimport Modal_Anime from \"../components/modal/modal_anime\";\n\nexport default function List() {\n    let [listAnime, setListAnime] = useState([]);\n    const listId = useParams();\n    let id = listId.listId\n\n    fetch(\"http://localhost:3011/getAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        setListAnime(post)\n      })\n    \n    return (\n        <div className=\"bg-smooth-pink\">\n            \n            <Navbar userId={id}/>\n\n            <img className=\"w-screen h-[500px] -z-10 -mb-32\" src={require(\"public/imgs/Wallpaper.jpeg\")} alt=\"Wallpaper\" />\n            <div className=\"h-full w-full flex justify-center items-center\">\n                {/* Icon */}\n                <div className=\"flex w-[200px] h-[200px] bg-smooth-pink items-center rounded-3xl justify-center\">\n                    <Link to=\"/list\"><img className=\"rounded-3xl w-[150px]\" src={require(\"public/imgs/Icon.jpg\")} alt=\"Icon\" /></Link>\n                </div>\n            </div>\n\n            <h1 className=\"font-montserrat text-7xl flex justify-center\">Anime List</h1>\n\n            {/* Input thingy search bar */}\n            <div className=\"flex justify-center items-center\">\n                <div className=\"form-control w-full flex justify-center items-center\">\n                    <label className=\"label\">\n                        <span className=\"label-text-\"></span>\n                        <span className=\"label-text-alt\">Filters</span>\n                    </label>\n                    <input type=\"text\" placeholder=\"Search Anime\" className=\"input input-bordered w-[700px]\"></input>\n                </div>\n            </div>\n\n           <Anime_Cards_List userId={id} listAnimes={listAnime}/>\n\n            <div className=\"mt-16\">\n                <Ender/>\n            </div>\n        </div>\n    )\n}", "import { useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\n\nimport React from 'react';\nimport Modal from \"react-modal\";\n\nexport default function Anime_Cards_List({ userId, listAnimes }: any) {\n  let [whatAnimeId, setWhatAnimeId] = useState(0);\n  let [animeTitle, setAnimeTitle] = useState(\"Anime_Title\")\n  let [animeSynopsis, setAnimeSynopsis] = useState(\"Anime_Synopsis\")\n\n  /* These are to hidden the buttons when the anime is or isn't on the list */\n\n  let [isAddBtnHidden, setAddBtnHidden] = useState(\"btn btn-primary\")\n  let [isUpdateRemoveBtnHidden, setUpdateRemoveBtnHidden] = useState(\"hidden\")\n  let [isSynopsisHidden, setSynopsisHidden] = useState(\"\")\n  let [isEpisodesScoreHidden, setEpisodesScoreHidden] = useState(\"hidden\")\n\n  /*  These are to get the list data (score, episodes watched and anime state)*/\n\n  let [episodesWatched, setEpisodesWatched] = useState(0)\n  let [scoreGiven, setScoreGiven] = useState(0)\n  let [animeState, setAnimeState] = useState(\"\")\n\n  /* These are for getting the episode count for the anime */\n\n  let [episodeCount, setEpisodeCount] = useState(0)\n\n  const divs = [];\n  let subtitle: { style: { color: string } };\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n/* Modal Things */\n\n  function openModal(id: number) {\n  \n    /* Searching to see if the anime is on the list */\n    fetch(\"http://localhost:3011/searchAnimeOnList\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: id,\n        userId: userId\n      }),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post.isOnList) {\n          console.log(post);\n              setEpisodesWatched(post.episodesWatched);\n              setScoreGiven(post.scoreGiven)\n              setAnimeState(post.animeState)\n          \n          /* Setting the Buttons Hidden or Visible */\n          setAddBtnHidden(\"hidden\")\n          setSynopsisHidden(\"hidden\")\n          setUpdateRemoveBtnHidden(\"btn btn-primary\")\n          setEpisodesScoreHidden(\"\")\n        } else {\n          setAddBtnHidden(\"btn btn-primary\")\n          setSynopsisHidden(\"\")\n          setUpdateRemoveBtnHidden(\"hidden\")\n          setEpisodesScoreHidden(\"hidden\")\n        }\n      })\n\n\n\n    /* Getting anime info */\n\n    fetch(\"http://localhost:3011/getAnimeInfo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify([{\n        id: id\n      }]),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        console.log(post)\n        setAnimeTitle(post.en_title)\n        setAnimeSynopsis(post.synopsis)\n        setEpisodeCount(post.episode_count)\n      });\n\n\n    /* Im setting the Anime ID when i click on the img, with this id i can get the right poster */\n    setWhatAnimeId(id)\n\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  /* Add and Remove anime from the list */\n\n  function addToList() {\n    fetch(\"http://localhost:3011/addAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"hidden\")\n    setSynopsisHidden(\"hidden\")\n    setUpdateRemoveBtnHidden(\"btn btn-primary\")\n    setEpisodesScoreHidden(\"\")\n  }\n\n  function removeOfList() {\n    fetch(\"http://localhost:3011/removeAnime\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        userId: userId\n      }),\n    });\n    setAddBtnHidden(\"btn btn-primary\")\n    setSynopsisHidden(\"\")\n    setUpdateRemoveBtnHidden(\"hidden\")\n    setEpisodesScoreHidden(\"hidden\")\n  }\n\n  /* Add and Remove Score and Episodes from the list*/\n\n  function addScore() {\n    if (scoreGiven < 10) {\n      setScoreGiven(scoreGiven + 1);\n    }\n  }\n\n  function subScore() {\n    if (scoreGiven > 0) {\n      setScoreGiven(scoreGiven - 1);\n    }\n  }\n\n  function addEpisode() {\n    if (episodesWatched < episodeCount) {\n      setEpisodesWatched(episodesWatched + 1);\n    }\n  }\n\n  function subEpisode() {\n    if (episodesWatched > 0) {\n      setEpisodesWatched(episodesWatched - 1);\n    }\n  }\n\n  /* Getting the Anime State */\n  \n  function gettingAnimeState(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setAnimeState(event.target.value);\n  }\n\n  /* Saving the List Data */\n  \n  function saveData() {\n    fetch(\"http://localhost:3011/postListData\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        id: whatAnimeId,\n        animeState: animeState,\n        score: scoreGiven,\n        episodesWatched: episodesWatched,\n        userId: userId\n      }),\n    });\n  }\n  /* For Loop to map all the animes on the list */\n  \n  for (const anime of listAnimes) {\n    divs.push(\n      <div className=\"w-full h-full flex justify-center items-center pt-16 pb-16\" key={anime.id_anime}>\n        <div className=\"card card-side bg-base-100 shadow-xl h-32 mr-10\">\n          <figure>\n            <img\n              className=\"w-[91px]\"\n              src={\"/imgs/poster_\" + anime.id_anime + \".png\"}\n              alt=\"Poster\"\n              onClick={() => { openModal(anime.id_anime) }}\n            />\n          </figure>\n          <div className=\"card-body w-[700px]\">\n            <h2 className=\"card-title\">{anime.en_jp_title}</h2>\n            <p>something</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        ariaHideApp={false}\n        contentLabel=\"Example Modal\"\n        className={\"h-[300px] justify-center items-center rounded-sm\"}\n      >\n\n        <div className=\"card bg-base-100 shadow-xl image-full\">\n          <figure className=\" h-[500px]\"><img className=\"w-full h-full\" src={\"imgs/banner_\" + whatAnimeId + \".png\"} alt=\"Banner\" /></figure>\n          <div className=\"card-body\">\n            <h2 className=\"card-title\"></h2>\n            {/* Anime Title */}\n            \n            <p>{animeTitle}</p>\n             \n             {/* Anime Synopsis (note: it will be hidden when already on the list) */}\n\n            <p className={isSynopsisHidden}>{animeSynopsis}</p>\n            \n             {/* Episode and Score (note: when not on list they will be hidden) */}\n\n            <p className={isEpisodesScoreHidden}>\n              <div>\n                 {/* List Episodes */}\n                <p>Episodes Watched {<br />}\n                  {episodesWatched}/{episodeCount}</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subEpisode} className={isUpdateRemoveBtnHidden}>-</button>\n                  </li>\n                  <li>\n                    <button onClick={addEpisode} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                 {/* List Score */}\n\n                <p>Score {<br />}\n                  {scoreGiven}/10</p>\n\n                <ul className=\"flex\">\n                  <li>\n                    <button onClick={subScore} className={isUpdateRemoveBtnHidden}>-</button>\n\n\n                  </li>\n                  <li>\n                    <button onClick={addScore} className={isUpdateRemoveBtnHidden}>+</button>\n                  </li>\n                </ul>\n\n                 {/* List Anime State */}\n\n                <select onChange={gettingAnimeState} value={animeState} className=\"select w-full max-w-xs\">\n                  <option disabled selected>Anime State</option>\n                  <option>Plan To Watch</option>\n                  <option>Watching</option>\n                  <option>Completed</option>\n                  <option>Dropped</option>\n                </select>\n              </div>\n            </p>\n\n             {/* Add to List Button */}\n            \n            <div className=\"card-actions justify-end\">\n              <button onClick={addToList} className={isAddBtnHidden}>Add To List</button>\n            </div>\n            \n             {/* Save on the List Button */}\n            \n            <div className=\"card-actions justify-end\">\n              <button onClick={saveData} className={isUpdateRemoveBtnHidden}>Update</button>\n              <button onClick={removeOfList} className={isUpdateRemoveBtnHidden}>Remove</button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n\n      <div className=\"w-full h-full\">{divs}</div>\n    </div>\n  )\n}\n", "import News from \"./components/news/News\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Ender from \"./components/ender/Ender\";\nimport Season_Carousel from \"./components/season_carousel/season_carousel\";\nimport List_Carousel from \"./components/list_carousel/list_carousel\";\n\nimport { pool } from \"../database/db.server\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { useState } from \"react\";\nimport Anime_Cards_Home from \"./components/anime_cards/anime_cards_home\";\n\n\n\nexport const loader = async () => {\n  let conn;\n  let seasonAnime = [];\n  try {\n    conn = await pool.getConnection();\n\n    seasonAnime = await conn.query(\n      \"SELECT * FROM Anime WHERE MONTH(start_date) = 4 and YEAR(start_date)= 2021 ;\"\n    );\n\n\n  } finally {\n    if (conn) conn.release(); //release to pool\n  }\n\n  return {\n    seasonAnime: seasonAnime,\n  };\n};\n\nexport default function Index() {\n  const { seasonAnime } = useLoaderData();\n\n  \n  let [userName, setUserName] = useState(\"\");\n  let [showMain, setShowMain] = useState(\"hidden\");\n  let [loginHidden, setLoginHidden] = useState(\"\");\n  let [loginId, setLoginId] = useState(0);\n  let [login, setLogin] = useState(\"\");\n  let [password, setPassword] = useState(\"\");\n  let [listAnime, setListAnime] = useState([]);\n\n  let loginData = [\n    {\n      login: login,\n      password: password,\n      id: loginId\n    },\n  ];\n\n  function gettingLoginData(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setLogin(event.target.value);\n  }\n\n  function gettingPasswordData(event: {\n    target: { value: React.SetStateAction<string> };\n  }) {\n    setPassword(event.target.value);\n  }\n\n  async function doLogin() {\n\n    fetch(\"http://localhost:3011/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(loginData),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post) {\n          setLoginId(post);\n          setLoginHidden(\"hidden\");\n          setShowMain(\"\");\n        }\n      });\n  }\n\n  async function signUp() {\n    fetch(\"http://localhost:3011/signUp\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(loginData),\n    })\n      .then((data) => {\n        return data.json();\n      })\n      .then((post) => {\n        if (post) {\n          setLoginId(post);\n          setLoginHidden(\"hidden\");\n          setShowMain(\"\");\n        }\n      });\n  }\n  console.log(loginId)\n  return (\n    <div className=\"bg-smooth-pink h-[100%] w-[100%] \">\n\n      <div className={loginHidden}>\n        <div className=\"bg-smooth-pink h-[500px] items-center justify-center flex mt-32\">\n          <div className=\"bg-smooth-blue w-[300px] h-[400px] items-center flex justify-center\">\n            <ul>\n              <li>\n                Login\n                <input onChange={gettingLoginData}></input>\n              </li>\n              <li>\n                Password\n                <input onChange={gettingPasswordData}></input>\n              </li>\n              <li>\n                <button onClick={doLogin}> Login </button>\n              </li>\n              <li>Or</li>\n              <li>\n                <button onClick={signUp}> Sign Up </button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n\n      <div className={showMain}>\n\n        <Navbar userName={login} userId={loginId} />\n\n        {/* the div where the News carousel goes */}\n        <div className=\"w-screen h-[500px] flex items-center justify-center\">\n          <div className=\"w-[900px] h-[350px] flex\">\n            <News />\n          </div>\n        </div>\n        <h1 className=\"\">Top Animes Of The Season</h1>\n        <div className=\"items-center justify-center bg-smooth-blue\">\n          \n          <Anime_Cards_Home listAnimes={seasonAnime} userId={loginId}/>\n\n        </div>\n\n      </div>\n\n      <div className=\"place-items-end\">\n\n        <Ender />\n\n      </div>\n    </div>\n  );\n\n}\n", "export default function News() {\n    return (\n        <div className=\"carousel autoplay w-full\">\n            <div id=\"slide-news1\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner1.jpg\")} alt=\"Banner1\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news4\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news2\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news2\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner2.jpg\")} alt=\"Banner2\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news1\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news3\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news3\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner3.png\")} alt=\"Banner3\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news2\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news4\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n            <div id=\"slide-news4\" className=\"carousel-item relative w-full scroll-mt-40\">\n                <img className=\"w-[1000px] h-[450px]\" src={require(\"public/imgs/Banner4.jpg\")} alt=\"Banner4\" />\n                <div className=\"absolute flex justify-between transform -translate-y-1/2 left-5 right-5 top-1/2\">\n                    <a href=\"#slide-news3\" className=\"btn btn-circle\">\u276E</a>\n                    <a href=\"#slide-news1\" className=\"btn btn-circle\">\u276F</a>\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n", "const mariadb = require(\"mariadb\");\nconst dotenv = require(\"dotenv\").config({path: \".env-local\"});\n\n\nconst pool = mariadb.createPool({\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASS,\n    database: process.env.DB_NAME,\n    connectionLimit: 5\n});\n\npool.getConnection((err: { code: string; }, connection: { release: () => void; }) => {\n  if(err){\n      if (err.code === 'PROTOCOL_CONNECTION_LOST'){\n          console.error('Database connection lost');\n      }\n      if (err.code === 'ER_CON_COUNT_ERROR'){\n          console.error('Database has too many connection');\n      }\n      if (err.code === 'ECONNREFUSED'){\n          console.error('Database connection was refused');\n      }\n  }\n  if(connection) connection.release();\n\n  return;\n});\n\nexport {pool};", "export default {'version':'6b77182b','entry':{'module':'/build/entry.client-D2IKM6EK.js','imports':['/build/_shared/chunk-BWQMSKPQ.js','/build/_shared/chunk-TF7DY7FC.js','/build/_shared/chunk-XV23MX66.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-726NTEVP.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/anime_cards/anime_cards_home':{'id':'routes/components/anime_cards/anime_cards_home','parentId':'root','path':'components/anime_cards/anime_cards_home','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/anime_cards/anime_cards_home-EO6HTF7S.js','imports':['/build/_shared/chunk-BNZWXWSM.js','/build/_shared/chunk-EJMPSTUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/anime_cards/anime_cards_list':{'id':'routes/components/anime_cards/anime_cards_list','parentId':'root','path':'components/anime_cards/anime_cards_list','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/anime_cards/anime_cards_list-BXB2Y2HT.js','imports':['/build/_shared/chunk-GTT2K62H.js','/build/_shared/chunk-EJMPSTUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/anime_cards/anime_cards_search':{'id':'routes/components/anime_cards/anime_cards_search','parentId':'root','path':'components/anime_cards/anime_cards_search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/anime_cards/anime_cards_search-2F4DHX2A.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/ender/Ender':{'id':'routes/components/ender/Ender','parentId':'root','path':'components/ender/Ender','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/ender/Ender-K3M5HREF.js','imports':['/build/_shared/chunk-BKLBPOWP.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/list_carousel/list_carousel':{'id':'routes/components/list_carousel/list_carousel','parentId':'root','path':'components/list_carousel/list_carousel','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/list_carousel/list_carousel-XB36XZY2.js','imports':['/build/_shared/chunk-EJMPSTUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/modal/modal_anime':{'id':'routes/components/modal/modal_anime','parentId':'root','path':'components/modal/modal_anime','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/modal/modal_anime-ULACXX7O.js','imports':['/build/_shared/chunk-EJMPSTUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/navbar/Navbar':{'id':'routes/components/navbar/Navbar','parentId':'root','path':'components/navbar/Navbar','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/navbar/Navbar-JYRPGAI5.js','imports':['/build/_shared/chunk-HDGJL45Z.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/news/News':{'id':'routes/components/news/News','parentId':'root','path':'components/news/News','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/news/News-BFAU4676.js','imports':['/build/_shared/chunk-BKROVRPJ.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/components/season_carousel/season_carousel':{'id':'routes/components/season_carousel/season_carousel','parentId':'root','path':'components/season_carousel/season_carousel','index':undefined,'caseSensitive':undefined,'module':'/build/routes/components/season_carousel/season_carousel-W6GE3SMP.js','imports':['/build/_shared/chunk-EJMPSTUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-Z6B5O547.js','imports':['/build/_shared/chunk-BKROVRPJ.js','/build/_shared/chunk-HDGJL45Z.js','/build/_shared/chunk-BKLBPOWP.js','/build/_shared/chunk-BNZWXWSM.js','/build/_shared/chunk-EJMPSTUK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/list/$listId':{'id':'routes/list/$listId','parentId':'root','path':'list/:listId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/list/$listId-UMYNFALJ.js','imports':['/build/_shared/chunk-HDGJL45Z.js','/build/_shared/chunk-BKLBPOWP.js','/build/_shared/chunk-GTT2K62H.js','/build/_shared/chunk-EJMPSTUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/search_page/$search':{'id':'routes/search_page/$search','parentId':'root','path':'search_page/:search','index':undefined,'caseSensitive':undefined,'module':'/build/routes/search_page/$search-H5GM2OBB.js','imports':['/build/_shared/chunk-HDGJL45Z.js','/build/_shared/chunk-BKLBPOWP.js','/build/_shared/chunk-BNZWXWSM.js','/build/_shared/chunk-EJMPSTUK.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-6B77182B.js'};", "\nimport * as entryServer from \"/home/hiniku/Documents/GitHub/ApollosWill/app/entry.server.tsx\";\nimport * as route0 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/root.tsx\";\nimport * as route1 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/season_carousel/season_carousel.tsx\";\nimport * as route2 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_search.tsx\";\nimport * as route3 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_home.tsx\";\nimport * as route4 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/anime_cards/anime_cards_list.tsx\";\nimport * as route5 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/list_carousel/list_carousel.tsx\";\nimport * as route6 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/modal/modal_anime.tsx\";\nimport * as route7 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/navbar/Navbar.tsx\";\nimport * as route8 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/ender/Ender.tsx\";\nimport * as route9 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/components/news/News.tsx\";\nimport * as route10 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/search_page/$search.tsx\";\nimport * as route11 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/list/$listId.tsx\";\nimport * as route12 from \"/home/hiniku/Documents/GitHub/ApollosWill/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/components/season_carousel/season_carousel\": {\n      id: \"routes/components/season_carousel/season_carousel\",\n      parentId: \"root\",\n      path: \"components/season_carousel/season_carousel\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/components/anime_cards/anime_cards_search\": {\n      id: \"routes/components/anime_cards/anime_cards_search\",\n      parentId: \"root\",\n      path: \"components/anime_cards/anime_cards_search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/components/anime_cards/anime_cards_home\": {\n      id: \"routes/components/anime_cards/anime_cards_home\",\n      parentId: \"root\",\n      path: \"components/anime_cards/anime_cards_home\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/components/anime_cards/anime_cards_list\": {\n      id: \"routes/components/anime_cards/anime_cards_list\",\n      parentId: \"root\",\n      path: \"components/anime_cards/anime_cards_list\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/components/list_carousel/list_carousel\": {\n      id: \"routes/components/list_carousel/list_carousel\",\n      parentId: \"root\",\n      path: \"components/list_carousel/list_carousel\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/components/modal/modal_anime\": {\n      id: \"routes/components/modal/modal_anime\",\n      parentId: \"root\",\n      path: \"components/modal/modal_anime\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/components/navbar/Navbar\": {\n      id: \"routes/components/navbar/Navbar\",\n      parentId: \"root\",\n      path: \"components/navbar/Navbar\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/components/ender/Ender\": {\n      id: \"routes/components/ender/Ender\",\n      parentId: \"root\",\n      path: \"components/ender/Ender\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/components/news/News\": {\n      id: \"routes/components/news/News\",\n      parentId: \"root\",\n      path: \"components/news/News\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/search_page/$search\": {\n      id: \"routes/search_page/$search\",\n      parentId: \"root\",\n      path: \"search_page/:search\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/list/$listId\": {\n      id: \"routes/list/$listId\",\n      parentId: \"root\",\n      path: \"list/:listId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route12\n    }\n  };"],
  "mappings": "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",
  "names": []
}
